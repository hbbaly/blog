{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/Butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/algolia.svg","path":"img/algolia.svg","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/alipay.jpg","path":"img/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/comment_bg.png","path":"img/comment_bg.png","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/activate-power-mode.js","path":"js/activate-power-mode.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/baidupush.js","path":"js/baidupush.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/wechat.jpg","path":"img/wechat.jpg","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/nightshift.js","path":"js/nightshift.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/runtimeshow.js","path":"js/runtimeshow.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/third-party/canvas-nest.js","path":"js/third-party/canvas-nest.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/third-party/canvas-ribbon.js","path":"js/third-party/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/third-party/fireworks.js","path":"js/third-party/fireworks.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/third-party/anime.min.js","path":"js/third-party/anime.min.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/third-party/jquery.fancybox.min.js","path":"js/third-party/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/third-party/piao.js","path":"js/third-party/piao.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/js/third-party/jquery.min.js","path":"js/third-party/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/Butterfly/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1}],"Cache":[{"_id":"themes/Butterfly/package.json","hash":"eea8818b46869f323b1bb15f77760efe6c093721","modified":1568269941830},{"_id":"themes/Butterfly/README.md","hash":"50a67fde804586d0f8f103cec9b7a4e325574d0e","modified":1568269941819},{"_id":"themes/Butterfly/_config.yml","hash":"78fee237062dde7eb61d53bcd7f9d4f548cb6781","modified":1568963084018},{"_id":"themes/Butterfly/LICENSE","hash":"c372b56b7553dafd2d8a8abf12d0dd71b4e2bfc0","modified":1568269941819},{"_id":"source/.DS_Store","hash":"31292727051c1e4f3043f39f5a5cbd303aecd7d6","modified":1568560660522},{"_id":"themes/Butterfly/scripts/hexo-plugins.txt","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1568269941830},{"_id":"themes/Butterfly/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1568269941813},{"_id":"themes/Butterfly/.git/config","hash":"c42d9f2ec1914c29109b1a5aac752df7e9e857f8","modified":1568269941815},{"_id":"themes/Butterfly/.git/COMMIT_EDITMSG","hash":"4273b148588e1e1fb26e56a29871c43d71544581","modified":1568559686635},{"_id":"themes/Butterfly/.git/FETCH_HEAD","hash":"c4fbbb3c9456df56d50ea823104306c06ec4ba81","modified":1568962244884},{"_id":"themes/Butterfly/.git/ORIG_HEAD","hash":"890b3777b3b632329e2ad9091c73eca09d58dd81","modified":1568638362550},{"_id":"themes/Butterfly/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1568269931814},{"_id":"themes/Butterfly/.git/index","hash":"09a3e459a0ea656bcc298089eada77429722f082","modified":1568638291938},{"_id":"themes/Butterfly/.git/packed-refs","hash":"0c8ca2a290e69810d0327bd4716702655967c1f7","modified":1568269941811},{"_id":"themes/Butterfly/languages/zh-CN.yml","hash":"6b1b3a0a4c646b475645fbb29fcf9669541b356a","modified":1568269941821},{"_id":"themes/Butterfly/languages/default.yml","hash":"f85dfef78d4ec69172b91fcaa3a033fada921de3","modified":1568269941821},{"_id":"themes/Butterfly/languages/en.yml","hash":"84a6214f433cf10fcf33f1a9f8788c8efc4d3949","modified":1568269941821},{"_id":"themes/Butterfly/languages/zh-TW.yml","hash":"122457b1cd30de082b9024b9374b1891cb0ac298","modified":1568269941821},{"_id":"themes/Butterfly/layout/flink.pug","hash":"c7ff35299be49cdccdf0db6fd0f1b0757dfea488","modified":1568269941822},{"_id":"themes/Butterfly/layout/gallery.pug","hash":"c083a7bbf5f46305daed74632aef3403b7d94dc7","modified":1568269941822},{"_id":"themes/Butterfly/layout/archive.pug","hash":"2a8b01d66fb0c1f4eed0cec831e356acfde1b4e7","modified":1568276855701},{"_id":"themes/Butterfly/layout/category.pug","hash":"670ba03e484c4cfdcaa9b091c58c3c769b121fbb","modified":1568276969070},{"_id":"themes/Butterfly/layout/index.pug","hash":"a027cfd8f61e29a623ed8ba977032f165812d9b0","modified":1568269941829},{"_id":"themes/Butterfly/layout/page.pug","hash":"6206ed5ca8870274be446df660b26c964bb631d1","modified":1568269941829},{"_id":"themes/Butterfly/layout/post.pug","hash":"f4021d08eaef196718017397d21fcf26ecc831b2","modified":1568269941830},{"_id":"themes/Butterfly/layout/tag.pug","hash":"6067dbff530b6a86a406d2aa5d587a68287f1e98","modified":1568276562181},{"_id":"themes/Butterfly/scripts/gallery-tag.js","hash":"74e2e95f8daec619578f4b7dd1ed77cd5907f37e","modified":1568269941830},{"_id":"themes/Butterfly/scripts/note.js","hash":"03d608278de2dc9c6b2af69e8d36c77c0272e2bf","modified":1568269941830},{"_id":"themes/Butterfly/scripts/post-lazyload.js","hash":"01f1582e4e1b7f08ed1d128ee2811c6d980e3aed","modified":1568559675983},{"_id":"themes/Butterfly/scripts/random_cover.js","hash":"f3aedef87cd801cb5c7fac5721fddd12ba1b2640","modified":1568269941830},{"_id":"themes/Butterfly/scripts/related_post.js","hash":"90d7e1c052b6529bee6736ac1f2dee08fc3d8b46","modified":1568269941830},{"_id":"themes/Butterfly/scripts/replace-config.js","hash":"4acb5a4519e1b5a29c23c83d1f70c1e298931e30","modified":1568269941831},{"_id":"themes/Butterfly/scripts/tags.js","hash":"9171f9149cebc101dec92be0476c3633aa852e6d","modified":1568269941831},{"_id":"themes/Butterfly/scripts/url_check.js","hash":"f3b533517dc5fc6d49dd34103f1ad91dcd6d0e87","modified":1568269941831},{"_id":"source/_data/link.yml","hash":"11faecce47bdeccb67f24b6f7b5f8349beee5012","modified":1568641856838},{"_id":"source/_data/butterfly.yml","hash":"621c78257e7dfac46130bbb39c9916d1b22d85e9","modified":1570896361925},{"_id":"source/about/index.md","hash":"59309856b5b0bf659405a090ca65c541f8cb377c","modified":1568641847314},{"_id":"source/categories/index.md","hash":"1b37110e4b149685ad9698d3ae696a98d0819308","modified":1568641842089},{"_id":"source/_posts/css-1.md","hash":"bc8f0390f45086e097efd248bb94f7c078444c8d","modified":1568645303606},{"_id":"source/_posts/crawler.md","hash":"fa9d98404437742c36d53f18e88030ee4bc2816e","modified":1568641576377},{"_id":"source/_posts/css-3.md","hash":"1be636def1d87e499bafff23a9f0c2f5b0fd84e6","modified":1568734060194},{"_id":"source/_posts/css-2.md","hash":"346da02bf10a9237f0e2f903d3d312419078e897","modified":1568684164439},{"_id":"source/_posts/hello-world.md","hash":"ea4cb57a73e2a1df09d637db454d1c40d55b24b5","modified":1568641444976},{"_id":"source/_posts/html-2.md","hash":"b4ec3dc109d97694e5a84af3ce087550cf0ae4b2","modified":1568645122169},{"_id":"source/_posts/html-1.md","hash":"ba1e870e6ae19963c84e6eb741c81f0744caa0f0","modified":1568645087004},{"_id":"source/_posts/js-1.md","hash":"d966dcc8320d8ed9a44afbd1be90efd20d72d5ec","modified":1568944065507},{"_id":"source/_posts/js-11.md","hash":"ddd431b9876507f2ba161a465be8b2fe0b349869","modified":1568857124615},{"_id":"source/_posts/js-10.md","hash":"b81772a142e038cd2ccad9befe038927d5451c3e","modified":1568856270394},{"_id":"source/_posts/js-12.md","hash":"723674a6b92eec176569c0c238609841c9501bfa","modified":1568941704785},{"_id":"source/_posts/js-13.md","hash":"65771f6011be46c8fd8218e059722cc5f26444b1","modified":1568942034902},{"_id":"source/_posts/js-15.md","hash":"7b5b3481f8ee2e279c458bb58088329726d91fad","modified":1568943270366},{"_id":"source/_posts/js-14.md","hash":"7d5c95ed80bdc31f5d60a0b7fe12e8faab422e57","modified":1568942566140},{"_id":"source/_posts/js-16.md","hash":"880883b2fc8e9d09d1da658b161032a3327b9d4c","modified":1568943737442},{"_id":"source/_posts/js-17.md","hash":"90c1ce9bfed09a1911f26667655d3c50caad4475","modified":1568944048666},{"_id":"source/_posts/js-4.md","hash":"b02829ba993bdc313855e2b813f789766af1de62","modified":1568944096672},{"_id":"source/_posts/js-2.md","hash":"d6cd7d647db02dc220bc7f0e240ab073bd0e1eae","modified":1568944070335},{"_id":"source/_posts/js-3.md","hash":"f3e429a28f7e997d68c819a2c9bb7d0b6986227a","modified":1568944081660},{"_id":"source/_posts/js-5.md","hash":"4f15390f7ac9209dbf496f3fcaf70277f8043b7b","modified":1568768598774},{"_id":"source/_posts/js-7.md","hash":"86c11fa76e85a2b2e71bc68d32c1a5630f110f64","modified":1568944125100},{"_id":"source/_posts/js-6.md","hash":"dd3af541fd88c78439353279ebe1f563d04891c3","modified":1568769165884},{"_id":"source/_posts/js-8.md","hash":"15d7b83b4d74d6c1d539ab71836fb15b62ca5fd8","modified":1568770205688},{"_id":"source/_posts/js-9.md","hash":"ccb6c6f1fd63d1e65ec091b89f48674e04f7e778","modified":1568770897138},{"_id":"source/_posts/vue-2.md","hash":"3fea6445d84ef15d7d01268b5c764abb2a8d8a25","modified":1570898019740},{"_id":"source/_posts/vue-1.md","hash":"1219bfb71d1f198e2012fa8e3b1705c2bd39e3ec","modified":1568641566687},{"_id":"source/_posts/vue-3.md","hash":"1b67e60359cdf9c1b6dc36bb301e3d7c7342758c","modified":1570900440611},{"_id":"source/_posts/vue-6.md","hash":"728413512b030d65aa2ecfa8738f828ee34a1690","modified":1570976589944},{"_id":"source/_posts/vue-4.md","hash":"50cba3eafb7a34777f25cb9ba1bb735e9a546ebc","modified":1570975380385},{"_id":"source/_posts/vue-5.md","hash":"36f4c7087faa344caaaa78613bf982f309d79d3e","modified":1570976070176},{"_id":"source/_posts/vue-7.md","hash":"467157ab02eb01ad81d9670a174f3ed351e6e5e6","modified":1570977225024},{"_id":"source/link/index.md","hash":"3caf61ce19adaae347707175009f87b9cc57da07","modified":1568641836724},{"_id":"source/tags/index.md","hash":"ca2f1b45bf6e743fc20c8e2510cb30689a5649a9","modified":1568641833094},{"_id":"themes/Butterfly/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1568269931815},{"_id":"themes/Butterfly/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1568269931816},{"_id":"themes/Butterfly/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1568269931814},{"_id":"themes/Butterfly/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1568269931815},{"_id":"themes/Butterfly/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1568269931817},{"_id":"themes/Butterfly/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1568269931817},{"_id":"themes/Butterfly/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1568269931815},{"_id":"themes/Butterfly/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1568269931816},{"_id":"themes/Butterfly/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1568269931816},{"_id":"themes/Butterfly/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1568269931817},{"_id":"themes/Butterfly/.git/info/exclude","hash":"bb5a85730dcf100facee799c05cc4f6affec0745","modified":1568269931813},{"_id":"themes/Butterfly/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1568269931817},{"_id":"themes/Butterfly/.git/logs/HEAD","hash":"db9b4e8f41949fe5d8ceed2747a6b4a5b43b28fe","modified":1568638362552},{"_id":"themes/Butterfly/layout/includes/aside.pug","hash":"6e421ec7964024f1e3ad10cb00d3808dc33c6c72","modified":1568269941823},{"_id":"themes/Butterfly/layout/includes/additional-js.pug","hash":"df43a1e6de81d6ea055215119126eeec57b0155f","modified":1568269941822},{"_id":"themes/Butterfly/layout/includes/config.pug","hash":"6bf537b2ca37c6a0c1d3a007db41365385ec171b","modified":1568269941825},{"_id":"themes/Butterfly/layout/includes/footer.pug","hash":"7c75688041eea052674b6b7d92eca1d6551d17ff","modified":1568269941825},{"_id":"themes/Butterfly/layout/includes/layout.pug","hash":"ff79fdeced530d62794442477ba2fd1c6f6221a5","modified":1568269941826},{"_id":"themes/Butterfly/layout/includes/head.pug","hash":"a8b6cfc40ec90fee04be77e030ccefe9c652f19d","modified":1568269941826},{"_id":"themes/Butterfly/layout/includes/header.pug","hash":"36cb03c8c1c751c879bb6fd023c00944491f10e8","modified":1568269941826},{"_id":"themes/Butterfly/layout/includes/pagination.pug","hash":"7c7b8e9f9b089ef3f06f4e94d6640e004a7dd6da","modified":1568269941826},{"_id":"themes/Butterfly/layout/includes/post-bottom.pug","hash":"cdd67135e2202ee13062c5acf7380f558ca4aee1","modified":1568269941826},{"_id":"themes/Butterfly/layout/includes/reward.pug","hash":"1c2a094e1e43d15181cdd8fa0dc7ffccf6aa178d","modified":1568269941827},{"_id":"themes/Butterfly/layout/includes/rightside.pug","hash":"d54bab27edca495e94635b42a230d7a6364c817a","modified":1568269941827},{"_id":"themes/Butterfly/layout/includes/recent-posts.pug","hash":"a94ce2cd4cc5a243cdb72504ac1c7031abfa7211","modified":1568269941827},{"_id":"themes/Butterfly/layout/includes/nav.pug","hash":"c9a975d0274c7256ed4fd6c66f6acd39b9878040","modified":1568269941826},{"_id":"themes/Butterfly/layout/includes/sidebar.pug","hash":"b076fa6fd08dbcfd743a4f5982f89ad84791573a","modified":1568269941828},{"_id":"themes/Butterfly/source/css/index.styl","hash":"8ab00778fb1f9d688b8bfee50b98273f85769a09","modified":1568269941834},{"_id":"themes/Butterfly/source/img/404.jpg","hash":"8cb144815552af8ca374dda8a11c14f6223cea29","modified":1568269941834},{"_id":"themes/Butterfly/source/img/algolia.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1568269941835},{"_id":"themes/Butterfly/source/css/var.styl","hash":"cc663aa2b04a845854a850acd7638e4b06fcf219","modified":1568269941834},{"_id":"themes/Butterfly/source/img/alipay.jpg","hash":"15fe334cfbdd135006d3c77ed566e9de96350399","modified":1568597163042},{"_id":"themes/Butterfly/source/img/favicon.ico","hash":"97d53bd0909e11ef103ebbad53bf929a5a6c770c","modified":1568270807430},{"_id":"themes/Butterfly/source/img/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1568269941836},{"_id":"themes/Butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1568269941837},{"_id":"themes/Butterfly/source/js/activate-power-mode.js","hash":"e7ee1a178d613ba6293e4b622ea1b6ae16b0da45","modified":1568269941838},{"_id":"themes/Butterfly/source/js/baidupush.js","hash":"276a58782b574ec42bf434e4e8bea623437634d4","modified":1568269941838},{"_id":"themes/Butterfly/source/img/wechat.jpg","hash":"2a54f2648a2786aad04b145f60f051fe4da14725","modified":1568597158908},{"_id":"themes/Butterfly/source/js/main.js","hash":"1a00bcaea762f7f0fed6fb4e93978629a1dd5e1a","modified":1568269941838},{"_id":"themes/Butterfly/source/js/nightshift.js","hash":"5c5d7f143b6e91dc631058fedc1831f982726464","modified":1568269941839},{"_id":"themes/Butterfly/source/js/runtimeshow.js","hash":"949f87716cc331268f8b9c2f6d523ae6870755bc","modified":1568269941839},{"_id":"themes/Butterfly/source/js/utils.js","hash":"89b8b6d0f629d85bd60025a92bb43661f5ee9f47","modified":1568269941841},{"_id":"themes/Butterfly/source/js/tw_cn.js","hash":"33acda08bd1654622f532b159506939dc975fc7c","modified":1568269941841},{"_id":"source/_posts/img/vue-2.png","hash":"81bd8801e7b048da7ca320c3821a45eb73482f73","modified":1570897248952},{"_id":"themes/Butterfly/layout/includes/gallery/script.pug","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1568269941825},{"_id":"themes/Butterfly/.git/objects/08/a4152263b24a2b42d5d2da4d06e26528e49500","hash":"301864b74d48987cd0b3f224328b813a490376c3","modified":1568961851914},{"_id":"themes/Butterfly/.git/objects/2b/00cbdd04cbea51fb220f45ed64ef8a83674795","hash":"2c05f3b25471ad1dbad710e915e6d503d6dbe2a5","modified":1568961851912},{"_id":"themes/Butterfly/.git/objects/29/3a9520e743f0eb7e458fff856be35dbd30bc6d","hash":"26b3484769406c5ff23b928045283d009804ee68","modified":1568638291000},{"_id":"themes/Butterfly/.git/objects/22/19f2893623443f11ae5683344101a56c5e7326","hash":"f1684b8f734e0cf2f7044b4062211b2b20b6224d","modified":1568558910957},{"_id":"themes/Butterfly/.git/objects/2e/b573e51d6db9e7b4db74f9216b4be30e4ccb7b","hash":"233a9d0cf8d3efc10b21d0c9ea039674c25480e9","modified":1568559690000},{"_id":"themes/Butterfly/.git/objects/3d/09a9331b5232a5435447bc72e176b94683b74e","hash":"77e1afdf30d3d8a78d8e980cb1dcb8c0fd6b0459","modified":1568961851331},{"_id":"themes/Butterfly/.git/objects/51/288ec8b64097c10a0830b61740206668842b16","hash":"7ea0f92f26add1f6b754e462f721688e03ea2d95","modified":1568961851329},{"_id":"themes/Butterfly/.git/objects/60/b8f25b23ee0594ba55edc6cc3a88e658d251ac","hash":"33f698fa485a15bfc4ab803e1dab431839b7abb8","modified":1568961851332},{"_id":"themes/Butterfly/.git/objects/50/7fd938582ada7ef99afcd626030a6b47b3f3d7","hash":"345361dc271b6f05570efaa58968b64779d6fe00","modified":1568559681097},{"_id":"themes/Butterfly/.git/objects/5a/a151aec0ebb2194ec7d751184e62af24563f72","hash":"712e2873eae99ec3ce8bd27c4643c394d438ac37","modified":1568638291000},{"_id":"themes/Butterfly/.git/objects/7d/4943640cb969060b6c207859ac8785bf79ed72","hash":"7a13e9d0042f8a4f3e34fb6ccb7159d0cc51c9d8","modified":1568961851913},{"_id":"themes/Butterfly/.git/objects/6c/eef1d25b6de9c36b08b7559a1e2bd07740df4d","hash":"c5c133966ef5971ca6d88415b5bab7a146855d82","modified":1568559681098},{"_id":"themes/Butterfly/.git/objects/65/529c5d0f2b7ebb47c6fb5df9bd8b1b1909a9bc","hash":"a4d0b7adeed2ea37183529ccea942f563de4ec6c","modified":1568559686633},{"_id":"themes/Butterfly/.git/objects/80/c7181a6a24470e130fb2462c3a12e827c1b05e","hash":"34a372ccc3bc6baab679eb0a1c109cc6959da9af","modified":1568961851910},{"_id":"themes/Butterfly/.git/objects/83/5568bc75cde94da0aa6d6033eee4e52648e855","hash":"856512ec43e5950d8666575022291be1a67c4bf4","modified":1568558910955},{"_id":"themes/Butterfly/.git/objects/86/cd1dd654e7a7b41823cf062d902b02294dda34","hash":"dd47c0135e9335064932b38b000cc1aa0dcc62f8","modified":1568558910956},{"_id":"themes/Butterfly/.git/objects/98/676870a1b1dc1bada7abda7a3e490cc252859a","hash":"a20f7fb4bad2b8a1f3df106ea99599bf6ab66634","modified":1568961851909},{"_id":"themes/Butterfly/.git/objects/a4/b21e13e39501d6d8e8f421a094334dc745d559","hash":"c52dbce1ee5951e9d7061e42e214fea089441b13","modified":1568559690000},{"_id":"themes/Butterfly/.git/objects/9f/763946dd6606addeab24e40e2369124d53a048","hash":"dbe59ba55a1f66379fc1c4559aaac5596acd3b9d","modified":1568961851917},{"_id":"themes/Butterfly/.git/objects/94/c51b5d041ecd5ebc458434563ee3a6f3ad97a8","hash":"44acdefe6830e8c51084865bd45413bd3aac97ec","modified":1568961851330},{"_id":"themes/Butterfly/.git/objects/ad/87c611263223072b177bd23ff195e140a40570","hash":"f63657dbfc0d64565b6b2450e57a80b2f871ebd1","modified":1568559686635},{"_id":"themes/Butterfly/.git/objects/bb/9667b1a13235a18b6d32acd9d45e18a3abcec6","hash":"bd8e6e9c1f59be1c07d5d61908482e6ebe99d882","modified":1568559690000},{"_id":"themes/Butterfly/.git/objects/af/b72dc157c8afe29388f5d07a5afcc2048e02e9","hash":"95c56ad7715bfe2c4a91d1f140a7b169906d3cdd","modified":1568558910962},{"_id":"themes/Butterfly/.git/objects/c5/2d7ab66a705402d2c8997ce98547577788a9a7","hash":"894a589f3ada0fce2da0719271a0fd66e14ee73e","modified":1568961851916},{"_id":"themes/Butterfly/.git/objects/db/ce8552ca64159e87dc029c1750beaee69b0018","hash":"f90d28ec5dcc126f8b82c80f9795a092c1eedf59","modified":1568558910957},{"_id":"themes/Butterfly/.git/objects/de/65facf92fb118e1a0c24addcef919dd0603e43","hash":"e40906ebffbd882a3b1eae9028aa45988ad445c0","modified":1568961851912},{"_id":"themes/Butterfly/.git/objects/e7/fcf15572b5905a90ebc1443306c25c420ee40e","hash":"280c1aefe56dd1b5c00ca90c6632f165f4add372","modified":1568559686632},{"_id":"themes/Butterfly/.git/objects/c4/3483b7bf786aadfde70bbad2c2c5d57fd9e750","hash":"d403cf0c33446b8b815e687a90bb683bb15d3c23","modified":1568559690223},{"_id":"themes/Butterfly/.git/objects/e9/4d32354b6e38a2b027c564908be1c513e92954","hash":"5a45ac3efabcac8a1a4e82f9b0fc7bf0a829191c","modified":1568559690224},{"_id":"themes/Butterfly/.git/objects/f6/d70e5863f360fd57cbbb7bfb7242de54020102","hash":"a8aa0567d40fb205b42008b720cbf3a67f961992","modified":1568961851331},{"_id":"themes/Butterfly/.git/objects/f1/f1db98d981225a0f43ae6ed071c53b34c7de0e","hash":"52bf65548dd49276037c2c97c782343e60bedbeb","modified":1568558910959},{"_id":"themes/Butterfly/.git/objects/ca/7233d54169f8e6fc32366e494ef5bc67acff88","hash":"b5dc00a3d1f35a5bc5e3368b447d450e778ef21d","modified":1568638291936},{"_id":"themes/Butterfly/.git/objects/pack/pack-9707d1d95c988681b7008ddc099d1b681bcd8cc0.idx","hash":"3f378c59b80c1092f29c00c9753e0d7e4efeaae1","modified":1568269941802},{"_id":"themes/Butterfly/.git/refs/heads/master","hash":"b28893ceca41fc6e03e3d57213bfd20480cfe8dd","modified":1568638362551},{"_id":"themes/Butterfly/.git/objects/fc/fb7933b0a3a4eddfd8c78a3d3a5c0161205ff1","hash":"4819b7d0f73d674a9c35f985c69753f31e17f85a","modified":1568559686632},{"_id":"themes/Butterfly/.git/objects/fb/4a0b43e411014812a7876c46e14b753e8f0c3a","hash":"9d97ad9e98f9ed3e1d30c2cb1daaa8085593b770","modified":1568638291938},{"_id":"themes/Butterfly/layout/includes/comments/disqus.pug","hash":"37357152952f1d8f7f9eac390baaae29647e8b69","modified":1568269941823},{"_id":"themes/Butterfly/layout/includes/comments/gitalk.pug","hash":"6625a67310e335728570f69afb2b0febc02df85b","modified":1568559690218},{"_id":"themes/Butterfly/layout/includes/comments/gitment.pug","hash":"0b7cd8b0b114876238ca022abda4c1fcdfaee12f","modified":1568269941823},{"_id":"themes/Butterfly/.git/objects/fb/d972383745547e4f6cea52fcba9901f8af01d7","hash":"31f4ab224f8dd74e52ef8161e5ab3f52a9a00284","modified":1568961851333},{"_id":"themes/Butterfly/layout/includes/comments/index.pug","hash":"2f1254d34c1b7f543f5c05fb2cb113a49e5bef81","modified":1568269941824},{"_id":"themes/Butterfly/layout/includes/comments/valine.pug","hash":"6fd7b8e80fb59d64824cc815e6c9fe12fc0fe375","modified":1568269941824},{"_id":"themes/Butterfly/layout/includes/comments/laibili.pug","hash":"97de1d1fb0459e7a2394ac2f5e449adf9b6986cb","modified":1568269941824},{"_id":"themes/Butterfly/layout/includes/gallery/layout.pug","hash":"8ff96c4f9afb416c5fc586c9585ae51cb6129529","modified":1568269941825},{"_id":"themes/Butterfly/layout/includes/mixins/article-sort.pug","hash":"297b098dc6bba73b76bac4cf6bcd0c29d5dcb2ed","modified":1568276745696},{"_id":"themes/Butterfly/layout/includes/search/algolia.pug","hash":"44d5a061df53a276d22b3855652645d90117d0b6","modified":1568269941827},{"_id":"themes/Butterfly/layout/includes/search/index.pug","hash":"b01828b37d789797aeb5433f1705cff3c540a4d5","modified":1568269941827},{"_id":"themes/Butterfly/layout/includes/search/local-search.pug","hash":"bc3d9694f3f3f3d4d95e8ccadbf6e27a61093c6d","modified":1568269941827},{"_id":"themes/Butterfly/layout/includes/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1568269941827},{"_id":"themes/Butterfly/layout/includes/share/addtoany.pug","hash":"905b48d3ff440c1ce9e19fb6b32d0f5bd5e88ab7","modified":1568269941828},{"_id":"themes/Butterfly/layout/includes/share/index.pug","hash":"c341aaa00113681b22f945f5004e6b22c8a0ca69","modified":1568269941828},{"_id":"themes/Butterfly/layout/includes/share/share-js.pug","hash":"55a65c2f5bb7deff2d61f0ad06c535b916baf6b1","modified":1568269941828},{"_id":"themes/Butterfly/layout/includes/third-party/canvas-nest.pug","hash":"d807867bd75271c39b191c36e440fd4ab4c86723","modified":1568269941828},{"_id":"themes/Butterfly/layout/includes/third-party/canvas-ribbon-piao.pug","hash":"2beb85258ec0f065d46eac2e5634274aef703503","modified":1568269941828},{"_id":"themes/Butterfly/layout/includes/third-party/canvas-ribbon.pug","hash":"953ac96a913e8737bba391bae35ed5a2906c4ccf","modified":1568269941828},{"_id":"themes/Butterfly/layout/includes/third-party/katex.pug","hash":"9a95ce685cf9e23f2e2c069c0d919185a8837ea7","modified":1568269941828},{"_id":"themes/Butterfly/layout/includes/third-party/mathjax.pug","hash":"33b350f9826795cd59d9e277a24accc8a9bc9076","modified":1568269941828},{"_id":"themes/Butterfly/layout/includes/widget/card_archives.pug","hash":"ddd750cc1655980b4cf30393c84c34101f7f1e0d","modified":1568269941829},{"_id":"themes/Butterfly/layout/includes/widget/card_announcement.pug","hash":"531fde2c1409d638989615e906dea6ac1dd09fab","modified":1568269941829},{"_id":"themes/Butterfly/layout/includes/widget/card_author.pug","hash":"25292fdb51eefdbe414bfda037396975d1b7f3f6","modified":1568269941829},{"_id":"themes/Butterfly/layout/includes/widget/card_categories.pug","hash":"2ca228a61fba9046e8bf327ac340c50757b4a7d1","modified":1568269941829},{"_id":"themes/Butterfly/layout/includes/widget/card_recent_post.pug","hash":"44e26f0008ba036ff1dce8edcf71c8ce657662d0","modified":1568269941829},{"_id":"themes/Butterfly/layout/includes/widget/card_tags.pug","hash":"8ebd3686e9377cc7cc0899ad991eb3dd061aca06","modified":1568269941829},{"_id":"themes/Butterfly/layout/includes/widget/card_webinfo.pug","hash":"78b40c166a2e17790ff0c6a1ff1ea4517dd378b2","modified":1568269941829},{"_id":"themes/Butterfly/source/css/_global/index.styl","hash":"208044051b6eb64f03c046008f85e16b0489a481","modified":1568269941831},{"_id":"themes/Butterfly/source/css/_highlight/diff.styl","hash":"b0079f6da761935b720d70dafd826ef62fad86d2","modified":1568269941831},{"_id":"themes/Butterfly/source/css/_highlight/highlight.styl","hash":"e8d1e0d9f0ebef428aca01863b93b449a1325294","modified":1568269941831},{"_id":"themes/Butterfly/source/css/_highlight/theme.styl","hash":"7d85860927afa1d93b4a39febff3d95a73de4c36","modified":1568269941831},{"_id":"themes/Butterfly/source/css/_layout/category.styl","hash":"e5d6838c72cf81122df6c7a03d53b89aab8277b7","modified":1568269941832},{"_id":"themes/Butterfly/source/css/_layout/comments.styl","hash":"e58602aad6792f1a5dbda0677ecb04d21ac10e97","modified":1568269941832},{"_id":"themes/Butterfly/source/css/_layout/aside.styl","hash":"10a6d284c9a2444d009c44fc0c008cc8323f7de0","modified":1568269941831},{"_id":"themes/Butterfly/source/css/_layout/flink.styl","hash":"798e62292590cd604e774dff5f209beb5bf9ce49","modified":1568269941832},{"_id":"themes/Butterfly/source/css/_layout/footer.styl","hash":"107c7aec8cb8c233d080d0a590b49a86a443f5c0","modified":1568269941832},{"_id":"themes/Butterfly/source/css/_layout/head.styl","hash":"90735e7d73e76b29ab994cb6d0a0f37c5100f26c","modified":1568269941832},{"_id":"themes/Butterfly/source/css/_layout/nightshift.styl","hash":"2bf1439582da06dc1ff8b590abc3830bc709eb7a","modified":1568269941832},{"_id":"themes/Butterfly/source/css/_layout/note.styl","hash":"377c1384d79f8f0836e50978a90bb38625aeb5b5","modified":1568269941832},{"_id":"themes/Butterfly/source/css/_layout/page.styl","hash":"37e2350aa60792dc6f08b85249f885a92232fd50","modified":1568269941832},{"_id":"themes/Butterfly/source/css/_layout/pagination.styl","hash":"27b68e64b94f09c8e49c7da43abca8f96981759a","modified":1568269941832},{"_id":"themes/Butterfly/source/css/_layout/post.styl","hash":"b913cf6c686d63cf6dd8eb6b074e5f4249b46459","modified":1568269941833},{"_id":"themes/Butterfly/source/css/_layout/post_bottom.styl","hash":"6853afea311b61b56ea2ff20a8efd11bf99f613e","modified":1568269941833},{"_id":"themes/Butterfly/source/css/_layout/readmode.styl","hash":"d47d382a9f043c19a425db919e57cbf1f125bade","modified":1568269941833},{"_id":"themes/Butterfly/source/css/_layout/relatedposts.styl","hash":"12d2dddd3dd330f5aaebd544c08c3669bab8ccc2","modified":1568269941833},{"_id":"themes/Butterfly/source/css/_layout/reward.styl","hash":"eaa2c4c26b0df9bc129acd1aa3fd6c3489bf3a1a","modified":1568269941833},{"_id":"themes/Butterfly/source/css/_layout/sidebar.styl","hash":"96af1d243733b616adaa468690e135b3c282b07e","modified":1568269941833},{"_id":"themes/Butterfly/source/css/_layout/z-other.styl","hash":"da32cb13d42335aae32021d62769d4c2958354bd","modified":1568269941833},{"_id":"themes/Butterfly/source/css/_search/algolia.styl","hash":"534e5641e3efe2452db95cc25ec8da0111ceadcf","modified":1568269941833},{"_id":"themes/Butterfly/source/css/_search/index.styl","hash":"63cae4465ac54b71361c1795206534c7f2e6e5b1","modified":1568269941833},{"_id":"themes/Butterfly/source/css/_search/local-search.styl","hash":"c4f3ac6eafc84883e921be8966e86ae7e085681d","modified":1568269941833},{"_id":"themes/Butterfly/source/css/_third-party/jquery.fancybox.min.css","hash":"f9c94ec04062a1bfe1ef894c49e6ec33fa121778","modified":1568269941834},{"_id":"themes/Butterfly/source/css/_third-party/normalize.min.css","hash":"e12eef6d6811c132f4f2fcf6c936be384191bcaf","modified":1568269941834},{"_id":"themes/Butterfly/source/js/search/algolia.js","hash":"bf5d87cb632176020a7a952ead4d285da91a5a91","modified":1568269941839},{"_id":"themes/Butterfly/source/js/search/local-search.js","hash":"84bed9c4e4a4d0ec5c6615e7bfdf81e96f6e76d1","modified":1568269941839},{"_id":"themes/Butterfly/source/js/third-party/canvas-nest.js","hash":"956eada198babd00f028e8908767cb158926c3f3","modified":1568269941840},{"_id":"themes/Butterfly/source/js/third-party/canvas-ribbon.js","hash":"5f66d8b7a436e922b08c184720556ddd1e100f6a","modified":1568269941840},{"_id":"themes/Butterfly/source/js/third-party/fireworks.js","hash":"411ced4031a856a5b87f7c62d3800027d12bacec","modified":1568269941840},{"_id":"themes/Butterfly/source/js/third-party/anime.min.js","hash":"3c46c9597c721644a515c1c54ab13f46406657f7","modified":1568269941839},{"_id":"themes/Butterfly/source/js/third-party/jquery.fancybox.min.js","hash":"2ec3ef6c31b971ba5e58eb4a0c5ede902bbdd4af","modified":1568269941840},{"_id":"themes/Butterfly/source/js/third-party/piao.js","hash":"df687981381345c735c5db5e4ff16bfc256d2a39","modified":1568269941841},{"_id":"themes/Butterfly/source/js/third-party/jquery.min.js","hash":"1055018c28ab41087ef9ccefe411606893dabea2","modified":1568269941841},{"_id":"themes/Butterfly/.git/logs/refs/heads/master","hash":"db9b4e8f41949fe5d8ceed2747a6b4a5b43b28fe","modified":1568638362552},{"_id":"themes/Butterfly/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1568269941813},{"_id":"themes/Butterfly/.git/refs/remotes/origin/dev","hash":"59065e975eddbdb5ac3d115c240b3e518613640c","modified":1568961851930},{"_id":"themes/Butterfly/.git/refs/remotes/origin/master","hash":"c94b61c84f47963d7254d79dab448b7524960906","modified":1568558910971},{"_id":"themes/Butterfly/.git/logs/refs/remotes/origin/HEAD","hash":"ed8c9cb0ed916f03d6578e7e9f2bb53d6eb76517","modified":1568269941813},{"_id":"themes/Butterfly/.git/logs/refs/remotes/origin/master","hash":"2c0e23f07329818673187e42e3b85c57b674cf00","modified":1568558910971},{"_id":"themes/Butterfly/.git/logs/refs/remotes/origin/dev","hash":"d5205855d1ddbabed3ebb1063264947f94871229","modified":1568961851931},{"_id":"themes/Butterfly/source/img/avatar.png","hash":"dd1a6f2463665a2d3b89329f0fa2cde5ee823a2a","modified":1568269941836},{"_id":"themes/Butterfly/.git/objects/pack/pack-9707d1d95c988681b7008ddc099d1b681bcd8cc0.pack","hash":"42246db6b8a3a7975b268c4dfaae558e62e7fa11","modified":1568559686000},{"_id":"source/_posts/vue-8.md","hash":"22ac1630036ee277750bb78675065dd73839a3d2","modified":1570978236997}],"Category":[{"name":"css","_id":"ck1p3g29f0004n0b9qv6s09qp"},{"name":"node","_id":"ck1p3g29n000an0b9w7ww2tfp"},{"name":"Html","_id":"ck1p3g29v000nn0b91fk903p1"},{"name":"js","_id":"ck1p3g2a0000zn0b9leke74qz"},{"name":"regular","_id":"ck1p3g2ad0020n0b9xpduxoyc"},{"name":"Vue","_id":"ck1p3g2ah002bn0b9n8pj17cr"}],"Data":[{"_id":"link","data":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}}},{"_id":"butterfly","data":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true}}],"Page":[{"title":"about","date":"2016-01-12T07:03:40.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2016-01-12 15:03:40\n---\n","updated":"2019-09-16T13:50:47.314Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck1p3g2990000n0b9uwu89sgb","content":"","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":""},{"title":"categories","date":"2016-01-12T07:03:40.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-01-12 15:03:40\ntype: \"categories\"\n---\n","updated":"2019-09-16T13:50:42.089Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ck1p3g29d0002n0b9aowfdk4j","content":"","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":""},{"title":"link","date":"2016-01-12T07:03:40.000Z","type":"link","_content":"","source":"link/index.md","raw":"---\ntitle: link\ndate: 2016-01-12 15:03:40\ntype: \"link\"\n---\n","updated":"2019-09-16T13:50:36.724Z","path":"link/index.html","comments":1,"layout":"page","_id":"ck1p3g29h0006n0b9l6ks25w6","content":"","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":""},{"title":"tags","date":"2016-01-12T07:03:40.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-01-12 15:03:40\ntype: \"tags\"\n---\n","updated":"2019-09-16T13:50:33.094Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ck1p3g2ba003on0b95ztys992","content":"","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":""}],"Post":[{"title":"CSS3-filter应用","comments":1,"description":"CSS3-filter应用 css3 filter","date":"2016-03-12T01:10:20.000Z","keywords":"html, css ,CSS3-filter应用","_content":"\n## 概述\n`CSS3filter`主要是用来处理图片。`filter`兼容性目前不是很好，`IE11`及以下不兼容，`Edg`需要带上前缀。`chrome，Firefox，Opera`浏览器都兼容。实在想用它的话，就放弃兼容`IE`浏览器吧！\n\n## `CSS3-filter`应用\n  ![左边为原图，右边是修改filter函数的取值](http://www.hbbaly.com/wp-content/uploads/2017/09/filter.png)\n\n## `filter`函数的取值\n\n`grayscale`灰度\n`sepia`褐色（求专业指点翻译）\n`saturate`饱和度\n`hue-rotate`色相旋转\n`invert`反色\n`opacity`透明度\n`brightness`亮度\n`contrast`对比度\n`blur`模糊\n`drop-shadow`阴影\n\n下面一个一个测试这10个。\n````html\n<div class=\"img\">\n  <img src=\"img/car.jpg\" alt=\"\">\n  <img src=\"img/car.jpg\" alt=\"\">\n</div>\n```\n```css\n.img{\n  width:100%;\n  height:400px;\n  display: -webkit-flex;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: center;\n  margin-top:10px;\n}\nimg{\n  display: block;\n  margin-top:10px;\n  width:800px;\n  height:400px;\n}\n.img img:nth-child(2){\n  -webkit-filter: grayscale(70%); /*grayscale灰度*/\n  filter:grayscale(70%);\n}\n```\n（如果代码没有特殊说明均为此代码）\n\n`CSS3-filter`应用\n左边为原图，右边为改动\n\n### `grayscale`\n\n将图像转换为灰度图像，值定义转换的比例。值为100%则完全转为灰度图像，值为0%图像无变化，默认为0。\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/gray.png)\n\n### `sepia`\n\n将图像转换为深褐色，值定义转换的比例。值为100%则完全是深褐色的，值为0%图像无变化，值默认是0\n```css\n.img img:nth-child(2){\n  -webkit-filter: sepia(70%);/*褐色*/\n  filter:sepia(70%);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/sepia.png)\n\n### `saturate`\n\n转换图像饱和度，值定义转换的比例。值为0%则是完全不饱和，值为100%则图像无变化。其他值，超过100%的值是允许的，则有更高的饱和度，值默认是1。\n```css\n.img img:nth-child(2){\n  -webkit-filter: saturate(70%);/*saturate饱和度*/\n  filter: saturate(70%);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/saturate.png)\n\n### `invert`\n\n反转输入图像，值定义转换的比例。100%的价值是完全反转，值为0%则图像无变化。，值默认是0。\n```css\n.img img:nth-child(2){\n  -webkit-filter: invert(70%);/*invert反色*/\n  filter: invert(70%);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/invert-1.png)\n\n### opacity`\n\n转化图像的透明程度，值定义转换的比例。值为0%则是完全透明，值为100%则图像无变化。，值默认是1。\n\n```css\n.img img:nth-child(2){\n  -webkit-filter: opacity(.7);/*opacity*/\n  filter: opacity(.7);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/opacity.png)\n\n### `hue-rotate`\n\n给图像应用色相旋转，\"angle\"一值设定图像会被调整的色环角度值。值为0deg，则图像无变化，默认值是0deg。该值虽然没有最大值，超过360deg的值相当于又绕一圈。\n\n```css\n.img img:nth-child(2){\n  -webkit-filter: hue-rotate(120deg);/*hue-rotate色相旋转*/\n  filter: hue-rotate(120deg);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/brightness.png)\n\n\n### `brightness`\n\n使图片看起来更亮或更暗。如果值是0%，图像会全黑。值是100%，则图像无变化。，值超过100%也是可以的，图像会比原来更亮。如果没有设定值，默认是1。\n```css\n.img img:nth-child(2){\n  -webkit-filter: brightness(5);/* brightness亮度*/\n  filter: brightness(5);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/brightness.png)\n\n\n### `contrast`\n\n调整图像的对比度，值是0%的话，图像会全黑。值是100%，图像不变。值可以超过100%，默认是1。\n```css\n.img img:nth-child(2){\n  -webkit-filter:contrast(30%);/* contrast对比度*/\n  filter:contrast(30%);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/contrast.png)\n\n### `blur`\n\n给图像设置高斯模糊， 所以值越大越模糊；如果没有设定值，则默认是0；这个参数可设置css长度值，但不接受百分比值。\n```css\n.img img:nth-child(2){\n  -webkit-filter:blur(10px);/*blur模糊*/\n  filter:blur(10px);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/blur.png)\n\n\n### `drop-shadow(h-shadow v-shadow blur spread color)`\n\n给图像设置一个阴影效果。阴影是合成在图像下面，可以有模糊度的。 函数接受<shadow>(在CSS3背景中定义)类型的值，除了\"inset\"关键字是不允许的。\n```css\n.img img:nth-child(2){\n  -webkit-filter:drop-shadow(0 15px 5px #000);/*drop-shadow阴影*/\n  filter:drop-shadow(0 15px 5px #000);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/shadow.png)\n\n\n参考资料：\n  - http://www.runoob.com/cssref/css3-pr-filter.html\n\n  - http://www.w3cplus.com/css3/advanced-css-filters.html\n\n  - http://www.w3cplus.com/css3/ten-effects-with-css3-filter","source":"_posts/css-1.md","raw":"---\ntitle: CSS3-filter应用\ncomments: true\ndescription: CSS3-filter应用 css3 filter\ntags: \"css\"\ndate: 2016-03-12 09:10:20\ncategories: \"css\"\nkeywords: html, css ,CSS3-filter应用\n---\n\n## 概述\n`CSS3filter`主要是用来处理图片。`filter`兼容性目前不是很好，`IE11`及以下不兼容，`Edg`需要带上前缀。`chrome，Firefox，Opera`浏览器都兼容。实在想用它的话，就放弃兼容`IE`浏览器吧！\n\n## `CSS3-filter`应用\n  ![左边为原图，右边是修改filter函数的取值](http://www.hbbaly.com/wp-content/uploads/2017/09/filter.png)\n\n## `filter`函数的取值\n\n`grayscale`灰度\n`sepia`褐色（求专业指点翻译）\n`saturate`饱和度\n`hue-rotate`色相旋转\n`invert`反色\n`opacity`透明度\n`brightness`亮度\n`contrast`对比度\n`blur`模糊\n`drop-shadow`阴影\n\n下面一个一个测试这10个。\n````html\n<div class=\"img\">\n  <img src=\"img/car.jpg\" alt=\"\">\n  <img src=\"img/car.jpg\" alt=\"\">\n</div>\n```\n```css\n.img{\n  width:100%;\n  height:400px;\n  display: -webkit-flex;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: center;\n  margin-top:10px;\n}\nimg{\n  display: block;\n  margin-top:10px;\n  width:800px;\n  height:400px;\n}\n.img img:nth-child(2){\n  -webkit-filter: grayscale(70%); /*grayscale灰度*/\n  filter:grayscale(70%);\n}\n```\n（如果代码没有特殊说明均为此代码）\n\n`CSS3-filter`应用\n左边为原图，右边为改动\n\n### `grayscale`\n\n将图像转换为灰度图像，值定义转换的比例。值为100%则完全转为灰度图像，值为0%图像无变化，默认为0。\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/gray.png)\n\n### `sepia`\n\n将图像转换为深褐色，值定义转换的比例。值为100%则完全是深褐色的，值为0%图像无变化，值默认是0\n```css\n.img img:nth-child(2){\n  -webkit-filter: sepia(70%);/*褐色*/\n  filter:sepia(70%);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/sepia.png)\n\n### `saturate`\n\n转换图像饱和度，值定义转换的比例。值为0%则是完全不饱和，值为100%则图像无变化。其他值，超过100%的值是允许的，则有更高的饱和度，值默认是1。\n```css\n.img img:nth-child(2){\n  -webkit-filter: saturate(70%);/*saturate饱和度*/\n  filter: saturate(70%);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/saturate.png)\n\n### `invert`\n\n反转输入图像，值定义转换的比例。100%的价值是完全反转，值为0%则图像无变化。，值默认是0。\n```css\n.img img:nth-child(2){\n  -webkit-filter: invert(70%);/*invert反色*/\n  filter: invert(70%);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/invert-1.png)\n\n### opacity`\n\n转化图像的透明程度，值定义转换的比例。值为0%则是完全透明，值为100%则图像无变化。，值默认是1。\n\n```css\n.img img:nth-child(2){\n  -webkit-filter: opacity(.7);/*opacity*/\n  filter: opacity(.7);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/opacity.png)\n\n### `hue-rotate`\n\n给图像应用色相旋转，\"angle\"一值设定图像会被调整的色环角度值。值为0deg，则图像无变化，默认值是0deg。该值虽然没有最大值，超过360deg的值相当于又绕一圈。\n\n```css\n.img img:nth-child(2){\n  -webkit-filter: hue-rotate(120deg);/*hue-rotate色相旋转*/\n  filter: hue-rotate(120deg);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/brightness.png)\n\n\n### `brightness`\n\n使图片看起来更亮或更暗。如果值是0%，图像会全黑。值是100%，则图像无变化。，值超过100%也是可以的，图像会比原来更亮。如果没有设定值，默认是1。\n```css\n.img img:nth-child(2){\n  -webkit-filter: brightness(5);/* brightness亮度*/\n  filter: brightness(5);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/brightness.png)\n\n\n### `contrast`\n\n调整图像的对比度，值是0%的话，图像会全黑。值是100%，图像不变。值可以超过100%，默认是1。\n```css\n.img img:nth-child(2){\n  -webkit-filter:contrast(30%);/* contrast对比度*/\n  filter:contrast(30%);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/contrast.png)\n\n### `blur`\n\n给图像设置高斯模糊， 所以值越大越模糊；如果没有设定值，则默认是0；这个参数可设置css长度值，但不接受百分比值。\n```css\n.img img:nth-child(2){\n  -webkit-filter:blur(10px);/*blur模糊*/\n  filter:blur(10px);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/blur.png)\n\n\n### `drop-shadow(h-shadow v-shadow blur spread color)`\n\n给图像设置一个阴影效果。阴影是合成在图像下面，可以有模糊度的。 函数接受<shadow>(在CSS3背景中定义)类型的值，除了\"inset\"关键字是不允许的。\n```css\n.img img:nth-child(2){\n  -webkit-filter:drop-shadow(0 15px 5px #000);/*drop-shadow阴影*/\n  filter:drop-shadow(0 15px 5px #000);\n}\n```\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/shadow.png)\n\n\n参考资料：\n  - http://www.runoob.com/cssref/css3-pr-filter.html\n\n  - http://www.w3cplus.com/css3/advanced-css-filters.html\n\n  - http://www.w3cplus.com/css3/ten-effects-with-css3-filter","slug":"css-1","published":1,"updated":"2019-09-16T14:48:23.606Z","layout":"post","photos":[],"link":"","_id":"ck1p3g29a0001n0b98xawocsu","content":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p><code>CSS3filter</code>主要是用来处理图片。<code>filter</code>兼容性目前不是很好，<code>IE11</code>及以下不兼容，<code>Edg</code>需要带上前缀。<code>chrome，Firefox，Opera</code>浏览器都兼容。实在想用它的话，就放弃兼容<code>IE</code>浏览器吧！</p>\n<h2 id=\"CSS3-filter应用\"><a href=\"#CSS3-filter应用\" class=\"headerlink\" title=\"CSS3-filter应用\"></a><code>CSS3-filter</code>应用</h2><p>  <img alt=\"左边为原图，右边是修改filter函数的取值\" data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/filter.png\" class=\"lozad\"></p>\n<h2 id=\"filter函数的取值\"><a href=\"#filter函数的取值\" class=\"headerlink\" title=\"filter函数的取值\"></a><code>filter</code>函数的取值</h2><p><code>grayscale</code>灰度<br><code>sepia</code>褐色（求专业指点翻译）<br><code>saturate</code>饱和度<br><code>hue-rotate</code>色相旋转<br><code>invert</code>反色<br><code>opacity</code>透明度<br><code>brightness</code>亮度<br><code>contrast</code>对比度<br><code>blur</code>模糊<br><code>drop-shadow</code>阴影</p>\n<p>下面一个一个测试这10个。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;img&quot;&gt;</span><br><span class=\"line\">  &lt;img src=&quot;img/car.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class=\"line\">  &lt;img src=&quot;img/car.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: -webkit-flex;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">flex-flow</span>: row nowrap;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>:<span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">img</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>:<span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">800px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">grayscale</span>(70%); <span class=\"comment\">/*grayscale灰度*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>:<span class=\"built_in\">grayscale</span>(70%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>（如果代码没有特殊说明均为此代码）</p>\n<p><code>CSS3-filter</code>应用<br>左边为原图，右边为改动</p>\n<h3 id=\"grayscale\"><a href=\"#grayscale\" class=\"headerlink\" title=\"grayscale\"></a><code>grayscale</code></h3><p>将图像转换为灰度图像，值定义转换的比例。值为100%则完全转为灰度图像，值为0%图像无变化，默认为0。<br><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/gray.png\" class=\"lozad\"></p>\n<h3 id=\"sepia\"><a href=\"#sepia\" class=\"headerlink\" title=\"sepia\"></a><code>sepia</code></h3><p>将图像转换为深褐色，值定义转换的比例。值为100%则完全是深褐色的，值为0%图像无变化，值默认是0</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">sepia</span>(70%);<span class=\"comment\">/*褐色*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>:<span class=\"built_in\">sepia</span>(70%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/sepia.png\" class=\"lozad\"></p>\n<h3 id=\"saturate\"><a href=\"#saturate\" class=\"headerlink\" title=\"saturate\"></a><code>saturate</code></h3><p>转换图像饱和度，值定义转换的比例。值为0%则是完全不饱和，值为100%则图像无变化。其他值，超过100%的值是允许的，则有更高的饱和度，值默认是1。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">saturate</span>(70%);<span class=\"comment\">/*saturate饱和度*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>: <span class=\"built_in\">saturate</span>(70%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/saturate.png\" class=\"lozad\"></p>\n<h3 id=\"invert\"><a href=\"#invert\" class=\"headerlink\" title=\"invert\"></a><code>invert</code></h3><p>反转输入图像，值定义转换的比例。100%的价值是完全反转，值为0%则图像无变化。，值默认是0。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">invert</span>(70%);<span class=\"comment\">/*invert反色*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>: <span class=\"built_in\">invert</span>(70%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/invert-1.png\" class=\"lozad\"></p>\n<h3 id=\"opacity\"><a href=\"#opacity\" class=\"headerlink\" title=\"opacity`\"></a>opacity`</h3><p>转化图像的透明程度，值定义转换的比例。值为0%则是完全透明，值为100%则图像无变化。，值默认是1。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">opacity</span>(.7);<span class=\"comment\">/*opacity*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>: <span class=\"built_in\">opacity</span>(.7);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/opacity.png\" class=\"lozad\"></p>\n<h3 id=\"hue-rotate\"><a href=\"#hue-rotate\" class=\"headerlink\" title=\"hue-rotate\"></a><code>hue-rotate</code></h3><p>给图像应用色相旋转，”angle”一值设定图像会被调整的色环角度值。值为0deg，则图像无变化，默认值是0deg。该值虽然没有最大值，超过360deg的值相当于又绕一圈。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">hue-rotate</span>(120deg);<span class=\"comment\">/*hue-rotate色相旋转*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>: <span class=\"built_in\">hue-rotate</span>(120deg);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/brightness.png\" class=\"lozad\"></p>\n<h3 id=\"brightness\"><a href=\"#brightness\" class=\"headerlink\" title=\"brightness\"></a><code>brightness</code></h3><p>使图片看起来更亮或更暗。如果值是0%，图像会全黑。值是100%，则图像无变化。，值超过100%也是可以的，图像会比原来更亮。如果没有设定值，默认是1。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">brightness</span>(5);<span class=\"comment\">/* brightness亮度*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>: <span class=\"built_in\">brightness</span>(5);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/brightness.png\" class=\"lozad\"></p>\n<h3 id=\"contrast\"><a href=\"#contrast\" class=\"headerlink\" title=\"contrast\"></a><code>contrast</code></h3><p>调整图像的对比度，值是0%的话，图像会全黑。值是100%，图像不变。值可以超过100%，默认是1。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>:<span class=\"built_in\">contrast</span>(30%);<span class=\"comment\">/* contrast对比度*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>:<span class=\"built_in\">contrast</span>(30%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/contrast.png\" class=\"lozad\"></p>\n<h3 id=\"blur\"><a href=\"#blur\" class=\"headerlink\" title=\"blur\"></a><code>blur</code></h3><p>给图像设置高斯模糊， 所以值越大越模糊；如果没有设定值，则默认是0；这个参数可设置css长度值，但不接受百分比值。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>:<span class=\"built_in\">blur</span>(10px);<span class=\"comment\">/*blur模糊*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>:<span class=\"built_in\">blur</span>(10px);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/blur.png\" class=\"lozad\"></p>\n<h3 id=\"drop-shadow-h-shadow-v-shadow-blur-spread-color\"><a href=\"#drop-shadow-h-shadow-v-shadow-blur-spread-color\" class=\"headerlink\" title=\"drop-shadow(h-shadow v-shadow blur spread color)\"></a><code>drop-shadow(h-shadow v-shadow blur spread color)</code></h3><p>给图像设置一个阴影效果。阴影是合成在图像下面，可以有模糊度的。 函数接受<shadow>(在CSS3背景中定义)类型的值，除了”inset”关键字是不允许的。</shadow></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>:<span class=\"built_in\">drop-shadow</span>(0 15px 5px #000);<span class=\"comment\">/*drop-shadow阴影*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>:<span class=\"built_in\">drop-shadow</span>(0 15px 5px #000);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/shadow.png\" class=\"lozad\"></p>\n<p>参考资料：</p>\n<ul>\n<li><p><a href=\"http://www.runoob.com/cssref/css3-pr-filter.html\" target=\"_blank\" rel=\"noopener\">http://www.runoob.com/cssref/css3-pr-filter.html</a></p>\n</li>\n<li><p><a href=\"http://www.w3cplus.com/css3/advanced-css-filters.html\" target=\"_blank\" rel=\"noopener\">http://www.w3cplus.com/css3/advanced-css-filters.html</a></p>\n</li>\n<li><p><a href=\"http://www.w3cplus.com/css3/ten-effects-with-css3-filter\" target=\"_blank\" rel=\"noopener\">http://www.w3cplus.com/css3/ten-effects-with-css3-filter</a></p>\n</li>\n</ul>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p><code>CSS3filter</code>主要是用来处理图片。<code>filter</code>兼容性目前不是很好，<code>IE11</code>及以下不兼容，<code>Edg</code>需要带上前缀。<code>chrome，Firefox，Opera</code>浏览器都兼容。实在想用它的话，就放弃兼容<code>IE</code>浏览器吧！</p>\n<h2 id=\"CSS3-filter应用\"><a href=\"#CSS3-filter应用\" class=\"headerlink\" title=\"CSS3-filter应用\"></a><code>CSS3-filter</code>应用</h2><p>  <img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/filter.png\" alt=\"左边为原图，右边是修改filter函数的取值\"></p>\n<h2 id=\"filter函数的取值\"><a href=\"#filter函数的取值\" class=\"headerlink\" title=\"filter函数的取值\"></a><code>filter</code>函数的取值</h2><p><code>grayscale</code>灰度<br><code>sepia</code>褐色（求专业指点翻译）<br><code>saturate</code>饱和度<br><code>hue-rotate</code>色相旋转<br><code>invert</code>反色<br><code>opacity</code>透明度<br><code>brightness</code>亮度<br><code>contrast</code>对比度<br><code>blur</code>模糊<br><code>drop-shadow</code>阴影</p>\n<p>下面一个一个测试这10个。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;img&quot;&gt;</span><br><span class=\"line\">  &lt;img src=&quot;img/car.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class=\"line\">  &lt;img src=&quot;img/car.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: -webkit-flex;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">flex-flow</span>: row nowrap;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>:<span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">img</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">margin-top</span>:<span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">800px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">grayscale</span>(70%); <span class=\"comment\">/*grayscale灰度*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>:<span class=\"built_in\">grayscale</span>(70%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>（如果代码没有特殊说明均为此代码）</p>\n<p><code>CSS3-filter</code>应用<br>左边为原图，右边为改动</p>\n<h3 id=\"grayscale\"><a href=\"#grayscale\" class=\"headerlink\" title=\"grayscale\"></a><code>grayscale</code></h3><p>将图像转换为灰度图像，值定义转换的比例。值为100%则完全转为灰度图像，值为0%图像无变化，默认为0。<br><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/gray.png\" alt></p>\n<h3 id=\"sepia\"><a href=\"#sepia\" class=\"headerlink\" title=\"sepia\"></a><code>sepia</code></h3><p>将图像转换为深褐色，值定义转换的比例。值为100%则完全是深褐色的，值为0%图像无变化，值默认是0</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">sepia</span>(70%);<span class=\"comment\">/*褐色*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>:<span class=\"built_in\">sepia</span>(70%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/sepia.png\" alt></p>\n<h3 id=\"saturate\"><a href=\"#saturate\" class=\"headerlink\" title=\"saturate\"></a><code>saturate</code></h3><p>转换图像饱和度，值定义转换的比例。值为0%则是完全不饱和，值为100%则图像无变化。其他值，超过100%的值是允许的，则有更高的饱和度，值默认是1。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">saturate</span>(70%);<span class=\"comment\">/*saturate饱和度*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>: <span class=\"built_in\">saturate</span>(70%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/saturate.png\" alt></p>\n<h3 id=\"invert\"><a href=\"#invert\" class=\"headerlink\" title=\"invert\"></a><code>invert</code></h3><p>反转输入图像，值定义转换的比例。100%的价值是完全反转，值为0%则图像无变化。，值默认是0。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">invert</span>(70%);<span class=\"comment\">/*invert反色*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>: <span class=\"built_in\">invert</span>(70%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/invert-1.png\" alt></p>\n<h3 id=\"opacity\"><a href=\"#opacity\" class=\"headerlink\" title=\"opacity`\"></a>opacity`</h3><p>转化图像的透明程度，值定义转换的比例。值为0%则是完全透明，值为100%则图像无变化。，值默认是1。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">opacity</span>(.7);<span class=\"comment\">/*opacity*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>: <span class=\"built_in\">opacity</span>(.7);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/opacity.png\" alt></p>\n<h3 id=\"hue-rotate\"><a href=\"#hue-rotate\" class=\"headerlink\" title=\"hue-rotate\"></a><code>hue-rotate</code></h3><p>给图像应用色相旋转，”angle”一值设定图像会被调整的色环角度值。值为0deg，则图像无变化，默认值是0deg。该值虽然没有最大值，超过360deg的值相当于又绕一圈。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">hue-rotate</span>(120deg);<span class=\"comment\">/*hue-rotate色相旋转*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>: <span class=\"built_in\">hue-rotate</span>(120deg);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/brightness.png\" alt></p>\n<h3 id=\"brightness\"><a href=\"#brightness\" class=\"headerlink\" title=\"brightness\"></a><code>brightness</code></h3><p>使图片看起来更亮或更暗。如果值是0%，图像会全黑。值是100%，则图像无变化。，值超过100%也是可以的，图像会比原来更亮。如果没有设定值，默认是1。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>: <span class=\"built_in\">brightness</span>(5);<span class=\"comment\">/* brightness亮度*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>: <span class=\"built_in\">brightness</span>(5);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/brightness.png\" alt></p>\n<h3 id=\"contrast\"><a href=\"#contrast\" class=\"headerlink\" title=\"contrast\"></a><code>contrast</code></h3><p>调整图像的对比度，值是0%的话，图像会全黑。值是100%，图像不变。值可以超过100%，默认是1。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>:<span class=\"built_in\">contrast</span>(30%);<span class=\"comment\">/* contrast对比度*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>:<span class=\"built_in\">contrast</span>(30%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/contrast.png\" alt></p>\n<h3 id=\"blur\"><a href=\"#blur\" class=\"headerlink\" title=\"blur\"></a><code>blur</code></h3><p>给图像设置高斯模糊， 所以值越大越模糊；如果没有设定值，则默认是0；这个参数可设置css长度值，但不接受百分比值。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>:<span class=\"built_in\">blur</span>(10px);<span class=\"comment\">/*blur模糊*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>:<span class=\"built_in\">blur</span>(10px);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/blur.png\" alt></p>\n<h3 id=\"drop-shadow-h-shadow-v-shadow-blur-spread-color\"><a href=\"#drop-shadow-h-shadow-v-shadow-blur-spread-color\" class=\"headerlink\" title=\"drop-shadow(h-shadow v-shadow blur spread color)\"></a><code>drop-shadow(h-shadow v-shadow blur spread color)</code></h3><p>给图像设置一个阴影效果。阴影是合成在图像下面，可以有模糊度的。 函数接受<shadow>(在CSS3背景中定义)类型的值，除了”inset”关键字是不允许的。</shadow></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.img</span> <span class=\"selector-tag\">img</span><span class=\"selector-pseudo\">:nth-child(2)</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-filter</span>:<span class=\"built_in\">drop-shadow</span>(0 15px 5px #000);<span class=\"comment\">/*drop-shadow阴影*/</span></span><br><span class=\"line\">  <span class=\"attribute\">filter</span>:<span class=\"built_in\">drop-shadow</span>(0 15px 5px #000);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/shadow.png\" alt></p>\n<p>参考资料：</p>\n<ul>\n<li><p><a href=\"http://www.runoob.com/cssref/css3-pr-filter.html\" target=\"_blank\" rel=\"noopener\">http://www.runoob.com/cssref/css3-pr-filter.html</a></p>\n</li>\n<li><p><a href=\"http://www.w3cplus.com/css3/advanced-css-filters.html\" target=\"_blank\" rel=\"noopener\">http://www.w3cplus.com/css3/advanced-css-filters.html</a></p>\n</li>\n<li><p><a href=\"http://www.w3cplus.com/css3/ten-effects-with-css3-filter\" target=\"_blank\" rel=\"noopener\">http://www.w3cplus.com/css3/ten-effects-with-css3-filter</a></p>\n</li>\n</ul>\n"},{"title":"node爬取电子书","comments":1,"description":"使用node爬取电子书, 减少各种广告带来的不好的体验","keywords":"node, node.js node爬虫, 电子书,爬取内容","date":"2018-09-04T16:00:00.000Z","_content":"\n# node-crawler\n\n## Install\n\n```sh\nnpm install\n```\n\n## Run\n\n爬取书籍章节\n\n```sh\nnpm run crawler\n```\n\n生成详细内容\n\n```sh\nnpm run start\n```\n\n## 创建目录\n\n```sh\nnpm install -g koa-generator\n```\n\n```sh\nkoa2 node-novel\n```\n\n```sh\ncd node-novel && npm install\n```\n\n到这里项目目录大体已经搭建好\n\n## 安装`superagent`及`cheerio`, `superagent-charset`\n\n```sh\nnpm install cheerio superagent superagent-charset - S\n```\n\n使用`superagent`及`cheerio`\n\n```js\n// 引入相关依赖\nconst request = require('superagent')\nconst cheerio = require('cheerio')\n\n//用来解决不是utf8摘取到的内容乱码问题\nconst superagent=require('superagent-charset')(request)\n// 公用组件\nconst helpers = require('./helpers')\n\n// 获取书籍的信息\nconst host = 'https://www.12zw.com/'\nconst type = 8\nconst category = 8169\nconst url = `${host}/${type}/${category}`\n\n//开始爬取\nsuperagent.get(url).charset('gbk').end((err, res) => {\n  if (err) {\n    // 如果访问失败或者出错，会这行这里\n    console.log(`抓取失败 - ${err}`)\n  } else {\n    // 创建这本书籍的存放目录\n    helpers.mkdir(`${type}/${category}`)\n\n    // 使用cheerio\n    const $ = cheerio.load(res.text)\n\n    // 存放书籍信息对象\n    let current_book = {}\n    current_book.chapter = []\n\n    // 通过分析dom结构，可以获取到\n    // 获取书籍的基本信息\n    current_book.title = $('#info h1').text()\n    current_book.author = $('#info p').eq(0).text().split('：')[1]\n    current_book.last_update = $('#info p').eq(2).text().split('：')[1]\n    current_book.last_chapter = $('#info p').eq(3).text().split('：')[1]\n    current_book.intro = $('#intro').html()\n    // 书记章节\n    $('#list a').each((index, item) => {\n      let title = $(item).text()\n      let num = $(item).attr('href').replace('.html', '')\n      let href = $(item).attr('href')\n      current_book.chapter.push({\n        title,\n        num,\n        href\n      })\n    })\n    // 创建书籍json数据\n    helpers.write_config(`${type}/${category}`, current_book)\n  }\n});\n```\n\n`helpers.js`\n\n```js\nconst fs = require('fs')\nconst debug = require('debug')('crawler')\n// 创建书记存放目录\nexports.mkdir = function(folder) {\n  const mkdirp = require('mkdirp')\n  mkdirp.sync('views/'+folder, function (err) {\n    if (err) console.error(err)\n    else debug('pow!')\n  })\n}\n//创建书籍json数据\nexports.write_config = function (pagePath, content) {\n  let book = JSON.stringify(content, null, 4)\n  fs.writeFileSync('views/'+pagePath+'/book.json',book, function (err) {\n    if (err) throw err;\n    debug('It\\'s saved!');\n  });\n}\n// 创建书籍某个章节html或者pug\nexports.write_chapter = function(pagePath, chapter, content) {\n  fs.writeFileSync('views/'+pagePath+'/'+chapter.num+'.html', content, function (err) {\n    if (err) throw err;\n    debug('It\\'s saved!');\n  })\n}\n```\n\n命令爬取书籍章节及信息\n```sh\nnpm run crawler\n```\n\n## 展示\n\n`routes/index.js`\n\n\n```js\nconst router = require('koa-router')()\nconst fs = require('fs')\nconst schedule = require('node-schedule')\nconst requestChapter = require('@novel/crawler')\nconst getContent = require('@utils/getContent')\n// const getStat = require('@utils/judePath')\n\nrouter.get('/', async (ctx, next) => {\n  await ctx.render('index', {\n    title: 'Hello Koa 2!',\n    con: '<h2>hbb</h2>'\n  })\n})\n\n// 某个书籍章节列表\nrouter.get('/:type/:category', async (ctx, next) => {\n  const type = ctx.params.type\n  const category = ctx.params.category\n  const novelD = `${type}/${category}`\n  let content = null\n  // 定时任务，每天凌晨获取最新list\n  schedule.scheduleJob('0 0 0 * * ?', async() => {\n    console.log('The answer to life, the universe, and everything!');\n    await requestChapter()\n  });\n  \n  // 获取书记json数据\n  content = await fs.readFileSync('views/'+novelD+'/book.json','utf-8')\n  content = content ? JSON.parse(content) : content\n  // 渲染模版\n  await ctx.render('index', {\n    content: content,\n    category,\n    title: content.title,\n    keywords: content.info,\n    description: content.info\n  })\n})\n\n// 某篇文章\nrouter.get('/:type/:category/:chapter', async (ctx, next) => {\n  const host = 'https://www.12zw.com/'\n  const type = ctx.params.type\n  const category = ctx.params.category\n  const chapter = ctx.params.chapter\n  const novelD = `${type}/${category}`\n  \n  const request = require('superagent')\n  const cheerio = require('cheerio')\n  const superagent=require('superagent-charset')(request)\n  let content = await new Promise((resolve, reject) => {\n    // 爬取详细的章节内容\n    superagent.get(`${host}/${novelD}/${chapter}.html`).charset('gbk').end((err, res) => {\n      if (err) {\n        // 如果访问失败或者出错，会这行这里\n        console.log(`抓取失败 - ${err}`)\n      } else {\n        const $ = cheerio.load(res)\n        let reg = /<div id=\"content\">(.*)<\\/div>/\n        let contentHtml = res.text\n        let content = getContent.getRegContent(contentHtml, reg)\n        let title = getContent.getRegContent(contentHtml, /<title>(.*)<\\/title>/)\n        let keywords = getContent.getRegContent(contentHtml, /<meta name=\"keywords\" content=(.*) \\/>/)\n        let description = getContent.getRegContent(contentHtml, /<meta name=\"description\" content=(.*) \\/>/).replace('笔趣阁', '')\n        \n        let prev = getContent.getRegContent(contentHtml, /<a href=\"(\\d+).html\">上一章<\\/a>/)\n        let next =getContent.getRegContent(contentHtml, /<a href=\"(\\d+).html\">下一章<\\/a>/)\n        resolve({content, title, keywords, description, prev, next})\n      }\n    })\n  })\n  await ctx.render('chapter', {\n    content: content.content,\n    title: content.title,\n    keywords: content.keywords,\n    description: content.description,\n    prev: content.prev,\n    next: content.next,\n    type,\n    category\n  })\n})\n\nmodule.exports = router\n```\n\n`views/index.pug`\n\n```pug\nextends layout\n\nblock content\n  div.novel-header\n    h1= content.title\n    div.novel-info\n      img.novel-img(src=content.img)\n      div.novel-cont\n        p.novel-author= content.author\n        p.last-update 最近更新：#{content.last_update}\n        p.last-chapter 最新章节：#{content.last_chapter}\n        p.novel-intro 本书简介：#{content.info}\n  \n  div.novel-content\n    ul.novel-chapter\n      - for (var i = 0; i < content.chapter.length; i++)\n        li.novel-chapter-list\n          a(href= category +'/'+ content.chapter[i].num)= content.chapter[i].title\n\n```\n\n\n运行\n\n```sh\nnpm run start\n```\n\n输入已经存在的目录就可以看到对应的书籍信息展示页面了，也可以看某一个章节的内容\n\n写这个爬虫，主要是忍受不了网站上的广告，实在是太多了，体验一点也不好","source":"_posts/crawler.md","raw":"---\ntitle: node爬取电子书\ncomments: true\ndescription: 使用node爬取电子书, 减少各种广告带来的不好的体验\ntags: \"node\"\ncategories: \"node\"\nkeywords: node, node.js node爬虫, 电子书,爬取内容\ndate: 2018-09-05 00:00:00\n---\n\n# node-crawler\n\n## Install\n\n```sh\nnpm install\n```\n\n## Run\n\n爬取书籍章节\n\n```sh\nnpm run crawler\n```\n\n生成详细内容\n\n```sh\nnpm run start\n```\n\n## 创建目录\n\n```sh\nnpm install -g koa-generator\n```\n\n```sh\nkoa2 node-novel\n```\n\n```sh\ncd node-novel && npm install\n```\n\n到这里项目目录大体已经搭建好\n\n## 安装`superagent`及`cheerio`, `superagent-charset`\n\n```sh\nnpm install cheerio superagent superagent-charset - S\n```\n\n使用`superagent`及`cheerio`\n\n```js\n// 引入相关依赖\nconst request = require('superagent')\nconst cheerio = require('cheerio')\n\n//用来解决不是utf8摘取到的内容乱码问题\nconst superagent=require('superagent-charset')(request)\n// 公用组件\nconst helpers = require('./helpers')\n\n// 获取书籍的信息\nconst host = 'https://www.12zw.com/'\nconst type = 8\nconst category = 8169\nconst url = `${host}/${type}/${category}`\n\n//开始爬取\nsuperagent.get(url).charset('gbk').end((err, res) => {\n  if (err) {\n    // 如果访问失败或者出错，会这行这里\n    console.log(`抓取失败 - ${err}`)\n  } else {\n    // 创建这本书籍的存放目录\n    helpers.mkdir(`${type}/${category}`)\n\n    // 使用cheerio\n    const $ = cheerio.load(res.text)\n\n    // 存放书籍信息对象\n    let current_book = {}\n    current_book.chapter = []\n\n    // 通过分析dom结构，可以获取到\n    // 获取书籍的基本信息\n    current_book.title = $('#info h1').text()\n    current_book.author = $('#info p').eq(0).text().split('：')[1]\n    current_book.last_update = $('#info p').eq(2).text().split('：')[1]\n    current_book.last_chapter = $('#info p').eq(3).text().split('：')[1]\n    current_book.intro = $('#intro').html()\n    // 书记章节\n    $('#list a').each((index, item) => {\n      let title = $(item).text()\n      let num = $(item).attr('href').replace('.html', '')\n      let href = $(item).attr('href')\n      current_book.chapter.push({\n        title,\n        num,\n        href\n      })\n    })\n    // 创建书籍json数据\n    helpers.write_config(`${type}/${category}`, current_book)\n  }\n});\n```\n\n`helpers.js`\n\n```js\nconst fs = require('fs')\nconst debug = require('debug')('crawler')\n// 创建书记存放目录\nexports.mkdir = function(folder) {\n  const mkdirp = require('mkdirp')\n  mkdirp.sync('views/'+folder, function (err) {\n    if (err) console.error(err)\n    else debug('pow!')\n  })\n}\n//创建书籍json数据\nexports.write_config = function (pagePath, content) {\n  let book = JSON.stringify(content, null, 4)\n  fs.writeFileSync('views/'+pagePath+'/book.json',book, function (err) {\n    if (err) throw err;\n    debug('It\\'s saved!');\n  });\n}\n// 创建书籍某个章节html或者pug\nexports.write_chapter = function(pagePath, chapter, content) {\n  fs.writeFileSync('views/'+pagePath+'/'+chapter.num+'.html', content, function (err) {\n    if (err) throw err;\n    debug('It\\'s saved!');\n  })\n}\n```\n\n命令爬取书籍章节及信息\n```sh\nnpm run crawler\n```\n\n## 展示\n\n`routes/index.js`\n\n\n```js\nconst router = require('koa-router')()\nconst fs = require('fs')\nconst schedule = require('node-schedule')\nconst requestChapter = require('@novel/crawler')\nconst getContent = require('@utils/getContent')\n// const getStat = require('@utils/judePath')\n\nrouter.get('/', async (ctx, next) => {\n  await ctx.render('index', {\n    title: 'Hello Koa 2!',\n    con: '<h2>hbb</h2>'\n  })\n})\n\n// 某个书籍章节列表\nrouter.get('/:type/:category', async (ctx, next) => {\n  const type = ctx.params.type\n  const category = ctx.params.category\n  const novelD = `${type}/${category}`\n  let content = null\n  // 定时任务，每天凌晨获取最新list\n  schedule.scheduleJob('0 0 0 * * ?', async() => {\n    console.log('The answer to life, the universe, and everything!');\n    await requestChapter()\n  });\n  \n  // 获取书记json数据\n  content = await fs.readFileSync('views/'+novelD+'/book.json','utf-8')\n  content = content ? JSON.parse(content) : content\n  // 渲染模版\n  await ctx.render('index', {\n    content: content,\n    category,\n    title: content.title,\n    keywords: content.info,\n    description: content.info\n  })\n})\n\n// 某篇文章\nrouter.get('/:type/:category/:chapter', async (ctx, next) => {\n  const host = 'https://www.12zw.com/'\n  const type = ctx.params.type\n  const category = ctx.params.category\n  const chapter = ctx.params.chapter\n  const novelD = `${type}/${category}`\n  \n  const request = require('superagent')\n  const cheerio = require('cheerio')\n  const superagent=require('superagent-charset')(request)\n  let content = await new Promise((resolve, reject) => {\n    // 爬取详细的章节内容\n    superagent.get(`${host}/${novelD}/${chapter}.html`).charset('gbk').end((err, res) => {\n      if (err) {\n        // 如果访问失败或者出错，会这行这里\n        console.log(`抓取失败 - ${err}`)\n      } else {\n        const $ = cheerio.load(res)\n        let reg = /<div id=\"content\">(.*)<\\/div>/\n        let contentHtml = res.text\n        let content = getContent.getRegContent(contentHtml, reg)\n        let title = getContent.getRegContent(contentHtml, /<title>(.*)<\\/title>/)\n        let keywords = getContent.getRegContent(contentHtml, /<meta name=\"keywords\" content=(.*) \\/>/)\n        let description = getContent.getRegContent(contentHtml, /<meta name=\"description\" content=(.*) \\/>/).replace('笔趣阁', '')\n        \n        let prev = getContent.getRegContent(contentHtml, /<a href=\"(\\d+).html\">上一章<\\/a>/)\n        let next =getContent.getRegContent(contentHtml, /<a href=\"(\\d+).html\">下一章<\\/a>/)\n        resolve({content, title, keywords, description, prev, next})\n      }\n    })\n  })\n  await ctx.render('chapter', {\n    content: content.content,\n    title: content.title,\n    keywords: content.keywords,\n    description: content.description,\n    prev: content.prev,\n    next: content.next,\n    type,\n    category\n  })\n})\n\nmodule.exports = router\n```\n\n`views/index.pug`\n\n```pug\nextends layout\n\nblock content\n  div.novel-header\n    h1= content.title\n    div.novel-info\n      img.novel-img(src=content.img)\n      div.novel-cont\n        p.novel-author= content.author\n        p.last-update 最近更新：#{content.last_update}\n        p.last-chapter 最新章节：#{content.last_chapter}\n        p.novel-intro 本书简介：#{content.info}\n  \n  div.novel-content\n    ul.novel-chapter\n      - for (var i = 0; i < content.chapter.length; i++)\n        li.novel-chapter-list\n          a(href= category +'/'+ content.chapter[i].num)= content.chapter[i].title\n\n```\n\n\n运行\n\n```sh\nnpm run start\n```\n\n输入已经存在的目录就可以看到对应的书籍信息展示页面了，也可以看某一个章节的内容\n\n写这个爬虫，主要是忍受不了网站上的广告，实在是太多了，体验一点也不好","slug":"crawler","published":1,"updated":"2019-09-16T13:46:16.377Z","layout":"post","photos":[],"link":"","_id":"ck1p3g29e0003n0b9p6xtiamx","content":"<h1 id=\"node-crawler\"><a href=\"#node-crawler\" class=\"headerlink\" title=\"node-crawler\"></a>node-crawler</h1><h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Run\"><a href=\"#Run\" class=\"headerlink\" title=\"Run\"></a>Run</h2><p>爬取书籍章节</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run crawler</span><br></pre></td></tr></table></figure>\n\n<p>生成详细内容</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run start</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"创建目录\"><a href=\"#创建目录\" class=\"headerlink\" title=\"创建目录\"></a>创建目录</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g koa-generator</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">koa2 node-novel</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> node-novel &amp;&amp; npm install</span><br></pre></td></tr></table></figure>\n\n<p>到这里项目目录大体已经搭建好</p>\n<h2 id=\"安装superagent及cheerio-superagent-charset\"><a href=\"#安装superagent及cheerio-superagent-charset\" class=\"headerlink\" title=\"安装superagent及cheerio, superagent-charset\"></a>安装<code>superagent</code>及<code>cheerio</code>, <code>superagent-charset</code></h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install cheerio superagent superagent-charset - S</span><br></pre></td></tr></table></figure>\n\n<p>使用<code>superagent</code>及<code>cheerio</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入相关依赖</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">'superagent'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> cheerio = <span class=\"built_in\">require</span>(<span class=\"string\">'cheerio'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用来解决不是utf8摘取到的内容乱码问题</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> superagent=<span class=\"built_in\">require</span>(<span class=\"string\">'superagent-charset'</span>)(request)</span><br><span class=\"line\"><span class=\"comment\">// 公用组件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> helpers = <span class=\"built_in\">require</span>(<span class=\"string\">'./helpers'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取书籍的信息</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> host = <span class=\"string\">'https://www.12zw.com/'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> type = <span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> category = <span class=\"number\">8169</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> url = <span class=\"string\">`<span class=\"subst\">$&#123;host&#125;</span>/<span class=\"subst\">$&#123;type&#125;</span>/<span class=\"subst\">$&#123;category&#125;</span>`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//开始爬取</span></span><br><span class=\"line\">superagent.get(url).charset(<span class=\"string\">'gbk'</span>).end(<span class=\"function\">(<span class=\"params\">err, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果访问失败或者出错，会这行这里</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`抓取失败 - <span class=\"subst\">$&#123;err&#125;</span>`</span>)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 创建这本书籍的存放目录</span></span><br><span class=\"line\">    helpers.mkdir(<span class=\"string\">`<span class=\"subst\">$&#123;type&#125;</span>/<span class=\"subst\">$&#123;category&#125;</span>`</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 使用cheerio</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> $ = cheerio.load(res.text)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 存放书籍信息对象</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> current_book = &#123;&#125;</span><br><span class=\"line\">    current_book.chapter = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 通过分析dom结构，可以获取到</span></span><br><span class=\"line\">    <span class=\"comment\">// 获取书籍的基本信息</span></span><br><span class=\"line\">    current_book.title = $(<span class=\"string\">'#info h1'</span>).text()</span><br><span class=\"line\">    current_book.author = $(<span class=\"string\">'#info p'</span>).eq(<span class=\"number\">0</span>).text().split(<span class=\"string\">'：'</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">    current_book.last_update = $(<span class=\"string\">'#info p'</span>).eq(<span class=\"number\">2</span>).text().split(<span class=\"string\">'：'</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">    current_book.last_chapter = $(<span class=\"string\">'#info p'</span>).eq(<span class=\"number\">3</span>).text().split(<span class=\"string\">'：'</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">    current_book.intro = $(<span class=\"string\">'#intro'</span>).html()</span><br><span class=\"line\">    <span class=\"comment\">// 书记章节</span></span><br><span class=\"line\">    $(<span class=\"string\">'#list a'</span>).each(<span class=\"function\">(<span class=\"params\">index, item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> title = $(item).text()</span><br><span class=\"line\">      <span class=\"keyword\">let</span> num = $(item).attr(<span class=\"string\">'href'</span>).replace(<span class=\"string\">'.html'</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> href = $(item).attr(<span class=\"string\">'href'</span>)</span><br><span class=\"line\">      current_book.chapter.push(&#123;</span><br><span class=\"line\">        title,</span><br><span class=\"line\">        num,</span><br><span class=\"line\">        href</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// 创建书籍json数据</span></span><br><span class=\"line\">    helpers.write_config(<span class=\"string\">`<span class=\"subst\">$&#123;type&#125;</span>/<span class=\"subst\">$&#123;category&#125;</span>`</span>, current_book)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><code>helpers.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> debug = <span class=\"built_in\">require</span>(<span class=\"string\">'debug'</span>)(<span class=\"string\">'crawler'</span>)</span><br><span class=\"line\"><span class=\"comment\">// 创建书记存放目录</span></span><br><span class=\"line\">exports.mkdir = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">folder</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> mkdirp = <span class=\"built_in\">require</span>(<span class=\"string\">'mkdirp'</span>)</span><br><span class=\"line\">  mkdirp.sync(<span class=\"string\">'views/'</span>+folder, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"built_in\">console</span>.error(err)</span><br><span class=\"line\">    <span class=\"keyword\">else</span> debug(<span class=\"string\">'pow!'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//创建书籍json数据</span></span><br><span class=\"line\">exports.write_config = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">pagePath, content</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> book = <span class=\"built_in\">JSON</span>.stringify(content, <span class=\"literal\">null</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\">  fs.writeFileSync(<span class=\"string\">'views/'</span>+pagePath+<span class=\"string\">'/book.json'</span>,book, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err;</span><br><span class=\"line\">    debug(<span class=\"string\">'It\\'s saved!'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 创建书籍某个章节html或者pug</span></span><br><span class=\"line\">exports.write_chapter = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">pagePath, chapter, content</span>) </span>&#123;</span><br><span class=\"line\">  fs.writeFileSync(<span class=\"string\">'views/'</span>+pagePath+<span class=\"string\">'/'</span>+chapter.num+<span class=\"string\">'.html'</span>, content, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err;</span><br><span class=\"line\">    debug(<span class=\"string\">'It\\'s saved!'</span>);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>命令爬取书籍章节及信息</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run crawler</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"展示\"><a href=\"#展示\" class=\"headerlink\" title=\"展示\"></a>展示</h2><p><code>routes/index.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"built_in\">require</span>(<span class=\"string\">'koa-router'</span>)()</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> schedule = <span class=\"built_in\">require</span>(<span class=\"string\">'node-schedule'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> requestChapter = <span class=\"built_in\">require</span>(<span class=\"string\">'@novel/crawler'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> getContent = <span class=\"built_in\">require</span>(<span class=\"string\">'@utils/getContent'</span>)</span><br><span class=\"line\"><span class=\"comment\">// const getStat = require('@utils/judePath')</span></span><br><span class=\"line\"></span><br><span class=\"line\">router.get(<span class=\"string\">'/'</span>, <span class=\"keyword\">async</span> (ctx, next) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">await</span> ctx.render(<span class=\"string\">'index'</span>, &#123;</span><br><span class=\"line\">    title: <span class=\"string\">'Hello Koa 2!'</span>,</span><br><span class=\"line\">    con: <span class=\"string\">'&lt;h2&gt;hbb&lt;/h2&gt;'</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 某个书籍章节列表</span></span><br><span class=\"line\">router.get(<span class=\"string\">'/:type/:category'</span>, <span class=\"keyword\">async</span> (ctx, next) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> type = ctx.params.type</span><br><span class=\"line\">  <span class=\"keyword\">const</span> category = ctx.params.category</span><br><span class=\"line\">  <span class=\"keyword\">const</span> novelD = <span class=\"string\">`<span class=\"subst\">$&#123;type&#125;</span>/<span class=\"subst\">$&#123;category&#125;</span>`</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> content = <span class=\"literal\">null</span></span><br><span class=\"line\">  <span class=\"comment\">// 定时任务，每天凌晨获取最新list</span></span><br><span class=\"line\">  schedule.scheduleJob(<span class=\"string\">'0 0 0 * * ?'</span>, <span class=\"keyword\">async</span>() =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'The answer to life, the universe, and everything!'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> requestChapter()</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 获取书记json数据</span></span><br><span class=\"line\">  content = <span class=\"keyword\">await</span> fs.readFileSync(<span class=\"string\">'views/'</span>+novelD+<span class=\"string\">'/book.json'</span>,<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">  content = content ? <span class=\"built_in\">JSON</span>.parse(content) : content</span><br><span class=\"line\">  <span class=\"comment\">// 渲染模版</span></span><br><span class=\"line\">  <span class=\"keyword\">await</span> ctx.render(<span class=\"string\">'index'</span>, &#123;</span><br><span class=\"line\">    content: content,</span><br><span class=\"line\">    category,</span><br><span class=\"line\">    title: content.title,</span><br><span class=\"line\">    keywords: content.info,</span><br><span class=\"line\">    description: content.info</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 某篇文章</span></span><br><span class=\"line\">router.get(<span class=\"string\">'/:type/:category/:chapter'</span>, <span class=\"keyword\">async</span> (ctx, next) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> host = <span class=\"string\">'https://www.12zw.com/'</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> type = ctx.params.type</span><br><span class=\"line\">  <span class=\"keyword\">const</span> category = ctx.params.category</span><br><span class=\"line\">  <span class=\"keyword\">const</span> chapter = ctx.params.chapter</span><br><span class=\"line\">  <span class=\"keyword\">const</span> novelD = <span class=\"string\">`<span class=\"subst\">$&#123;type&#125;</span>/<span class=\"subst\">$&#123;category&#125;</span>`</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">const</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">'superagent'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> cheerio = <span class=\"built_in\">require</span>(<span class=\"string\">'cheerio'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> superagent=<span class=\"built_in\">require</span>(<span class=\"string\">'superagent-charset'</span>)(request)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> content = <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 爬取详细的章节内容</span></span><br><span class=\"line\">    superagent.get(<span class=\"string\">`<span class=\"subst\">$&#123;host&#125;</span>/<span class=\"subst\">$&#123;novelD&#125;</span>/<span class=\"subst\">$&#123;chapter&#125;</span>.html`</span>).charset(<span class=\"string\">'gbk'</span>).end(<span class=\"function\">(<span class=\"params\">err, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果访问失败或者出错，会这行这里</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">`抓取失败 - <span class=\"subst\">$&#123;err&#125;</span>`</span>)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> $ = cheerio.load(res)</span><br><span class=\"line\">        <span class=\"keyword\">let</span> reg = <span class=\"regexp\">/&lt;div id=\"content\"&gt;(.*)&lt;\\/div&gt;/</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> contentHtml = res.text</span><br><span class=\"line\">        <span class=\"keyword\">let</span> content = getContent.getRegContent(contentHtml, reg)</span><br><span class=\"line\">        <span class=\"keyword\">let</span> title = getContent.getRegContent(contentHtml, /&lt;title&gt;(.*)&lt;\\/title&gt;/)</span><br><span class=\"line\">        let keywords = getContent.getRegContent(contentHtml, /&lt;meta name=\"keywords\" content=(.*) \\/&gt;/)</span><br><span class=\"line\">        let description = getContent.getRegContent(contentHtml, /&lt;meta name=\"description\" content=(.*) \\/&gt;/).replace('笔趣阁', '')</span><br><span class=\"line\">        </span><br><span class=\"line\">        let prev = getContent.getRegContent(contentHtml, /&lt;a href=\"(\\d+).html\"&gt;上一章&lt;\\/a&gt;/)</span><br><span class=\"line\">        let next =getContent.getRegContent(contentHtml, /&lt;a href=\"(\\d+).html\"&gt;下一章&lt;\\/a&gt;/)</span><br><span class=\"line\">        resolve(&#123;content, title, keywords, description, prev, next&#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  await ctx.render('chapter', &#123;</span><br><span class=\"line\">    content: content.content,</span><br><span class=\"line\">    title: content.title,</span><br><span class=\"line\">    keywords: content.keywords,</span><br><span class=\"line\">    description: content.description,</span><br><span class=\"line\">    prev: content.prev,</span><br><span class=\"line\">    next: content.next,</span><br><span class=\"line\">    type,</span><br><span class=\"line\">    category</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = router</span><br></pre></td></tr></table></figure>\n\n<p><code>views/index.pug</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extends layout</span><br><span class=\"line\"></span><br><span class=\"line\">block content</span><br><span class=\"line\">  div.novel-header</span><br><span class=\"line\">    h1= content.title</span><br><span class=\"line\">    div.novel-info</span><br><span class=\"line\">      img.novel-img(src=content.img)</span><br><span class=\"line\">      div.novel-cont</span><br><span class=\"line\">        p.novel-author= content.author</span><br><span class=\"line\">        p.last-update 最近更新：#&#123;content.last_update&#125;</span><br><span class=\"line\">        p.last-chapter 最新章节：#&#123;content.last_chapter&#125;</span><br><span class=\"line\">        p.novel-intro 本书简介：#&#123;content.info&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  div.novel-content</span><br><span class=\"line\">    ul.novel-chapter</span><br><span class=\"line\">      - for (var i = 0; i &lt; content.chapter.length; i++)</span><br><span class=\"line\">        li.novel-chapter-list</span><br><span class=\"line\">          a(href= category +&apos;/&apos;+ content.chapter[i].num)= content.chapter[i].title</span><br></pre></td></tr></table></figure>\n\n<p>运行</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run start</span><br></pre></td></tr></table></figure>\n\n<p>输入已经存在的目录就可以看到对应的书籍信息展示页面了，也可以看某一个章节的内容</p>\n<p>写这个爬虫，主要是忍受不了网站上的广告，实在是太多了，体验一点也不好</p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<h1 id=\"node-crawler\"><a href=\"#node-crawler\" class=\"headerlink\" title=\"node-crawler\"></a>node-crawler</h1><h2 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Run\"><a href=\"#Run\" class=\"headerlink\" title=\"Run\"></a>Run</h2><p>爬取书籍章节</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run crawler</span><br></pre></td></tr></table></figure>\n\n<p>生成详细内容</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run start</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"创建目录\"><a href=\"#创建目录\" class=\"headerlink\" title=\"创建目录\"></a>创建目录</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g koa-generator</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">koa2 node-novel</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> node-novel &amp;&amp; npm install</span><br></pre></td></tr></table></figure>\n\n<p>到这里项目目录大体已经搭建好</p>\n<h2 id=\"安装superagent及cheerio-superagent-charset\"><a href=\"#安装superagent及cheerio-superagent-charset\" class=\"headerlink\" title=\"安装superagent及cheerio, superagent-charset\"></a>安装<code>superagent</code>及<code>cheerio</code>, <code>superagent-charset</code></h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install cheerio superagent superagent-charset - S</span><br></pre></td></tr></table></figure>\n\n<p>使用<code>superagent</code>及<code>cheerio</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 引入相关依赖</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">'superagent'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> cheerio = <span class=\"built_in\">require</span>(<span class=\"string\">'cheerio'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用来解决不是utf8摘取到的内容乱码问题</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> superagent=<span class=\"built_in\">require</span>(<span class=\"string\">'superagent-charset'</span>)(request)</span><br><span class=\"line\"><span class=\"comment\">// 公用组件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> helpers = <span class=\"built_in\">require</span>(<span class=\"string\">'./helpers'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 获取书籍的信息</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> host = <span class=\"string\">'https://www.12zw.com/'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> type = <span class=\"number\">8</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> category = <span class=\"number\">8169</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> url = <span class=\"string\">`<span class=\"subst\">$&#123;host&#125;</span>/<span class=\"subst\">$&#123;type&#125;</span>/<span class=\"subst\">$&#123;category&#125;</span>`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//开始爬取</span></span><br><span class=\"line\">superagent.get(url).charset(<span class=\"string\">'gbk'</span>).end(<span class=\"function\">(<span class=\"params\">err, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果访问失败或者出错，会这行这里</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`抓取失败 - <span class=\"subst\">$&#123;err&#125;</span>`</span>)</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 创建这本书籍的存放目录</span></span><br><span class=\"line\">    helpers.mkdir(<span class=\"string\">`<span class=\"subst\">$&#123;type&#125;</span>/<span class=\"subst\">$&#123;category&#125;</span>`</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 使用cheerio</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> $ = cheerio.load(res.text)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 存放书籍信息对象</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> current_book = &#123;&#125;</span><br><span class=\"line\">    current_book.chapter = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 通过分析dom结构，可以获取到</span></span><br><span class=\"line\">    <span class=\"comment\">// 获取书籍的基本信息</span></span><br><span class=\"line\">    current_book.title = $(<span class=\"string\">'#info h1'</span>).text()</span><br><span class=\"line\">    current_book.author = $(<span class=\"string\">'#info p'</span>).eq(<span class=\"number\">0</span>).text().split(<span class=\"string\">'：'</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">    current_book.last_update = $(<span class=\"string\">'#info p'</span>).eq(<span class=\"number\">2</span>).text().split(<span class=\"string\">'：'</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">    current_book.last_chapter = $(<span class=\"string\">'#info p'</span>).eq(<span class=\"number\">3</span>).text().split(<span class=\"string\">'：'</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">    current_book.intro = $(<span class=\"string\">'#intro'</span>).html()</span><br><span class=\"line\">    <span class=\"comment\">// 书记章节</span></span><br><span class=\"line\">    $(<span class=\"string\">'#list a'</span>).each(<span class=\"function\">(<span class=\"params\">index, item</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> title = $(item).text()</span><br><span class=\"line\">      <span class=\"keyword\">let</span> num = $(item).attr(<span class=\"string\">'href'</span>).replace(<span class=\"string\">'.html'</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> href = $(item).attr(<span class=\"string\">'href'</span>)</span><br><span class=\"line\">      current_book.chapter.push(&#123;</span><br><span class=\"line\">        title,</span><br><span class=\"line\">        num,</span><br><span class=\"line\">        href</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// 创建书籍json数据</span></span><br><span class=\"line\">    helpers.write_config(<span class=\"string\">`<span class=\"subst\">$&#123;type&#125;</span>/<span class=\"subst\">$&#123;category&#125;</span>`</span>, current_book)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><code>helpers.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> debug = <span class=\"built_in\">require</span>(<span class=\"string\">'debug'</span>)(<span class=\"string\">'crawler'</span>)</span><br><span class=\"line\"><span class=\"comment\">// 创建书记存放目录</span></span><br><span class=\"line\">exports.mkdir = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">folder</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> mkdirp = <span class=\"built_in\">require</span>(<span class=\"string\">'mkdirp'</span>)</span><br><span class=\"line\">  mkdirp.sync(<span class=\"string\">'views/'</span>+folder, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"built_in\">console</span>.error(err)</span><br><span class=\"line\">    <span class=\"keyword\">else</span> debug(<span class=\"string\">'pow!'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//创建书籍json数据</span></span><br><span class=\"line\">exports.write_config = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">pagePath, content</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> book = <span class=\"built_in\">JSON</span>.stringify(content, <span class=\"literal\">null</span>, <span class=\"number\">4</span>)</span><br><span class=\"line\">  fs.writeFileSync(<span class=\"string\">'views/'</span>+pagePath+<span class=\"string\">'/book.json'</span>,book, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err;</span><br><span class=\"line\">    debug(<span class=\"string\">'It\\'s saved!'</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 创建书籍某个章节html或者pug</span></span><br><span class=\"line\">exports.write_chapter = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">pagePath, chapter, content</span>) </span>&#123;</span><br><span class=\"line\">  fs.writeFileSync(<span class=\"string\">'views/'</span>+pagePath+<span class=\"string\">'/'</span>+chapter.num+<span class=\"string\">'.html'</span>, content, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">err</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err;</span><br><span class=\"line\">    debug(<span class=\"string\">'It\\'s saved!'</span>);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>命令爬取书籍章节及信息</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run crawler</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"展示\"><a href=\"#展示\" class=\"headerlink\" title=\"展示\"></a>展示</h2><p><code>routes/index.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"built_in\">require</span>(<span class=\"string\">'koa-router'</span>)()</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> schedule = <span class=\"built_in\">require</span>(<span class=\"string\">'node-schedule'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> requestChapter = <span class=\"built_in\">require</span>(<span class=\"string\">'@novel/crawler'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> getContent = <span class=\"built_in\">require</span>(<span class=\"string\">'@utils/getContent'</span>)</span><br><span class=\"line\"><span class=\"comment\">// const getStat = require('@utils/judePath')</span></span><br><span class=\"line\"></span><br><span class=\"line\">router.get(<span class=\"string\">'/'</span>, <span class=\"keyword\">async</span> (ctx, next) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">await</span> ctx.render(<span class=\"string\">'index'</span>, &#123;</span><br><span class=\"line\">    title: <span class=\"string\">'Hello Koa 2!'</span>,</span><br><span class=\"line\">    con: <span class=\"string\">'&lt;h2&gt;hbb&lt;/h2&gt;'</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 某个书籍章节列表</span></span><br><span class=\"line\">router.get(<span class=\"string\">'/:type/:category'</span>, <span class=\"keyword\">async</span> (ctx, next) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> type = ctx.params.type</span><br><span class=\"line\">  <span class=\"keyword\">const</span> category = ctx.params.category</span><br><span class=\"line\">  <span class=\"keyword\">const</span> novelD = <span class=\"string\">`<span class=\"subst\">$&#123;type&#125;</span>/<span class=\"subst\">$&#123;category&#125;</span>`</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> content = <span class=\"literal\">null</span></span><br><span class=\"line\">  <span class=\"comment\">// 定时任务，每天凌晨获取最新list</span></span><br><span class=\"line\">  schedule.scheduleJob(<span class=\"string\">'0 0 0 * * ?'</span>, <span class=\"keyword\">async</span>() =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'The answer to life, the universe, and everything!'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> requestChapter()</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 获取书记json数据</span></span><br><span class=\"line\">  content = <span class=\"keyword\">await</span> fs.readFileSync(<span class=\"string\">'views/'</span>+novelD+<span class=\"string\">'/book.json'</span>,<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">  content = content ? <span class=\"built_in\">JSON</span>.parse(content) : content</span><br><span class=\"line\">  <span class=\"comment\">// 渲染模版</span></span><br><span class=\"line\">  <span class=\"keyword\">await</span> ctx.render(<span class=\"string\">'index'</span>, &#123;</span><br><span class=\"line\">    content: content,</span><br><span class=\"line\">    category,</span><br><span class=\"line\">    title: content.title,</span><br><span class=\"line\">    keywords: content.info,</span><br><span class=\"line\">    description: content.info</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 某篇文章</span></span><br><span class=\"line\">router.get(<span class=\"string\">'/:type/:category/:chapter'</span>, <span class=\"keyword\">async</span> (ctx, next) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> host = <span class=\"string\">'https://www.12zw.com/'</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> type = ctx.params.type</span><br><span class=\"line\">  <span class=\"keyword\">const</span> category = ctx.params.category</span><br><span class=\"line\">  <span class=\"keyword\">const</span> chapter = ctx.params.chapter</span><br><span class=\"line\">  <span class=\"keyword\">const</span> novelD = <span class=\"string\">`<span class=\"subst\">$&#123;type&#125;</span>/<span class=\"subst\">$&#123;category&#125;</span>`</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">const</span> request = <span class=\"built_in\">require</span>(<span class=\"string\">'superagent'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> cheerio = <span class=\"built_in\">require</span>(<span class=\"string\">'cheerio'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> superagent=<span class=\"built_in\">require</span>(<span class=\"string\">'superagent-charset'</span>)(request)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> content = <span class=\"keyword\">await</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 爬取详细的章节内容</span></span><br><span class=\"line\">    superagent.get(<span class=\"string\">`<span class=\"subst\">$&#123;host&#125;</span>/<span class=\"subst\">$&#123;novelD&#125;</span>/<span class=\"subst\">$&#123;chapter&#125;</span>.html`</span>).charset(<span class=\"string\">'gbk'</span>).end(<span class=\"function\">(<span class=\"params\">err, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果访问失败或者出错，会这行这里</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">`抓取失败 - <span class=\"subst\">$&#123;err&#125;</span>`</span>)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> $ = cheerio.load(res)</span><br><span class=\"line\">        <span class=\"keyword\">let</span> reg = <span class=\"regexp\">/&lt;div id=\"content\"&gt;(.*)&lt;\\/div&gt;/</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> contentHtml = res.text</span><br><span class=\"line\">        <span class=\"keyword\">let</span> content = getContent.getRegContent(contentHtml, reg)</span><br><span class=\"line\">        <span class=\"keyword\">let</span> title = getContent.getRegContent(contentHtml, /&lt;title&gt;(.*)&lt;\\/title&gt;/)</span><br><span class=\"line\">        let keywords = getContent.getRegContent(contentHtml, /&lt;meta name=\"keywords\" content=(.*) \\/&gt;/)</span><br><span class=\"line\">        let description = getContent.getRegContent(contentHtml, /&lt;meta name=\"description\" content=(.*) \\/&gt;/).replace('笔趣阁', '')</span><br><span class=\"line\">        </span><br><span class=\"line\">        let prev = getContent.getRegContent(contentHtml, /&lt;a href=\"(\\d+).html\"&gt;上一章&lt;\\/a&gt;/)</span><br><span class=\"line\">        let next =getContent.getRegContent(contentHtml, /&lt;a href=\"(\\d+).html\"&gt;下一章&lt;\\/a&gt;/)</span><br><span class=\"line\">        resolve(&#123;content, title, keywords, description, prev, next&#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  await ctx.render('chapter', &#123;</span><br><span class=\"line\">    content: content.content,</span><br><span class=\"line\">    title: content.title,</span><br><span class=\"line\">    keywords: content.keywords,</span><br><span class=\"line\">    description: content.description,</span><br><span class=\"line\">    prev: content.prev,</span><br><span class=\"line\">    next: content.next,</span><br><span class=\"line\">    type,</span><br><span class=\"line\">    category</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">module.exports = router</span><br></pre></td></tr></table></figure>\n\n<p><code>views/index.pug</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extends layout</span><br><span class=\"line\"></span><br><span class=\"line\">block content</span><br><span class=\"line\">  div.novel-header</span><br><span class=\"line\">    h1= content.title</span><br><span class=\"line\">    div.novel-info</span><br><span class=\"line\">      img.novel-img(src=content.img)</span><br><span class=\"line\">      div.novel-cont</span><br><span class=\"line\">        p.novel-author= content.author</span><br><span class=\"line\">        p.last-update 最近更新：#&#123;content.last_update&#125;</span><br><span class=\"line\">        p.last-chapter 最新章节：#&#123;content.last_chapter&#125;</span><br><span class=\"line\">        p.novel-intro 本书简介：#&#123;content.info&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  div.novel-content</span><br><span class=\"line\">    ul.novel-chapter</span><br><span class=\"line\">      - for (var i = 0; i &lt; content.chapter.length; i++)</span><br><span class=\"line\">        li.novel-chapter-list</span><br><span class=\"line\">          a(href= category +&apos;/&apos;+ content.chapter[i].num)= content.chapter[i].title</span><br></pre></td></tr></table></figure>\n\n<p>运行</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run start</span><br></pre></td></tr></table></figure>\n\n<p>输入已经存在的目录就可以看到对应的书籍信息展示页面了，也可以看某一个章节的内容</p>\n<p>写这个爬虫，主要是忍受不了网站上的广告，实在是太多了，体验一点也不好</p>\n"},{"title":"Flex 布局练习","comments":1,"description":"Flex 布局练习, position, float, display","date":"2016-04-01T13:14:10.000Z","keywords":"flex, css, position, float, display","_content":"\n在学flex布局时候，写的一个容器的属性练习：\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/flex.png)\n\n 示例： [**点击查看**](http://www.hbbaly.com/wp-content/themes/blog/case/flex.html)","source":"_posts/css-3.md","raw":"---\ntitle: Flex 布局练习\ncomments: true\ndescription: Flex 布局练习, position, float, display\ntags: \"css\"\ndate: 2016-04-1 21:14:10\ncategories: \"css\"\nkeywords: flex, css, position, float, display\n---\n\n在学flex布局时候，写的一个容器的属性练习：\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/flex.png)\n\n 示例： [**点击查看**](http://www.hbbaly.com/wp-content/themes/blog/case/flex.html)","slug":"css-3","published":1,"updated":"2019-09-17T15:27:40.194Z","layout":"post","photos":[],"link":"","_id":"ck1p3g29i0007n0b9gesxyv0b","content":"<p>在学flex布局时候，写的一个容器的属性练习：</p>\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/flex.png\" class=\"lozad\"></p>\n<p> 示例： <a href=\"http://www.hbbaly.com/wp-content/themes/blog/case/flex.html\" target=\"_blank\" rel=\"noopener\"><strong>点击查看</strong></a></p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<p>在学flex布局时候，写的一个容器的属性练习：</p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/flex.png\" alt></p>\n<p> 示例： <a href=\"http://www.hbbaly.com/wp-content/themes/blog/case/flex.html\" target=\"_blank\" rel=\"noopener\"><strong>点击查看</strong></a></p>\n"},{"title":"Flex 布局","comments":1,"description":"Flex 布局, position, float, display","date":"2016-04-01T11:12:20.000Z","keywords":"flex, css, position, float, display","_content":"\n我在学习`flex`的时候，看的是阮一峰的大神的`flex`布局教程，这里直接转载阮一峰大神。\n## 概述：\n\n网页布局（`layout`）是`CSS`的一个重点应用。\n![](https://www.runoob.com/wp-content/uploads/2015/07/7bf8bed24a17fbebd3e171f9630dbccb.gif)\n\n布局的传统解决方案，基于盒状模型，依赖 `display`属性 + `position`属性 + `float`属性。它对于那些特殊布局非常不方便，比如，垂直居中就不容易实现。\n\n2009年，W3C提出了一种新的方案—-`Flex`布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/8712d713c7d0b884a5cb9770efc422b4.jpg)\n\n`Flex`布局将成为未来布局的首选方案。本文介绍Flex布局的语法。\n\n## Flex布局是什么？\n`Flex`是`Flexible Box`的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。\n\n任何一个容器都可以指定为`Flex`布局。\n\n```css\n\n.box{\n  display: flex;\n}\n```\n\n行内元素也可以使用Flex布局。\n\n```css\n.box{\n  display: inline-flex;\n}\n```\n\n`Webkit`内核的浏览器，必须加上`-webkit`前缀。\n\n```css\n\n.box{\n  display: -webkit-flex; /* Safari */\n  display: flex;\n}\n```\n\n注意，设为`Flex`布局以后，子元素的`float`、`clear`和`vertical-align`属性将失效。\n\n## 基本概念\n\n采用`Flex`布局的元素，称为`Flex`容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为`Flex`项目（flex item），简称”项目”。\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/3791e575c48b3698be6a94ae1dbff79d.png)\n\n容器默认存在两根轴：水平的主轴（`main axis`）和垂直的交叉轴（`cross axis`）。主轴的开始位置（与边框的交叉点）叫做`main start`，结束位置叫做`main end`；交叉轴的开始位置叫做`cross start`，结束位置叫做`cross end`。\n\n项目默认沿主轴排列。单个项目占据的主轴空间叫做`main size`，占据的交叉轴空间叫做`cross size`。\n\n## 容器的属性\n\n以下6个属性设置在容器上。\n\n- flex-direction\n\n- flex-wrap\n\n- flex-flow\n\n- justify-content\n\n- align-items\n\n- align-content\n\n### flex-direction属性\n\n`flex-direction`属性决定主轴的方向（即项目的排列方向）。\n\n```css\n\n.box {\n  flex-direction: row | row-reverse | column | column-reverse;\n}\n```\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/0cbe5f8268121114e87d0546e53cda6e.png)\n\n它可能有4个值。\n\n- row（默认值）：主轴为水平方向，起点在左端。\n- row-reverse：主轴为水平方向，起点在右端。\n- column：主轴为垂直方向，起点在上沿。\n- column-reverse：主轴为垂直方向，起点在下沿。\n  \n### flex-wrap属性\n\n默认情况下，项目都排在一条线（又称”轴线”）上。`flex-wrap`属性定义，如果一条轴线排不下，如何换行。\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/903d5b7df55779c03f2687a7d4d6bcea.png)\n\n```css\n\n.box{\n  flex-wrap: nowrap | wrap | wrap-reverse;\n}\n```\n它可能取三个值。\n\n（1）nowrap（默认）：不换行。\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/9da1f23965756568b4c6ea7124db7b9a.png)\n\n（2）wrap：换行，第一行在上方。\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/3c6b3c8b8fe5e26bca6fb57538cf72d9.jpg)\n\n（3）wrap-reverse：换行，第一行在下方。\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/fb4cf2bab8b6b744b64f6d7a99cd577c.jpg)\n\n### flex-flow\n\n`flex-flow`属性是`flex-direction`属性和`flex-wrap`属性的简写形式，默认值为`row nowrap`。\n\n```css\n\n.box {\n  flex-flow: <flex-direction> || <flex-wrap>;\n}\n\n```\n\n### justify-content属性\n\n`justify-content`属性定义了项目在主轴上的对齐方式。\n\n```css\n\n.box {\n  justify-content: flex-start | flex-end | center | space-between | space-around;\n}\n```\n![](https://www.runoob.com/wp-content/uploads/2015/07/c55dfe8e3422458b50e985552ef13ba5.png)\n\n\n它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。\n\n- flex-start（默认值）：左对齐\n- flex-end：右对齐\n- center： 居中\n- space-between：两端对齐，项目之间的间隔都相等。\n- space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。\n\n\n### align-items属性\n\n`align-items`属性定义项目在交叉轴上如何对齐。\n\n```css\n\n.box {\n  align-items: flex-start | flex-end | center | baseline | stretch;\n}\n```\n![](https://www.runoob.com/wp-content/uploads/2015/07/2b0c39c7e7a80d5a784c8c2ca63cde17.png)\n\n它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。\n\n- flex-start：交叉轴的起点对齐。\n- flex-end：交叉轴的终点对齐。\n- center：交叉轴的中点对齐。\n- baseline: 项目的第一行文字的基线对齐。\n- stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。\n\n\n### align-content属性\n\n`align-content`属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。\n\n```css\n\n.box {\n  align-content: flex-start | flex-end | center | space-between | space-around | stretch;\n}\n```\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/f10918ccb8a13247c9d47715a2bd2c33.png)\n\n该属性可能取6个值。\n\n- flex-start：与交叉轴的起点对齐。\n- flex-end：与交叉轴的终点对齐。\n- center：与交叉轴的中点对齐。\n- space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。\n- space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。\n- stretch（默认值）：轴线占满整个交叉轴。\n\n\n## 项目的属性\n以下6个属性设置在项目上。\n\n- order\n- flex-grow\n- flex-shrink\n- flex-basis\n- flex\n- align-self\n\n\n### order属性\n`order`属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。\n\n```css\n.item {\n  order: <integer>;\n}\n```\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/59e399c72daafcfcc20ede36bf32f266.png)\n\n### flex-grow属性\n`flex-grow`属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。\n\n```css\n.item {\n  flex-grow: <number>; /* default 0 */\n}\n```\n![](https://www.runoob.com/wp-content/uploads/2015/07/f41c08bb35962ed79e7686f735d6cd78.png)\n\n\n如果所有项目的`flex-grow`属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的`flex-grow`属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。\n\n### flex-shrink属性\n`flex-shrink`属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。\n\n```css\n.item {\n  flex-shrink: <number>; /* default 1 */\n}\n```\n![](https://www.runoob.com/wp-content/uploads/2015/07/240d3e960043a729bb3ff5e34987904f.jpg)\n\n\n如果所有项目的`flex-shrink`属性都为1，当空间不足时，都将等比例缩小。如果一个项目的`flex-shrink`属性为0，其他项目都为1，则空间不足时，前者不缩小。\n\n负值对该属性无效。\n\n### flex-basis属性\n`flex-basis`属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为`auto`，即项目的本来大小。\n\n```css\n.item {\n  flex-basis: <length> | auto; /* default auto */\n}\n```\n\n它可以设为跟`width`或`height`属性一样的值（比如350px），则项目将占据固定空间。\n\n### flex属性\n`flex`属性是`flex-grow`, `flex-shrink` 和 `flex-basis`的简写，默认值为0 1 auto。后两个属性可选。\n\n```css\n.item {\n  flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\n}\n```\n\n该属性有两个快捷值：`auto` (1 1 auto) 和 `none` (0 0 auto)。\n\n建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。\n\n### align-self属性\n\n`align-self`属性允许单个项目有与其他项目不一样的对齐方式，可覆盖`align-items`属性。默认值为`auto`，表示继承父元素的`align-items`属性，如果没有父元素，则等同于`stretch`。\n\n```css\n.item {\n  align-self: auto | flex-start | flex-end | center | baseline | stretch;\n}\n```\n![](https://www.runoob.com/wp-content/uploads/2015/07/55b19171b8b6b9487d717bf2ecbba6de.png)\n\n该属性可能取6个值，除了auto，其他都与`align-items`属性完全一致。\n\n来源：\n\n- http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html","source":"_posts/css-2.md","raw":"---\ntitle: Flex 布局\ncomments: true\ndescription: Flex 布局, position, float, display\ntags: \"css\"\ndate: 2016-04-1 19:12:20\ncategories: \"css\"\nkeywords: flex, css, position, float, display\n---\n\n我在学习`flex`的时候，看的是阮一峰的大神的`flex`布局教程，这里直接转载阮一峰大神。\n## 概述：\n\n网页布局（`layout`）是`CSS`的一个重点应用。\n![](https://www.runoob.com/wp-content/uploads/2015/07/7bf8bed24a17fbebd3e171f9630dbccb.gif)\n\n布局的传统解决方案，基于盒状模型，依赖 `display`属性 + `position`属性 + `float`属性。它对于那些特殊布局非常不方便，比如，垂直居中就不容易实现。\n\n2009年，W3C提出了一种新的方案—-`Flex`布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/8712d713c7d0b884a5cb9770efc422b4.jpg)\n\n`Flex`布局将成为未来布局的首选方案。本文介绍Flex布局的语法。\n\n## Flex布局是什么？\n`Flex`是`Flexible Box`的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。\n\n任何一个容器都可以指定为`Flex`布局。\n\n```css\n\n.box{\n  display: flex;\n}\n```\n\n行内元素也可以使用Flex布局。\n\n```css\n.box{\n  display: inline-flex;\n}\n```\n\n`Webkit`内核的浏览器，必须加上`-webkit`前缀。\n\n```css\n\n.box{\n  display: -webkit-flex; /* Safari */\n  display: flex;\n}\n```\n\n注意，设为`Flex`布局以后，子元素的`float`、`clear`和`vertical-align`属性将失效。\n\n## 基本概念\n\n采用`Flex`布局的元素，称为`Flex`容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为`Flex`项目（flex item），简称”项目”。\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/3791e575c48b3698be6a94ae1dbff79d.png)\n\n容器默认存在两根轴：水平的主轴（`main axis`）和垂直的交叉轴（`cross axis`）。主轴的开始位置（与边框的交叉点）叫做`main start`，结束位置叫做`main end`；交叉轴的开始位置叫做`cross start`，结束位置叫做`cross end`。\n\n项目默认沿主轴排列。单个项目占据的主轴空间叫做`main size`，占据的交叉轴空间叫做`cross size`。\n\n## 容器的属性\n\n以下6个属性设置在容器上。\n\n- flex-direction\n\n- flex-wrap\n\n- flex-flow\n\n- justify-content\n\n- align-items\n\n- align-content\n\n### flex-direction属性\n\n`flex-direction`属性决定主轴的方向（即项目的排列方向）。\n\n```css\n\n.box {\n  flex-direction: row | row-reverse | column | column-reverse;\n}\n```\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/0cbe5f8268121114e87d0546e53cda6e.png)\n\n它可能有4个值。\n\n- row（默认值）：主轴为水平方向，起点在左端。\n- row-reverse：主轴为水平方向，起点在右端。\n- column：主轴为垂直方向，起点在上沿。\n- column-reverse：主轴为垂直方向，起点在下沿。\n  \n### flex-wrap属性\n\n默认情况下，项目都排在一条线（又称”轴线”）上。`flex-wrap`属性定义，如果一条轴线排不下，如何换行。\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/903d5b7df55779c03f2687a7d4d6bcea.png)\n\n```css\n\n.box{\n  flex-wrap: nowrap | wrap | wrap-reverse;\n}\n```\n它可能取三个值。\n\n（1）nowrap（默认）：不换行。\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/9da1f23965756568b4c6ea7124db7b9a.png)\n\n（2）wrap：换行，第一行在上方。\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/3c6b3c8b8fe5e26bca6fb57538cf72d9.jpg)\n\n（3）wrap-reverse：换行，第一行在下方。\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/fb4cf2bab8b6b744b64f6d7a99cd577c.jpg)\n\n### flex-flow\n\n`flex-flow`属性是`flex-direction`属性和`flex-wrap`属性的简写形式，默认值为`row nowrap`。\n\n```css\n\n.box {\n  flex-flow: <flex-direction> || <flex-wrap>;\n}\n\n```\n\n### justify-content属性\n\n`justify-content`属性定义了项目在主轴上的对齐方式。\n\n```css\n\n.box {\n  justify-content: flex-start | flex-end | center | space-between | space-around;\n}\n```\n![](https://www.runoob.com/wp-content/uploads/2015/07/c55dfe8e3422458b50e985552ef13ba5.png)\n\n\n它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。\n\n- flex-start（默认值）：左对齐\n- flex-end：右对齐\n- center： 居中\n- space-between：两端对齐，项目之间的间隔都相等。\n- space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。\n\n\n### align-items属性\n\n`align-items`属性定义项目在交叉轴上如何对齐。\n\n```css\n\n.box {\n  align-items: flex-start | flex-end | center | baseline | stretch;\n}\n```\n![](https://www.runoob.com/wp-content/uploads/2015/07/2b0c39c7e7a80d5a784c8c2ca63cde17.png)\n\n它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。\n\n- flex-start：交叉轴的起点对齐。\n- flex-end：交叉轴的终点对齐。\n- center：交叉轴的中点对齐。\n- baseline: 项目的第一行文字的基线对齐。\n- stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。\n\n\n### align-content属性\n\n`align-content`属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。\n\n```css\n\n.box {\n  align-content: flex-start | flex-end | center | space-between | space-around | stretch;\n}\n```\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/f10918ccb8a13247c9d47715a2bd2c33.png)\n\n该属性可能取6个值。\n\n- flex-start：与交叉轴的起点对齐。\n- flex-end：与交叉轴的终点对齐。\n- center：与交叉轴的中点对齐。\n- space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。\n- space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。\n- stretch（默认值）：轴线占满整个交叉轴。\n\n\n## 项目的属性\n以下6个属性设置在项目上。\n\n- order\n- flex-grow\n- flex-shrink\n- flex-basis\n- flex\n- align-self\n\n\n### order属性\n`order`属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。\n\n```css\n.item {\n  order: <integer>;\n}\n```\n\n![](https://www.runoob.com/wp-content/uploads/2015/07/59e399c72daafcfcc20ede36bf32f266.png)\n\n### flex-grow属性\n`flex-grow`属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。\n\n```css\n.item {\n  flex-grow: <number>; /* default 0 */\n}\n```\n![](https://www.runoob.com/wp-content/uploads/2015/07/f41c08bb35962ed79e7686f735d6cd78.png)\n\n\n如果所有项目的`flex-grow`属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的`flex-grow`属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。\n\n### flex-shrink属性\n`flex-shrink`属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。\n\n```css\n.item {\n  flex-shrink: <number>; /* default 1 */\n}\n```\n![](https://www.runoob.com/wp-content/uploads/2015/07/240d3e960043a729bb3ff5e34987904f.jpg)\n\n\n如果所有项目的`flex-shrink`属性都为1，当空间不足时，都将等比例缩小。如果一个项目的`flex-shrink`属性为0，其他项目都为1，则空间不足时，前者不缩小。\n\n负值对该属性无效。\n\n### flex-basis属性\n`flex-basis`属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为`auto`，即项目的本来大小。\n\n```css\n.item {\n  flex-basis: <length> | auto; /* default auto */\n}\n```\n\n它可以设为跟`width`或`height`属性一样的值（比如350px），则项目将占据固定空间。\n\n### flex属性\n`flex`属性是`flex-grow`, `flex-shrink` 和 `flex-basis`的简写，默认值为0 1 auto。后两个属性可选。\n\n```css\n.item {\n  flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\n}\n```\n\n该属性有两个快捷值：`auto` (1 1 auto) 和 `none` (0 0 auto)。\n\n建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。\n\n### align-self属性\n\n`align-self`属性允许单个项目有与其他项目不一样的对齐方式，可覆盖`align-items`属性。默认值为`auto`，表示继承父元素的`align-items`属性，如果没有父元素，则等同于`stretch`。\n\n```css\n.item {\n  align-self: auto | flex-start | flex-end | center | baseline | stretch;\n}\n```\n![](https://www.runoob.com/wp-content/uploads/2015/07/55b19171b8b6b9487d717bf2ecbba6de.png)\n\n该属性可能取6个值，除了auto，其他都与`align-items`属性完全一致。\n\n来源：\n\n- http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html","slug":"css-2","published":1,"updated":"2019-09-17T01:36:04.439Z","layout":"post","photos":[],"link":"","_id":"ck1p3g29k0008n0b9ncdq1og9","content":"<p>我在学习<code>flex</code>的时候，看的是阮一峰的大神的<code>flex</code>布局教程，这里直接转载阮一峰大神。</p>\n<h2 id=\"概述：\"><a href=\"#概述：\" class=\"headerlink\" title=\"概述：\"></a>概述：</h2><p>网页布局（<code>layout</code>）是<code>CSS</code>的一个重点应用。<br><img alt data-src=\"https://www.runoob.com/wp-content/uploads/2015/07/7bf8bed24a17fbebd3e171f9630dbccb.gif\" class=\"lozad\"></p>\n<p>布局的传统解决方案，基于盒状模型，依赖 <code>display</code>属性 + <code>position</code>属性 + <code>float</code>属性。它对于那些特殊布局非常不方便，比如，垂直居中就不容易实现。</p>\n<p>2009年，W3C提出了一种新的方案—-<code>Flex</code>布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。</p>\n<p><img alt data-src=\"https://www.runoob.com/wp-content/uploads/2015/07/8712d713c7d0b884a5cb9770efc422b4.jpg\" class=\"lozad\"></p>\n<p><code>Flex</code>布局将成为未来布局的首选方案。本文介绍Flex布局的语法。</p>\n<h2 id=\"Flex布局是什么？\"><a href=\"#Flex布局是什么？\" class=\"headerlink\" title=\"Flex布局是什么？\"></a>Flex布局是什么？</h2><p><code>Flex</code>是<code>Flexible Box</code>的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。</p>\n<p>任何一个容器都可以指定为<code>Flex</code>布局。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>行内元素也可以使用Flex布局。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>Webkit</code>内核的浏览器，必须加上<code>-webkit</code>前缀。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: -webkit-flex; <span class=\"comment\">/* Safari */</span></span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意，设为<code>Flex</code>布局以后，子元素的<code>float</code>、<code>clear</code>和<code>vertical-align</code>属性将失效。</p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><p>采用<code>Flex</code>布局的元素，称为<code>Flex</code>容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为<code>Flex</code>项目（flex item），简称”项目”。</p>\n<p><img alt data-src=\"https://www.runoob.com/wp-content/uploads/2015/07/3791e575c48b3698be6a94ae1dbff79d.png\" class=\"lozad\"></p>\n<p>容器默认存在两根轴：水平的主轴（<code>main axis</code>）和垂直的交叉轴（<code>cross axis</code>）。主轴的开始位置（与边框的交叉点）叫做<code>main start</code>，结束位置叫做<code>main end</code>；交叉轴的开始位置叫做<code>cross start</code>，结束位置叫做<code>cross end</code>。</p>\n<p>项目默认沿主轴排列。单个项目占据的主轴空间叫做<code>main size</code>，占据的交叉轴空间叫做<code>cross size</code>。</p>\n<h2 id=\"容器的属性\"><a href=\"#容器的属性\" class=\"headerlink\" title=\"容器的属性\"></a>容器的属性</h2><p>以下6个属性设置在容器上。</p>\n<ul>\n<li><p>flex-direction</p>\n</li>\n<li><p>flex-wrap</p>\n</li>\n<li><p>flex-flow</p>\n</li>\n<li><p>justify-content</p>\n</li>\n<li><p>align-items</p>\n</li>\n<li><p>align-content</p>\n</li>\n</ul>\n<h3 id=\"flex-direction属性\"><a href=\"#flex-direction属性\" class=\"headerlink\" title=\"flex-direction属性\"></a>flex-direction属性</h3><p><code>flex-direction</code>属性决定主轴的方向（即项目的排列方向）。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-direction</span>: row | row-reverse | column | column-reverse;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"https://www.runoob.com/wp-content/uploads/2015/07/0cbe5f8268121114e87d0546e53cda6e.png\" class=\"lozad\"></p>\n<p>它可能有4个值。</p>\n<ul>\n<li>row（默认值）：主轴为水平方向，起点在左端。</li>\n<li>row-reverse：主轴为水平方向，起点在右端。</li>\n<li>column：主轴为垂直方向，起点在上沿。</li>\n<li>column-reverse：主轴为垂直方向，起点在下沿。</li>\n</ul>\n<h3 id=\"flex-wrap属性\"><a href=\"#flex-wrap属性\" class=\"headerlink\" title=\"flex-wrap属性\"></a>flex-wrap属性</h3><p>默认情况下，项目都排在一条线（又称”轴线”）上。<code>flex-wrap</code>属性定义，如果一条轴线排不下，如何换行。</p>\n<p><img alt data-src=\"https://www.runoob.com/wp-content/uploads/2015/07/903d5b7df55779c03f2687a7d4d6bcea.png\" class=\"lozad\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-wrap</span>: nowrap | wrap | wrap-reverse;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>它可能取三个值。</p>\n<p>（1）nowrap（默认）：不换行。</p>\n<p><img alt data-src=\"https://www.runoob.com/wp-content/uploads/2015/07/9da1f23965756568b4c6ea7124db7b9a.png\" class=\"lozad\"></p>\n<p>（2）wrap：换行，第一行在上方。</p>\n<p><img alt data-src=\"https://www.runoob.com/wp-content/uploads/2015/07/3c6b3c8b8fe5e26bca6fb57538cf72d9.jpg\" class=\"lozad\"></p>\n<p>（3）wrap-reverse：换行，第一行在下方。</p>\n<p><img alt data-src=\"https://www.runoob.com/wp-content/uploads/2015/07/fb4cf2bab8b6b744b64f6d7a99cd577c.jpg\" class=\"lozad\"></p>\n<h3 id=\"flex-flow\"><a href=\"#flex-flow\" class=\"headerlink\" title=\"flex-flow\"></a>flex-flow</h3><p><code>flex-flow</code>属性是<code>flex-direction</code>属性和<code>flex-wrap</code>属性的简写形式，默认值为<code>row nowrap</code>。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-flow</span>: &lt;flex-direction&gt; || &lt;flex-wrap&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"justify-content属性\"><a href=\"#justify-content属性\" class=\"headerlink\" title=\"justify-content属性\"></a>justify-content属性</h3><p><code>justify-content</code>属性定义了项目在主轴上的对齐方式。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: flex-start | flex-end | center | space-between | space-around;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"https://www.runoob.com/wp-content/uploads/2015/07/c55dfe8e3422458b50e985552ef13ba5.png\" class=\"lozad\"></p>\n<p>它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。</p>\n<ul>\n<li>flex-start（默认值）：左对齐</li>\n<li>flex-end：右对齐</li>\n<li>center： 居中</li>\n<li>space-between：两端对齐，项目之间的间隔都相等。</li>\n<li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li>\n</ul>\n<h3 id=\"align-items属性\"><a href=\"#align-items属性\" class=\"headerlink\" title=\"align-items属性\"></a>align-items属性</h3><p><code>align-items</code>属性定义项目在交叉轴上如何对齐。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: flex-start | flex-end | center | baseline | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"https://www.runoob.com/wp-content/uploads/2015/07/2b0c39c7e7a80d5a784c8c2ca63cde17.png\" class=\"lozad\"></p>\n<p>它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。</p>\n<ul>\n<li>flex-start：交叉轴的起点对齐。</li>\n<li>flex-end：交叉轴的终点对齐。</li>\n<li>center：交叉轴的中点对齐。</li>\n<li>baseline: 项目的第一行文字的基线对齐。</li>\n<li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li>\n</ul>\n<h3 id=\"align-content属性\"><a href=\"#align-content属性\" class=\"headerlink\" title=\"align-content属性\"></a>align-content属性</h3><p><code>align-content</code>属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">align-content</span>: flex-start | flex-end | center | space-between | space-around | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"https://www.runoob.com/wp-content/uploads/2015/07/f10918ccb8a13247c9d47715a2bd2c33.png\" class=\"lozad\"></p>\n<p>该属性可能取6个值。</p>\n<ul>\n<li>flex-start：与交叉轴的起点对齐。</li>\n<li>flex-end：与交叉轴的终点对齐。</li>\n<li>center：与交叉轴的中点对齐。</li>\n<li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</li>\n<li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li>\n<li>stretch（默认值）：轴线占满整个交叉轴。</li>\n</ul>\n<h2 id=\"项目的属性\"><a href=\"#项目的属性\" class=\"headerlink\" title=\"项目的属性\"></a>项目的属性</h2><p>以下6个属性设置在项目上。</p>\n<ul>\n<li>order</li>\n<li>flex-grow</li>\n<li>flex-shrink</li>\n<li>flex-basis</li>\n<li>flex</li>\n<li>align-self</li>\n</ul>\n<h3 id=\"order属性\"><a href=\"#order属性\" class=\"headerlink\" title=\"order属性\"></a>order属性</h3><p><code>order</code>属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">order</span>: &lt;integer&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"https://www.runoob.com/wp-content/uploads/2015/07/59e399c72daafcfcc20ede36bf32f266.png\" class=\"lozad\"></p>\n<h3 id=\"flex-grow属性\"><a href=\"#flex-grow属性\" class=\"headerlink\" title=\"flex-grow属性\"></a>flex-grow属性</h3><p><code>flex-grow</code>属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-grow</span>: &lt;number&gt;; <span class=\"comment\">/* default 0 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"https://www.runoob.com/wp-content/uploads/2015/07/f41c08bb35962ed79e7686f735d6cd78.png\" class=\"lozad\"></p>\n<p>如果所有项目的<code>flex-grow</code>属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的<code>flex-grow</code>属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p>\n<h3 id=\"flex-shrink属性\"><a href=\"#flex-shrink属性\" class=\"headerlink\" title=\"flex-shrink属性\"></a>flex-shrink属性</h3><p><code>flex-shrink</code>属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-shrink</span>: &lt;number&gt;; <span class=\"comment\">/* default 1 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"https://www.runoob.com/wp-content/uploads/2015/07/240d3e960043a729bb3ff5e34987904f.jpg\" class=\"lozad\"></p>\n<p>如果所有项目的<code>flex-shrink</code>属性都为1，当空间不足时，都将等比例缩小。如果一个项目的<code>flex-shrink</code>属性为0，其他项目都为1，则空间不足时，前者不缩小。</p>\n<p>负值对该属性无效。</p>\n<h3 id=\"flex-basis属性\"><a href=\"#flex-basis属性\" class=\"headerlink\" title=\"flex-basis属性\"></a>flex-basis属性</h3><p><code>flex-basis</code>属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为<code>auto</code>，即项目的本来大小。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-basis</span>: &lt;length&gt; | auto; <span class=\"comment\">/* default auto */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>它可以设为跟<code>width</code>或<code>height</code>属性一样的值（比如350px），则项目将占据固定空间。</p>\n<h3 id=\"flex属性\"><a href=\"#flex属性\" class=\"headerlink\" title=\"flex属性\"></a>flex属性</h3><p><code>flex</code>属性是<code>flex-grow</code>, <code>flex-shrink</code> 和 <code>flex-basis</code>的简写，默认值为0 1 auto。后两个属性可选。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: none | [ &lt;<span class=\"string\">'flex-grow'</span>&gt; &lt;<span class=\"string\">'flex-shrink'</span>&gt;? || &lt;<span class=\"string\">'flex-basis'</span>&gt; ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>该属性有两个快捷值：<code>auto</code> (1 1 auto) 和 <code>none</code> (0 0 auto)。</p>\n<p>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p>\n<h3 id=\"align-self属性\"><a href=\"#align-self属性\" class=\"headerlink\" title=\"align-self属性\"></a>align-self属性</h3><p><code>align-self</code>属性允许单个项目有与其他项目不一样的对齐方式，可覆盖<code>align-items</code>属性。默认值为<code>auto</code>，表示继承父元素的<code>align-items</code>属性，如果没有父元素，则等同于<code>stretch</code>。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">align-self</span>: auto | flex-start | flex-end | center | baseline | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"https://www.runoob.com/wp-content/uploads/2015/07/55b19171b8b6b9487d717bf2ecbba6de.png\" class=\"lozad\"></p>\n<p>该属性可能取6个值，除了auto，其他都与<code>align-items</code>属性完全一致。</p>\n<p>来源：</p>\n<ul>\n<li><a href=\"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html</a></li>\n</ul>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<p>我在学习<code>flex</code>的时候，看的是阮一峰的大神的<code>flex</code>布局教程，这里直接转载阮一峰大神。</p>\n<h2 id=\"概述：\"><a href=\"#概述：\" class=\"headerlink\" title=\"概述：\"></a>概述：</h2><p>网页布局（<code>layout</code>）是<code>CSS</code>的一个重点应用。<br><img src=\"https://www.runoob.com/wp-content/uploads/2015/07/7bf8bed24a17fbebd3e171f9630dbccb.gif\" alt></p>\n<p>布局的传统解决方案，基于盒状模型，依赖 <code>display</code>属性 + <code>position</code>属性 + <code>float</code>属性。它对于那些特殊布局非常不方便，比如，垂直居中就不容易实现。</p>\n<p>2009年，W3C提出了一种新的方案—-<code>Flex</code>布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2015/07/8712d713c7d0b884a5cb9770efc422b4.jpg\" alt></p>\n<p><code>Flex</code>布局将成为未来布局的首选方案。本文介绍Flex布局的语法。</p>\n<h2 id=\"Flex布局是什么？\"><a href=\"#Flex布局是什么？\" class=\"headerlink\" title=\"Flex布局是什么？\"></a>Flex布局是什么？</h2><p><code>Flex</code>是<code>Flexible Box</code>的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。</p>\n<p>任何一个容器都可以指定为<code>Flex</code>布局。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>行内元素也可以使用Flex布局。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>Webkit</code>内核的浏览器，必须加上<code>-webkit</code>前缀。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: -webkit-flex; <span class=\"comment\">/* Safari */</span></span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意，设为<code>Flex</code>布局以后，子元素的<code>float</code>、<code>clear</code>和<code>vertical-align</code>属性将失效。</p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><p>采用<code>Flex</code>布局的元素，称为<code>Flex</code>容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为<code>Flex</code>项目（flex item），简称”项目”。</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2015/07/3791e575c48b3698be6a94ae1dbff79d.png\" alt></p>\n<p>容器默认存在两根轴：水平的主轴（<code>main axis</code>）和垂直的交叉轴（<code>cross axis</code>）。主轴的开始位置（与边框的交叉点）叫做<code>main start</code>，结束位置叫做<code>main end</code>；交叉轴的开始位置叫做<code>cross start</code>，结束位置叫做<code>cross end</code>。</p>\n<p>项目默认沿主轴排列。单个项目占据的主轴空间叫做<code>main size</code>，占据的交叉轴空间叫做<code>cross size</code>。</p>\n<h2 id=\"容器的属性\"><a href=\"#容器的属性\" class=\"headerlink\" title=\"容器的属性\"></a>容器的属性</h2><p>以下6个属性设置在容器上。</p>\n<ul>\n<li><p>flex-direction</p>\n</li>\n<li><p>flex-wrap</p>\n</li>\n<li><p>flex-flow</p>\n</li>\n<li><p>justify-content</p>\n</li>\n<li><p>align-items</p>\n</li>\n<li><p>align-content</p>\n</li>\n</ul>\n<h3 id=\"flex-direction属性\"><a href=\"#flex-direction属性\" class=\"headerlink\" title=\"flex-direction属性\"></a>flex-direction属性</h3><p><code>flex-direction</code>属性决定主轴的方向（即项目的排列方向）。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-direction</span>: row | row-reverse | column | column-reverse;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2015/07/0cbe5f8268121114e87d0546e53cda6e.png\" alt></p>\n<p>它可能有4个值。</p>\n<ul>\n<li>row（默认值）：主轴为水平方向，起点在左端。</li>\n<li>row-reverse：主轴为水平方向，起点在右端。</li>\n<li>column：主轴为垂直方向，起点在上沿。</li>\n<li>column-reverse：主轴为垂直方向，起点在下沿。</li>\n</ul>\n<h3 id=\"flex-wrap属性\"><a href=\"#flex-wrap属性\" class=\"headerlink\" title=\"flex-wrap属性\"></a>flex-wrap属性</h3><p>默认情况下，项目都排在一条线（又称”轴线”）上。<code>flex-wrap</code>属性定义，如果一条轴线排不下，如何换行。</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2015/07/903d5b7df55779c03f2687a7d4d6bcea.png\" alt></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-wrap</span>: nowrap | wrap | wrap-reverse;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>它可能取三个值。</p>\n<p>（1）nowrap（默认）：不换行。</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2015/07/9da1f23965756568b4c6ea7124db7b9a.png\" alt></p>\n<p>（2）wrap：换行，第一行在上方。</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2015/07/3c6b3c8b8fe5e26bca6fb57538cf72d9.jpg\" alt></p>\n<p>（3）wrap-reverse：换行，第一行在下方。</p>\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2015/07/fb4cf2bab8b6b744b64f6d7a99cd577c.jpg\" alt></p>\n<h3 id=\"flex-flow\"><a href=\"#flex-flow\" class=\"headerlink\" title=\"flex-flow\"></a>flex-flow</h3><p><code>flex-flow</code>属性是<code>flex-direction</code>属性和<code>flex-wrap</code>属性的简写形式，默认值为<code>row nowrap</code>。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-flow</span>: &lt;flex-direction&gt; || &lt;flex-wrap&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"justify-content属性\"><a href=\"#justify-content属性\" class=\"headerlink\" title=\"justify-content属性\"></a>justify-content属性</h3><p><code>justify-content</code>属性定义了项目在主轴上的对齐方式。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: flex-start | flex-end | center | space-between | space-around;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2015/07/c55dfe8e3422458b50e985552ef13ba5.png\" alt></p>\n<p>它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。</p>\n<ul>\n<li>flex-start（默认值）：左对齐</li>\n<li>flex-end：右对齐</li>\n<li>center： 居中</li>\n<li>space-between：两端对齐，项目之间的间隔都相等。</li>\n<li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li>\n</ul>\n<h3 id=\"align-items属性\"><a href=\"#align-items属性\" class=\"headerlink\" title=\"align-items属性\"></a>align-items属性</h3><p><code>align-items</code>属性定义项目在交叉轴上如何对齐。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: flex-start | flex-end | center | baseline | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2015/07/2b0c39c7e7a80d5a784c8c2ca63cde17.png\" alt></p>\n<p>它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。</p>\n<ul>\n<li>flex-start：交叉轴的起点对齐。</li>\n<li>flex-end：交叉轴的终点对齐。</li>\n<li>center：交叉轴的中点对齐。</li>\n<li>baseline: 项目的第一行文字的基线对齐。</li>\n<li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li>\n</ul>\n<h3 id=\"align-content属性\"><a href=\"#align-content属性\" class=\"headerlink\" title=\"align-content属性\"></a>align-content属性</h3><p><code>align-content</code>属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">align-content</span>: flex-start | flex-end | center | space-between | space-around | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2015/07/f10918ccb8a13247c9d47715a2bd2c33.png\" alt></p>\n<p>该属性可能取6个值。</p>\n<ul>\n<li>flex-start：与交叉轴的起点对齐。</li>\n<li>flex-end：与交叉轴的终点对齐。</li>\n<li>center：与交叉轴的中点对齐。</li>\n<li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</li>\n<li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li>\n<li>stretch（默认值）：轴线占满整个交叉轴。</li>\n</ul>\n<h2 id=\"项目的属性\"><a href=\"#项目的属性\" class=\"headerlink\" title=\"项目的属性\"></a>项目的属性</h2><p>以下6个属性设置在项目上。</p>\n<ul>\n<li>order</li>\n<li>flex-grow</li>\n<li>flex-shrink</li>\n<li>flex-basis</li>\n<li>flex</li>\n<li>align-self</li>\n</ul>\n<h3 id=\"order属性\"><a href=\"#order属性\" class=\"headerlink\" title=\"order属性\"></a>order属性</h3><p><code>order</code>属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">order</span>: &lt;integer&gt;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2015/07/59e399c72daafcfcc20ede36bf32f266.png\" alt></p>\n<h3 id=\"flex-grow属性\"><a href=\"#flex-grow属性\" class=\"headerlink\" title=\"flex-grow属性\"></a>flex-grow属性</h3><p><code>flex-grow</code>属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-grow</span>: &lt;number&gt;; <span class=\"comment\">/* default 0 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2015/07/f41c08bb35962ed79e7686f735d6cd78.png\" alt></p>\n<p>如果所有项目的<code>flex-grow</code>属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的<code>flex-grow</code>属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p>\n<h3 id=\"flex-shrink属性\"><a href=\"#flex-shrink属性\" class=\"headerlink\" title=\"flex-shrink属性\"></a>flex-shrink属性</h3><p><code>flex-shrink</code>属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-shrink</span>: &lt;number&gt;; <span class=\"comment\">/* default 1 */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2015/07/240d3e960043a729bb3ff5e34987904f.jpg\" alt></p>\n<p>如果所有项目的<code>flex-shrink</code>属性都为1，当空间不足时，都将等比例缩小。如果一个项目的<code>flex-shrink</code>属性为0，其他项目都为1，则空间不足时，前者不缩小。</p>\n<p>负值对该属性无效。</p>\n<h3 id=\"flex-basis属性\"><a href=\"#flex-basis属性\" class=\"headerlink\" title=\"flex-basis属性\"></a>flex-basis属性</h3><p><code>flex-basis</code>属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为<code>auto</code>，即项目的本来大小。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex-basis</span>: &lt;length&gt; | auto; <span class=\"comment\">/* default auto */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>它可以设为跟<code>width</code>或<code>height</code>属性一样的值（比如350px），则项目将占据固定空间。</p>\n<h3 id=\"flex属性\"><a href=\"#flex属性\" class=\"headerlink\" title=\"flex属性\"></a>flex属性</h3><p><code>flex</code>属性是<code>flex-grow</code>, <code>flex-shrink</code> 和 <code>flex-basis</code>的简写，默认值为0 1 auto。后两个属性可选。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">flex</span>: none | [ &lt;<span class=\"string\">'flex-grow'</span>&gt; &lt;<span class=\"string\">'flex-shrink'</span>&gt;? || &lt;<span class=\"string\">'flex-basis'</span>&gt; ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>该属性有两个快捷值：<code>auto</code> (1 1 auto) 和 <code>none</code> (0 0 auto)。</p>\n<p>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p>\n<h3 id=\"align-self属性\"><a href=\"#align-self属性\" class=\"headerlink\" title=\"align-self属性\"></a>align-self属性</h3><p><code>align-self</code>属性允许单个项目有与其他项目不一样的对齐方式，可覆盖<code>align-items</code>属性。默认值为<code>auto</code>，表示继承父元素的<code>align-items</code>属性，如果没有父元素，则等同于<code>stretch</code>。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.item</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">align-self</span>: auto | flex-start | flex-end | center | baseline | stretch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://www.runoob.com/wp-content/uploads/2015/07/55b19171b8b6b9487d717bf2ecbba6de.png\" alt></p>\n<p>该属性可能取6个值，除了auto，其他都与<code>align-items</code>属性完全一致。</p>\n<p>来源：</p>\n<ul>\n<li><a href=\"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html</a></li>\n</ul>\n"},{"title":"Hello World","comments":1,"description":"Hello World","date":"2016-01-04T16:00:00.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ncomments: true\ndescription: Hello World\ntags: \"hello world\"\ndate: 2016-01-05 00:00:00\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2019-09-16T13:44:04.976Z","layout":"post","photos":[],"link":"","_id":"ck1p3g29l0009n0b9ktdbreo1","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"清除浮动方法","comments":1,"description":"清除浮动方法","date":"2016-03-05T08:02:00.000Z","keywords":"清除浮动方法, html, Html, css","_content":"\n对于使用了`float`来布局有可能会造成父级元素的高度坍塌，所以我们有必要了解一下清除浮动的方法！\n\n## `float`带来的后果\n\n代码样式如下:\n\n`css`样式：\n\n```css\n#box{\n     background:#000;\n }\n .red{\n     float:left;\n     width:100px;\n     height:100px;\n     background:red;\n }\n .pink{\n     float:left;\n     width:100px;\n     height:100px;\n     background:pink;\n }\n .blue{\n     float:left;\n     width:100px;\n     height:100px;\n     background:blue;\n }\n```\n\n`html`布局：\n\n```html\n\n<div id='box'>\n  <div class='red'></div>\n  <div class='pink'></div>\n  <div class='blue'></div>\n</div>\n```\n\n三个盒子的父级元素`#box`的高度坍塌，没有被内容高度撑开!这是使用`float`造成的后果。下面介绍几种常用的清除浮动的方法：\n\n## 第一种方法（主流方法）\n\n使用`::after`伪类清除:\n\n```css\n\n#box:after{\n    content:'';\n    display:block;\n    clear:both;\n}\n```\n运行代码看到`#box`的高度为`100px`；已经清除浮动造成的后果！\n\n## 第二种方法\n\n给`#box`添加高度（可能会影响页面的布局）:\n\n```css\n\n#box{\n    height:200px;\n    background:#000;\n}\n```\n\n`#box`的高度为`200px`；已经清除浮动造成的后果！但是给`#box`高度固定，对于后面的布局可能会受影响。\n\n## 第三种方法\n\n给`#box`添加`overflow:hidden`:\n\n```css\n#box{\n    overflow:hidden;\n    background:#000;\n}\n```\n\n运行代码可以看到已经清除浮动造成的后果,但是因为超出隐藏！谨慎使用。\n\n## 第四种方法\n\n给`#box`中添加一个空的`div`标签 ，使用`style=’clear:both;`:\n\n```html\n<div id=\"box\" >\n  <div class='red'></div>\n  <div class='pink'></div>\n  <div class='blue'></div>\n  <div class='black'></div>\n  <div style=\"clear:both;\"></div>\n</div>\n```\n\n已经清除浮动造成的后果。\n\n上面前四个也是比较常用的，第一个是目前主流方法，其他方法也有但是使用有很大的局限性，比如这里也可以给`#box`添加浮动，但是这种方法没有彻底解决高度坍塌，所以不推荐使用。","source":"_posts/html-2.md","raw":"---\ntitle: 清除浮动方法\ncomments: true\ndescription: 清除浮动方法\ntags: \"Html\"\ndate: 2016-03-05 016:02:00\ncategories: \"Html\"\nkeywords: 清除浮动方法, html, Html, css \n---\n\n对于使用了`float`来布局有可能会造成父级元素的高度坍塌，所以我们有必要了解一下清除浮动的方法！\n\n## `float`带来的后果\n\n代码样式如下:\n\n`css`样式：\n\n```css\n#box{\n     background:#000;\n }\n .red{\n     float:left;\n     width:100px;\n     height:100px;\n     background:red;\n }\n .pink{\n     float:left;\n     width:100px;\n     height:100px;\n     background:pink;\n }\n .blue{\n     float:left;\n     width:100px;\n     height:100px;\n     background:blue;\n }\n```\n\n`html`布局：\n\n```html\n\n<div id='box'>\n  <div class='red'></div>\n  <div class='pink'></div>\n  <div class='blue'></div>\n</div>\n```\n\n三个盒子的父级元素`#box`的高度坍塌，没有被内容高度撑开!这是使用`float`造成的后果。下面介绍几种常用的清除浮动的方法：\n\n## 第一种方法（主流方法）\n\n使用`::after`伪类清除:\n\n```css\n\n#box:after{\n    content:'';\n    display:block;\n    clear:both;\n}\n```\n运行代码看到`#box`的高度为`100px`；已经清除浮动造成的后果！\n\n## 第二种方法\n\n给`#box`添加高度（可能会影响页面的布局）:\n\n```css\n\n#box{\n    height:200px;\n    background:#000;\n}\n```\n\n`#box`的高度为`200px`；已经清除浮动造成的后果！但是给`#box`高度固定，对于后面的布局可能会受影响。\n\n## 第三种方法\n\n给`#box`添加`overflow:hidden`:\n\n```css\n#box{\n    overflow:hidden;\n    background:#000;\n}\n```\n\n运行代码可以看到已经清除浮动造成的后果,但是因为超出隐藏！谨慎使用。\n\n## 第四种方法\n\n给`#box`中添加一个空的`div`标签 ，使用`style=’clear:both;`:\n\n```html\n<div id=\"box\" >\n  <div class='red'></div>\n  <div class='pink'></div>\n  <div class='blue'></div>\n  <div class='black'></div>\n  <div style=\"clear:both;\"></div>\n</div>\n```\n\n已经清除浮动造成的后果。\n\n上面前四个也是比较常用的，第一个是目前主流方法，其他方法也有但是使用有很大的局限性，比如这里也可以给`#box`添加浮动，但是这种方法没有彻底解决高度坍塌，所以不推荐使用。","slug":"html-2","published":1,"updated":"2019-09-16T14:45:22.169Z","layout":"post","photos":[],"link":"","_id":"ck1p3g29o000dn0b92j9a639y","content":"<p>对于使用了<code>float</code>来布局有可能会造成父级元素的高度坍塌，所以我们有必要了解一下清除浮动的方法！</p>\n<h2 id=\"float带来的后果\"><a href=\"#float带来的后果\" class=\"headerlink\" title=\"float带来的后果\"></a><code>float</code>带来的后果</h2><p>代码样式如下:</p>\n<p><code>css</code>样式：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;</span><br><span class=\"line\">     <span class=\"attribute\">background</span>:<span class=\"number\">#000</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-class\">.red</span>&#123;</span><br><span class=\"line\">     <span class=\"attribute\">float</span>:left;</span><br><span class=\"line\">     <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;</span><br><span class=\"line\">     <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;</span><br><span class=\"line\">     <span class=\"attribute\">background</span>:red;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-class\">.pink</span>&#123;</span><br><span class=\"line\">     <span class=\"attribute\">float</span>:left;</span><br><span class=\"line\">     <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;</span><br><span class=\"line\">     <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;</span><br><span class=\"line\">     <span class=\"attribute\">background</span>:pink;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-class\">.blue</span>&#123;</span><br><span class=\"line\">     <span class=\"attribute\">float</span>:left;</span><br><span class=\"line\">     <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;</span><br><span class=\"line\">     <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;</span><br><span class=\"line\">     <span class=\"attribute\">background</span>:blue;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>html</code>布局：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">'box'</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">'red'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">'pink'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">'blue'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>三个盒子的父级元素<code>#box</code>的高度坍塌，没有被内容高度撑开!这是使用<code>float</code>造成的后果。下面介绍几种常用的清除浮动的方法：</p>\n<h2 id=\"第一种方法（主流方法）\"><a href=\"#第一种方法（主流方法）\" class=\"headerlink\" title=\"第一种方法（主流方法）\"></a>第一种方法（主流方法）</h2><p>使用<code>::after</code>伪类清除:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span><span class=\"selector-pseudo\">:after</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>:<span class=\"string\">''</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>:block;</span><br><span class=\"line\">    <span class=\"attribute\">clear</span>:both;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>运行代码看到<code>#box</code>的高度为<code>100px</code>；已经清除浮动造成的后果！</p>\n<h2 id=\"第二种方法\"><a href=\"#第二种方法\" class=\"headerlink\" title=\"第二种方法\"></a>第二种方法</h2><p>给<code>#box</code>添加高度（可能会影响页面的布局）:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>:<span class=\"number\">#000</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>#box</code>的高度为<code>200px</code>；已经清除浮动造成的后果！但是给<code>#box</code>高度固定，对于后面的布局可能会受影响。</p>\n<h2 id=\"第三种方法\"><a href=\"#第三种方法\" class=\"headerlink\" title=\"第三种方法\"></a>第三种方法</h2><p>给<code>#box</code>添加<code>overflow:hidden</code>:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>:hidden;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>:<span class=\"number\">#000</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>运行代码可以看到已经清除浮动造成的后果,但是因为超出隐藏！谨慎使用。</p>\n<h2 id=\"第四种方法\"><a href=\"#第四种方法\" class=\"headerlink\" title=\"第四种方法\"></a>第四种方法</h2><p>给<code>#box</code>中添加一个空的<code>div</code>标签 ，使用<code>style=’clear:both;</code>:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box\"</span> &gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">'red'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">'pink'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">'blue'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">'black'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"clear:both;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>已经清除浮动造成的后果。</p>\n<p>上面前四个也是比较常用的，第一个是目前主流方法，其他方法也有但是使用有很大的局限性，比如这里也可以给<code>#box</code>添加浮动，但是这种方法没有彻底解决高度坍塌，所以不推荐使用。</p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<p>对于使用了<code>float</code>来布局有可能会造成父级元素的高度坍塌，所以我们有必要了解一下清除浮动的方法！</p>\n<h2 id=\"float带来的后果\"><a href=\"#float带来的后果\" class=\"headerlink\" title=\"float带来的后果\"></a><code>float</code>带来的后果</h2><p>代码样式如下:</p>\n<p><code>css</code>样式：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;</span><br><span class=\"line\">     <span class=\"attribute\">background</span>:<span class=\"number\">#000</span>;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-class\">.red</span>&#123;</span><br><span class=\"line\">     <span class=\"attribute\">float</span>:left;</span><br><span class=\"line\">     <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;</span><br><span class=\"line\">     <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;</span><br><span class=\"line\">     <span class=\"attribute\">background</span>:red;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-class\">.pink</span>&#123;</span><br><span class=\"line\">     <span class=\"attribute\">float</span>:left;</span><br><span class=\"line\">     <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;</span><br><span class=\"line\">     <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;</span><br><span class=\"line\">     <span class=\"attribute\">background</span>:pink;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"selector-class\">.blue</span>&#123;</span><br><span class=\"line\">     <span class=\"attribute\">float</span>:left;</span><br><span class=\"line\">     <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;</span><br><span class=\"line\">     <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;</span><br><span class=\"line\">     <span class=\"attribute\">background</span>:blue;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>html</code>布局：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">'box'</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">'red'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">'pink'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">'blue'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>三个盒子的父级元素<code>#box</code>的高度坍塌，没有被内容高度撑开!这是使用<code>float</code>造成的后果。下面介绍几种常用的清除浮动的方法：</p>\n<h2 id=\"第一种方法（主流方法）\"><a href=\"#第一种方法（主流方法）\" class=\"headerlink\" title=\"第一种方法（主流方法）\"></a>第一种方法（主流方法）</h2><p>使用<code>::after</code>伪类清除:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span><span class=\"selector-pseudo\">:after</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>:<span class=\"string\">''</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>:block;</span><br><span class=\"line\">    <span class=\"attribute\">clear</span>:both;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>运行代码看到<code>#box</code>的高度为<code>100px</code>；已经清除浮动造成的后果！</p>\n<h2 id=\"第二种方法\"><a href=\"#第二种方法\" class=\"headerlink\" title=\"第二种方法\"></a>第二种方法</h2><p>给<code>#box</code>添加高度（可能会影响页面的布局）:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">200px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>:<span class=\"number\">#000</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>#box</code>的高度为<code>200px</code>；已经清除浮动造成的后果！但是给<code>#box</code>高度固定，对于后面的布局可能会受影响。</p>\n<h2 id=\"第三种方法\"><a href=\"#第三种方法\" class=\"headerlink\" title=\"第三种方法\"></a>第三种方法</h2><p>给<code>#box</code>添加<code>overflow:hidden</code>:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>:hidden;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>:<span class=\"number\">#000</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>运行代码可以看到已经清除浮动造成的后果,但是因为超出隐藏！谨慎使用。</p>\n<h2 id=\"第四种方法\"><a href=\"#第四种方法\" class=\"headerlink\" title=\"第四种方法\"></a>第四种方法</h2><p>给<code>#box</code>中添加一个空的<code>div</code>标签 ，使用<code>style=’clear:both;</code>:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box\"</span> &gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">'red'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">'pink'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">'blue'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">'black'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"clear:both;\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>已经清除浮动造成的后果。</p>\n<p>上面前四个也是比较常用的，第一个是目前主流方法，其他方法也有但是使用有很大的局限性，比如这里也可以给<code>#box</code>添加浮动，但是这种方法没有彻底解决高度坍塌，所以不推荐使用。</p>\n"},{"title":"元素水平居中的方法","comments":1,"description":"元素水平居中的方法","date":"2016-03-04T16:00:00.000Z","keywords":"html, Html, css ,元素水平居中的方法","_content":"\n当我们知道父元素的宽高的时候，是元素水平居中比较简单，但是有时候我们不一定能知道要居中的父级元素的宽高，那么我们该如何使元素水平垂直居中呢？下面介绍几种水平垂直居中的方法。\n\n## 所有元素都已经知道宽高可用`margin`来完成\n\n```css\n#box{  \n    width:400px;  \n    height:400px;  \n    margin:50px auto;  \n    border:1px solid red;  \n}  \n.example{  \n    width:100px;  \n    height:100px;  \n    margin:150px;  \n    background:blue;  \n}\n```\n\n这一种情况比较简单。\n\n## 当我们只知道本身元素的宽高的时候\n\n可以用定位来做, `relative`，还是`absolute`都行。）\n\n```css\n.example{  \n    position: relative;  \n    top:50%;  \n    left:50%;  \n    width:100px;  \n    height:100px;  \n    margin-left: -50px;  \n    margin-top: -50px;  \n    background:blue;  \n}\n```\n\n第二种就是使用`calc`来使用，他必须知道居中本身高度：不支持`IE8`及以下。\n\n```css\n\n#box{  \n    position: relative;  \n    width: 400px;  \n    height:400px;  \n    margin:50px auto;  \n    border:1px solid red;  \n}  \n.example{  \n    position: absolute;  \n    left:calc(50% - 50px);  \n    top:calc(50% - 50px);  \n    width:100px;  \n    height:100px;  \n    background:blue;  \n}\n```\n\n`left:calc(50% - 50px);top:calc(50% - 50px);`这里的—号记得前后空一个，不然可能会出错。\n\n`top`为50%在减去自身高度的一半就完成垂直居中。\n\n上面一个例中，除了使用 `margin-left: -50px`(宽度的一半);`margin-top: -50px`(高度度的一半)。\n\n## 宽高都不知道\n\n这个时候我们可以用相对定位来做。\n\n**第一种：**\n\n```css\n\n#box{  \n    position: relative;  \n    width:400px;  \n    height:400px;  \n    margin:50px auto;  \n    border:1px solid red;  \n}  \n.example{  \n    position: absolute;  \n    top:0;  \n    left:0;  \n    rightright:0;  \n    bottombottom:0;  \n    width:100px;  \n    height:100px;  \n    margin:auto;  \n    background:blue;  \n}\n```\n\n## 元素水平居中的方法\n\n### 第一种\n\n 先让上下左右值都为0，在使用`margin:auto`，就可以实现居中。\n\n### 第二种\n\n`css3`中的`translate`,但是这种方法不兼容`IE8`及以下。\n\n```css\n\n#box{  \n    position: relative;  \n    width:400px;  \n    height:400px;  \n    margin:50px auto;  \n    border:1px solid red;  \n}  \n.example{  \n    position: absolute;  \n    top:50%;  \n    left:50%;  \n    width:100px;  \n    height:100px;  \n    transform:translate(-50%,-50%);  \n    background:blue;  \n}  \n```\n\n### 第三种\n使用弹性盒子布局，但是这种方法，不支持`IE9`及以下。\n\n```css\n\n#box{  \n    display: flex;  \n    width: 400px;  \n    height:400px;  \n    margin:50px auto;  \n    border:1px solid red;  \n    justify-content: center;  \n    align-items: center;  \n}  \n.example{  \n    width:100px;  \n    height:100px;  \n    background:blue;  \n}  \n```\n\n### 第四种\n添加一个空的`div`，该方法不支持`IE8`以下。\n\n```css\n\n#box{  \n    width: 400px;  \n    height:400px;  \n    margin:50px auto;  \n    border:1px solid red;  \n    text-align: center;  \n}  \n.example{  \n    display: inline-block;  \n    width:100px;  \n    height:100px;  \n    background:blue;  \n    vertical-align: middle;  \n}  \n  \n.example1{  \n    display: inline-block;  \n    width:0;  \n    height:100%;  \n    vertical-align: middle;  \n}  \n```\n\n### 第五种\n都不知道宽高度的情况下也可以使用`js`来居中，但是比较麻烦，所以我们能用`css`样式居中就不会用`js`来居中。\n\n```css\n\n#box{  \n    position: relative;  \n    width: 400px;  \n    height:400px;  \n    margin:50px auto;  \n    border:1px solid red;  \n}  \n.example{  \n    position: absolute;  \n    width:100px;  \n    height:100px;  \n    background:blue;  \n}  \n```\n\n```js\nvar Ex = document.querySelector('#box .example');  \nvar box = document.getElementById('box');  \nfunction resize() {  \n    var wTop = (box.clientHeight - Ex.clientHeight)/2;  \n    var wLeft = (box.clientWidth - Ex.clientWidth)/2;  \n    Ex.style.top = wTop+'px';  \n    Ex.style.left = wLeft+'px';  \n}  \n```\n\n单纯想要块级元素水平居中，上面所用到的方法外还可以：\n\n1.本身添加`display:inline-block;`父级元素添加`text-align:center`;\n\n2.给父级元素添加`display:flex,justify-content:center;`\n\n```css\n\n#box{  \n    display: flex;  \n    width:100%;  \n    height:400px;  \n    margin:50px auto;  \n    border:1px solid red;  \n    justify-content: center;  \n}  \n.example{  \n    width:100px;  \n    height:100px;  \n    background:blue;  \n    margin:0 5px;  \n}\n```\n\n这些方法有的用起来很方便，有的则需要自身是块级元素，有的则不需要。方法就写到这里，读者可以根据自身的情况选择一种合适的方法，或者有更好的方法，欢迎留言。有什么错误可以积极的在下面留言，我们一起探讨，一起进步！","source":"_posts/html-1.md","raw":"---\ntitle: 元素水平居中的方法\ncomments: true\ndescription: 元素水平居中的方法\ntags: \"html\"\ndate: 2016-03-05 00:00:00\ncategories: \"Html\"\nkeywords: html, Html, css ,元素水平居中的方法\n---\n\n当我们知道父元素的宽高的时候，是元素水平居中比较简单，但是有时候我们不一定能知道要居中的父级元素的宽高，那么我们该如何使元素水平垂直居中呢？下面介绍几种水平垂直居中的方法。\n\n## 所有元素都已经知道宽高可用`margin`来完成\n\n```css\n#box{  \n    width:400px;  \n    height:400px;  \n    margin:50px auto;  \n    border:1px solid red;  \n}  \n.example{  \n    width:100px;  \n    height:100px;  \n    margin:150px;  \n    background:blue;  \n}\n```\n\n这一种情况比较简单。\n\n## 当我们只知道本身元素的宽高的时候\n\n可以用定位来做, `relative`，还是`absolute`都行。）\n\n```css\n.example{  \n    position: relative;  \n    top:50%;  \n    left:50%;  \n    width:100px;  \n    height:100px;  \n    margin-left: -50px;  \n    margin-top: -50px;  \n    background:blue;  \n}\n```\n\n第二种就是使用`calc`来使用，他必须知道居中本身高度：不支持`IE8`及以下。\n\n```css\n\n#box{  \n    position: relative;  \n    width: 400px;  \n    height:400px;  \n    margin:50px auto;  \n    border:1px solid red;  \n}  \n.example{  \n    position: absolute;  \n    left:calc(50% - 50px);  \n    top:calc(50% - 50px);  \n    width:100px;  \n    height:100px;  \n    background:blue;  \n}\n```\n\n`left:calc(50% - 50px);top:calc(50% - 50px);`这里的—号记得前后空一个，不然可能会出错。\n\n`top`为50%在减去自身高度的一半就完成垂直居中。\n\n上面一个例中，除了使用 `margin-left: -50px`(宽度的一半);`margin-top: -50px`(高度度的一半)。\n\n## 宽高都不知道\n\n这个时候我们可以用相对定位来做。\n\n**第一种：**\n\n```css\n\n#box{  \n    position: relative;  \n    width:400px;  \n    height:400px;  \n    margin:50px auto;  \n    border:1px solid red;  \n}  \n.example{  \n    position: absolute;  \n    top:0;  \n    left:0;  \n    rightright:0;  \n    bottombottom:0;  \n    width:100px;  \n    height:100px;  \n    margin:auto;  \n    background:blue;  \n}\n```\n\n## 元素水平居中的方法\n\n### 第一种\n\n 先让上下左右值都为0，在使用`margin:auto`，就可以实现居中。\n\n### 第二种\n\n`css3`中的`translate`,但是这种方法不兼容`IE8`及以下。\n\n```css\n\n#box{  \n    position: relative;  \n    width:400px;  \n    height:400px;  \n    margin:50px auto;  \n    border:1px solid red;  \n}  \n.example{  \n    position: absolute;  \n    top:50%;  \n    left:50%;  \n    width:100px;  \n    height:100px;  \n    transform:translate(-50%,-50%);  \n    background:blue;  \n}  \n```\n\n### 第三种\n使用弹性盒子布局，但是这种方法，不支持`IE9`及以下。\n\n```css\n\n#box{  \n    display: flex;  \n    width: 400px;  \n    height:400px;  \n    margin:50px auto;  \n    border:1px solid red;  \n    justify-content: center;  \n    align-items: center;  \n}  \n.example{  \n    width:100px;  \n    height:100px;  \n    background:blue;  \n}  \n```\n\n### 第四种\n添加一个空的`div`，该方法不支持`IE8`以下。\n\n```css\n\n#box{  \n    width: 400px;  \n    height:400px;  \n    margin:50px auto;  \n    border:1px solid red;  \n    text-align: center;  \n}  \n.example{  \n    display: inline-block;  \n    width:100px;  \n    height:100px;  \n    background:blue;  \n    vertical-align: middle;  \n}  \n  \n.example1{  \n    display: inline-block;  \n    width:0;  \n    height:100%;  \n    vertical-align: middle;  \n}  \n```\n\n### 第五种\n都不知道宽高度的情况下也可以使用`js`来居中，但是比较麻烦，所以我们能用`css`样式居中就不会用`js`来居中。\n\n```css\n\n#box{  \n    position: relative;  \n    width: 400px;  \n    height:400px;  \n    margin:50px auto;  \n    border:1px solid red;  \n}  \n.example{  \n    position: absolute;  \n    width:100px;  \n    height:100px;  \n    background:blue;  \n}  \n```\n\n```js\nvar Ex = document.querySelector('#box .example');  \nvar box = document.getElementById('box');  \nfunction resize() {  \n    var wTop = (box.clientHeight - Ex.clientHeight)/2;  \n    var wLeft = (box.clientWidth - Ex.clientWidth)/2;  \n    Ex.style.top = wTop+'px';  \n    Ex.style.left = wLeft+'px';  \n}  \n```\n\n单纯想要块级元素水平居中，上面所用到的方法外还可以：\n\n1.本身添加`display:inline-block;`父级元素添加`text-align:center`;\n\n2.给父级元素添加`display:flex,justify-content:center;`\n\n```css\n\n#box{  \n    display: flex;  \n    width:100%;  \n    height:400px;  \n    margin:50px auto;  \n    border:1px solid red;  \n    justify-content: center;  \n}  \n.example{  \n    width:100px;  \n    height:100px;  \n    background:blue;  \n    margin:0 5px;  \n}\n```\n\n这些方法有的用起来很方便，有的则需要自身是块级元素，有的则不需要。方法就写到这里，读者可以根据自身的情况选择一种合适的方法，或者有更好的方法，欢迎留言。有什么错误可以积极的在下面留言，我们一起探讨，一起进步！","slug":"html-1","published":1,"updated":"2019-09-16T14:44:47.004Z","layout":"post","photos":[],"link":"","_id":"ck1p3g29p000fn0b9bu5tagr1","content":"<p>当我们知道父元素的宽高的时候，是元素水平居中比较简单，但是有时候我们不一定能知道要居中的父级元素的宽高，那么我们该如何使元素水平垂直居中呢？下面介绍几种水平垂直居中的方法。</p>\n<h2 id=\"所有元素都已经知道宽高可用margin来完成\"><a href=\"#所有元素都已经知道宽高可用margin来完成\" class=\"headerlink\" title=\"所有元素都已经知道宽高可用margin来完成\"></a>所有元素都已经知道宽高可用<code>margin</code>来完成</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto;  </span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid red;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">150px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这一种情况比较简单。</p>\n<h2 id=\"当我们只知道本身元素的宽高的时候\"><a href=\"#当我们只知道本身元素的宽高的时候\" class=\"headerlink\" title=\"当我们只知道本身元素的宽高的时候\"></a>当我们只知道本身元素的宽高的时候</h2><p>可以用定位来做, <code>relative</code>，还是<code>absolute</code>都行。）</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;  </span><br><span class=\"line\">    <span class=\"attribute\">top</span>:<span class=\"number\">50%</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"number\">50%</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin-left</span>: -<span class=\"number\">50px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin-top</span>: -<span class=\"number\">50px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>第二种就是使用<code>calc</code>来使用，他必须知道居中本身高度：不支持<code>IE8</code>及以下。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto;  </span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid red;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;  </span><br><span class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"built_in\">calc</span>(50% - 50px);  </span><br><span class=\"line\">    <span class=\"attribute\">top</span>:<span class=\"built_in\">calc</span>(50% - 50px);  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>left:calc(50% - 50px);top:calc(50% - 50px);</code>这里的—号记得前后空一个，不然可能会出错。</p>\n<p><code>top</code>为50%在减去自身高度的一半就完成垂直居中。</p>\n<p>上面一个例中，除了使用 <code>margin-left: -50px</code>(宽度的一半);<code>margin-top: -50px</code>(高度度的一半)。</p>\n<h2 id=\"宽高都不知道\"><a href=\"#宽高都不知道\" class=\"headerlink\" title=\"宽高都不知道\"></a>宽高都不知道</h2><p>这个时候我们可以用相对定位来做。</p>\n<p><strong>第一种：</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto;  </span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid red;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;  </span><br><span class=\"line\">    <span class=\"attribute\">top</span>:<span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">rightright</span>:<span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">bottombottom</span>:<span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:auto;  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"元素水平居中的方法\"><a href=\"#元素水平居中的方法\" class=\"headerlink\" title=\"元素水平居中的方法\"></a>元素水平居中的方法</h2><h3 id=\"第一种\"><a href=\"#第一种\" class=\"headerlink\" title=\"第一种\"></a>第一种</h3><p> 先让上下左右值都为0，在使用<code>margin:auto</code>，就可以实现居中。</p>\n<h3 id=\"第二种\"><a href=\"#第二种\" class=\"headerlink\" title=\"第二种\"></a>第二种</h3><p><code>css3</code>中的<code>translate</code>,但是这种方法不兼容<code>IE8</code>及以下。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto;  </span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid red;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;  </span><br><span class=\"line\">    <span class=\"attribute\">top</span>:<span class=\"number\">50%</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"number\">50%</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">transform</span>:<span class=\"built_in\">translate</span>(-50%,-50%);  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第三种\"><a href=\"#第三种\" class=\"headerlink\" title=\"第三种\"></a>第三种</h3><p>使用弹性盒子布局，但是这种方法，不支持<code>IE9</code>及以下。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto;  </span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid red;  </span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;  </span><br><span class=\"line\">    <span class=\"attribute\">align-items</span>: center;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第四种\"><a href=\"#第四种\" class=\"headerlink\" title=\"第四种\"></a>第四种</h3><p>添加一个空的<code>div</code>，该方法不支持<code>IE8</code>以下。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto;  </span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid red;  </span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline-block;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">    <span class=\"attribute\">vertical-align</span>: middle;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"selector-class\">.example1</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline-block;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100%</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">vertical-align</span>: middle;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第五种\"><a href=\"#第五种\" class=\"headerlink\" title=\"第五种\"></a>第五种</h3><p>都不知道宽高度的情况下也可以使用<code>js</code>来居中，但是比较麻烦，所以我们能用<code>css</code>样式居中就不会用<code>js</code>来居中。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto;  </span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid red;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Ex = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#box .example'</span>);  </span><br><span class=\"line\"><span class=\"keyword\">var</span> box = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'box'</span>);  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">resize</span>(<span class=\"params\"></span>) </span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> wTop = (box.clientHeight - Ex.clientHeight)/<span class=\"number\">2</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> wLeft = (box.clientWidth - Ex.clientWidth)/<span class=\"number\">2</span>;  </span><br><span class=\"line\">    Ex.style.top = wTop+<span class=\"string\">'px'</span>;  </span><br><span class=\"line\">    Ex.style.left = wLeft+<span class=\"string\">'px'</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>单纯想要块级元素水平居中，上面所用到的方法外还可以：</p>\n<p>1.本身添加<code>display:inline-block;</code>父级元素添加<code>text-align:center</code>;</p>\n<p>2.给父级元素添加<code>display:flex,justify-content:center;</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100%</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto;  </span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid red;  </span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">0</span> <span class=\"number\">5px</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这些方法有的用起来很方便，有的则需要自身是块级元素，有的则不需要。方法就写到这里，读者可以根据自身的情况选择一种合适的方法，或者有更好的方法，欢迎留言。有什么错误可以积极的在下面留言，我们一起探讨，一起进步！</p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<p>当我们知道父元素的宽高的时候，是元素水平居中比较简单，但是有时候我们不一定能知道要居中的父级元素的宽高，那么我们该如何使元素水平垂直居中呢？下面介绍几种水平垂直居中的方法。</p>\n<h2 id=\"所有元素都已经知道宽高可用margin来完成\"><a href=\"#所有元素都已经知道宽高可用margin来完成\" class=\"headerlink\" title=\"所有元素都已经知道宽高可用margin来完成\"></a>所有元素都已经知道宽高可用<code>margin</code>来完成</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto;  </span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid red;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">150px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这一种情况比较简单。</p>\n<h2 id=\"当我们只知道本身元素的宽高的时候\"><a href=\"#当我们只知道本身元素的宽高的时候\" class=\"headerlink\" title=\"当我们只知道本身元素的宽高的时候\"></a>当我们只知道本身元素的宽高的时候</h2><p>可以用定位来做, <code>relative</code>，还是<code>absolute</code>都行。）</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;  </span><br><span class=\"line\">    <span class=\"attribute\">top</span>:<span class=\"number\">50%</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"number\">50%</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin-left</span>: -<span class=\"number\">50px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin-top</span>: -<span class=\"number\">50px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>第二种就是使用<code>calc</code>来使用，他必须知道居中本身高度：不支持<code>IE8</code>及以下。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto;  </span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid red;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;  </span><br><span class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"built_in\">calc</span>(50% - 50px);  </span><br><span class=\"line\">    <span class=\"attribute\">top</span>:<span class=\"built_in\">calc</span>(50% - 50px);  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>left:calc(50% - 50px);top:calc(50% - 50px);</code>这里的—号记得前后空一个，不然可能会出错。</p>\n<p><code>top</code>为50%在减去自身高度的一半就完成垂直居中。</p>\n<p>上面一个例中，除了使用 <code>margin-left: -50px</code>(宽度的一半);<code>margin-top: -50px</code>(高度度的一半)。</p>\n<h2 id=\"宽高都不知道\"><a href=\"#宽高都不知道\" class=\"headerlink\" title=\"宽高都不知道\"></a>宽高都不知道</h2><p>这个时候我们可以用相对定位来做。</p>\n<p><strong>第一种：</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto;  </span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid red;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;  </span><br><span class=\"line\">    <span class=\"attribute\">top</span>:<span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">rightright</span>:<span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">bottombottom</span>:<span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:auto;  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"元素水平居中的方法\"><a href=\"#元素水平居中的方法\" class=\"headerlink\" title=\"元素水平居中的方法\"></a>元素水平居中的方法</h2><h3 id=\"第一种\"><a href=\"#第一种\" class=\"headerlink\" title=\"第一种\"></a>第一种</h3><p> 先让上下左右值都为0，在使用<code>margin:auto</code>，就可以实现居中。</p>\n<h3 id=\"第二种\"><a href=\"#第二种\" class=\"headerlink\" title=\"第二种\"></a>第二种</h3><p><code>css3</code>中的<code>translate</code>,但是这种方法不兼容<code>IE8</code>及以下。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto;  </span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid red;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;  </span><br><span class=\"line\">    <span class=\"attribute\">top</span>:<span class=\"number\">50%</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">left</span>:<span class=\"number\">50%</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">transform</span>:<span class=\"built_in\">translate</span>(-50%,-50%);  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第三种\"><a href=\"#第三种\" class=\"headerlink\" title=\"第三种\"></a>第三种</h3><p>使用弹性盒子布局，但是这种方法，不支持<code>IE9</code>及以下。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto;  </span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid red;  </span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;  </span><br><span class=\"line\">    <span class=\"attribute\">align-items</span>: center;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第四种\"><a href=\"#第四种\" class=\"headerlink\" title=\"第四种\"></a>第四种</h3><p>添加一个空的<code>div</code>，该方法不支持<code>IE8</code>以下。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto;  </span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid red;  </span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: center;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline-block;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">    <span class=\"attribute\">vertical-align</span>: middle;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"selector-class\">.example1</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline-block;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">0</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100%</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">vertical-align</span>: middle;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"第五种\"><a href=\"#第五种\" class=\"headerlink\" title=\"第五种\"></a>第五种</h3><p>都不知道宽高度的情况下也可以使用<code>js</code>来居中，但是比较麻烦，所以我们能用<code>css</code>样式居中就不会用<code>js</code>来居中。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto;  </span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid red;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Ex = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#box .example'</span>);  </span><br><span class=\"line\"><span class=\"keyword\">var</span> box = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'box'</span>);  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">resize</span>(<span class=\"params\"></span>) </span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> wTop = (box.clientHeight - Ex.clientHeight)/<span class=\"number\">2</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">var</span> wLeft = (box.clientWidth - Ex.clientWidth)/<span class=\"number\">2</span>;  </span><br><span class=\"line\">    Ex.style.top = wTop+<span class=\"string\">'px'</span>;  </span><br><span class=\"line\">    Ex.style.left = wLeft+<span class=\"string\">'px'</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>单纯想要块级元素水平居中，上面所用到的方法外还可以：</p>\n<p>1.本身添加<code>display:inline-block;</code>父级元素添加<code>text-align:center</code>;</p>\n<p>2.给父级元素添加<code>display:flex,justify-content:center;</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#box</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">display</span>: flex;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100%</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">400px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">50px</span> auto;  </span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">1px</span> solid red;  </span><br><span class=\"line\">    <span class=\"attribute\">justify-content</span>: center;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;  </span><br><span class=\"line\">    <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">height</span>:<span class=\"number\">100px</span>;  </span><br><span class=\"line\">    <span class=\"attribute\">background</span>:blue;  </span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:<span class=\"number\">0</span> <span class=\"number\">5px</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这些方法有的用起来很方便，有的则需要自身是块级元素，有的则不需要。方法就写到这里，读者可以根据自身的情况选择一种合适的方法，或者有更好的方法，欢迎留言。有什么错误可以积极的在下面留言，我们一起探讨，一起进步！</p>\n"},{"title":"canvas实现橡皮筋式选取框","comments":1,"description":"canvas实现橡皮筋式选取框, canvas, js, 选取","date":"2016-06-03T04:14:10.000Z","keywords":"canvas, js, 橡皮筋式选取框","_content":"canvas实现橡皮筋式选取框\n\n点击查看示例： [示例](http://www.hbbaly.com/wp-content/themes/blog/case/rubber.html)\n\n# canvas实现橡皮筋式选取框思路：\n\n有三个事件`mousedown`,`mousemove`,`mouseup`，鼠标坐标转化为`canvas`坐标`（canvas.getBoundingClientRect()）`。\n\n## `mousedown`\n\n选取框的起始点位于鼠标按下的位置。\n\n```js\n\ncanvas.onmousedown = function (e) {\n        var x = e.clientX,\n            y = e.clientY;\n        e.preventDefault();\n        zoomStart(x,y);   //橡皮筋选取框开始\n};\n\n//选取框起始位置\nfunction zoomStart(x,y) {\n        mousedown.x = x;\n        mousedown.y =y;\n        zoomRectangle.left =  mousedown.x;\n        zoomRectangle.top =  mousedown.y;\n        moveZoom();\n        showZoom();\n        flag = true;\n    }\n```\n## `mousemove`\n\n鼠标移动的距离，判断是向左还是向右向上还是向下，根据移动的距离取出选取框的宽高。\n```js\nwindow.onmousemove = function (e) {\n       var x = e.clientX,\n           y = e.clientY;\n       e.preventDefault();\n       if(flag) zoomStretch(x,y);\n   };\nfunction zoomStretch(x,y) {\n       //选取框top，left，width，height值\n       zoomRectangle.left = x< mousedown.x? x:mousedown.x;\n       zoomRectangle.top =  y< mousedown.y?y:mousedown.y;\n       zoomRectangle.width = Math.abs(x-mousedown.x);\n       zoomRectangle.height = Math.abs(y-mousedown.y);\n       moveZoom();\n       resizeZoom();\n   }\nfunction moveZoom() {\n        zoom.style.left = zoomRectangle.left +\"px\";\n        zoom.style.top = zoomRectangle.top +\"px\";\n}\nfunction resizeZoom() {\n        zoom.style.width = zoomRectangle.width +\"px\";\n        zoom.style.height = zoomRectangle.height +\"px\";\n}\n```\n\n## `mouseup`\n\n求出最终的选取框的宽高，原来图像消失，变为选取的图像。\n```js\nwindow.onmouseup = function (e) {\n       e.preventDefault();\n       zoomEnd();\n   };\nfunction zoomEnd() {\n        var bbox = canvas.getBoundingClientRect();\n       //选定的区间，放大到整个canvas\n        try{\n            context.drawImage(canvas,zoomRectangle.left-bbox.left,zoomRectangle.top-bbox.top,zoomRectangle.width,zoomRectangle.height,0,0,canvas.width,canvas.height)\n        }\n        catch(e){\n        }\n      //原来选取框相关数据归零\n        resetZoomRectangle();\n        zoom.style.width = 0;\n        zoom.style.height = 0;\n        hideZoom();\n        flag = false; （false判断是否进行选取动作）\n    }\nfunction showZoom() {\n      zoom.style.display = \"block\" ;\n}\nunction hideZoom() {\n       zoom.style.display = \"none\";\n}\n```\n\n## `重置键`\n\n```js\n//清除画布，重新绘制图像\nrButton.onclick = function () {\n        context.clearRect(0,0,canvas.width,canvas.height);\n        context.drawImage(img,0,0,canvas.width,canvas.height);\n };\n ```\n\n代码差不多给了80%左右，关键步骤都已经给了，一些开始的准备代码没有写，还是思路重要。如果想要看相似的代码，点击上图。其实和拖动有很大的相似，只不过这个是结合`canvas`来写。（不支持`IE8`及以下）。\n\n这样选取框就做好啦","source":"_posts/js-1.md","raw":"---\ntitle: canvas实现橡皮筋式选取框\ncomments: true\ndescription: canvas实现橡皮筋式选取框, canvas, js, 选取\ntags: \"canvas\"\ndate: 2016-06-3 12:14:10\ncategories: \"js\"\nkeywords: canvas, js, 橡皮筋式选取框\n---\ncanvas实现橡皮筋式选取框\n\n点击查看示例： [示例](http://www.hbbaly.com/wp-content/themes/blog/case/rubber.html)\n\n# canvas实现橡皮筋式选取框思路：\n\n有三个事件`mousedown`,`mousemove`,`mouseup`，鼠标坐标转化为`canvas`坐标`（canvas.getBoundingClientRect()）`。\n\n## `mousedown`\n\n选取框的起始点位于鼠标按下的位置。\n\n```js\n\ncanvas.onmousedown = function (e) {\n        var x = e.clientX,\n            y = e.clientY;\n        e.preventDefault();\n        zoomStart(x,y);   //橡皮筋选取框开始\n};\n\n//选取框起始位置\nfunction zoomStart(x,y) {\n        mousedown.x = x;\n        mousedown.y =y;\n        zoomRectangle.left =  mousedown.x;\n        zoomRectangle.top =  mousedown.y;\n        moveZoom();\n        showZoom();\n        flag = true;\n    }\n```\n## `mousemove`\n\n鼠标移动的距离，判断是向左还是向右向上还是向下，根据移动的距离取出选取框的宽高。\n```js\nwindow.onmousemove = function (e) {\n       var x = e.clientX,\n           y = e.clientY;\n       e.preventDefault();\n       if(flag) zoomStretch(x,y);\n   };\nfunction zoomStretch(x,y) {\n       //选取框top，left，width，height值\n       zoomRectangle.left = x< mousedown.x? x:mousedown.x;\n       zoomRectangle.top =  y< mousedown.y?y:mousedown.y;\n       zoomRectangle.width = Math.abs(x-mousedown.x);\n       zoomRectangle.height = Math.abs(y-mousedown.y);\n       moveZoom();\n       resizeZoom();\n   }\nfunction moveZoom() {\n        zoom.style.left = zoomRectangle.left +\"px\";\n        zoom.style.top = zoomRectangle.top +\"px\";\n}\nfunction resizeZoom() {\n        zoom.style.width = zoomRectangle.width +\"px\";\n        zoom.style.height = zoomRectangle.height +\"px\";\n}\n```\n\n## `mouseup`\n\n求出最终的选取框的宽高，原来图像消失，变为选取的图像。\n```js\nwindow.onmouseup = function (e) {\n       e.preventDefault();\n       zoomEnd();\n   };\nfunction zoomEnd() {\n        var bbox = canvas.getBoundingClientRect();\n       //选定的区间，放大到整个canvas\n        try{\n            context.drawImage(canvas,zoomRectangle.left-bbox.left,zoomRectangle.top-bbox.top,zoomRectangle.width,zoomRectangle.height,0,0,canvas.width,canvas.height)\n        }\n        catch(e){\n        }\n      //原来选取框相关数据归零\n        resetZoomRectangle();\n        zoom.style.width = 0;\n        zoom.style.height = 0;\n        hideZoom();\n        flag = false; （false判断是否进行选取动作）\n    }\nfunction showZoom() {\n      zoom.style.display = \"block\" ;\n}\nunction hideZoom() {\n       zoom.style.display = \"none\";\n}\n```\n\n## `重置键`\n\n```js\n//清除画布，重新绘制图像\nrButton.onclick = function () {\n        context.clearRect(0,0,canvas.width,canvas.height);\n        context.drawImage(img,0,0,canvas.width,canvas.height);\n };\n ```\n\n代码差不多给了80%左右，关键步骤都已经给了，一些开始的准备代码没有写，还是思路重要。如果想要看相似的代码，点击上图。其实和拖动有很大的相似，只不过这个是结合`canvas`来写。（不支持`IE8`及以下）。\n\n这样选取框就做好啦","slug":"js-1","published":1,"updated":"2019-09-20T01:47:45.507Z","layout":"post","photos":[],"link":"","_id":"ck1p3g29t000jn0b9vr65e03f","content":"<p>canvas实现橡皮筋式选取框</p>\n<p>点击查看示例： <a href=\"http://www.hbbaly.com/wp-content/themes/blog/case/rubber.html\" target=\"_blank\" rel=\"noopener\">示例</a></p>\n<h1 id=\"canvas实现橡皮筋式选取框思路：\"><a href=\"#canvas实现橡皮筋式选取框思路：\" class=\"headerlink\" title=\"canvas实现橡皮筋式选取框思路：\"></a>canvas实现橡皮筋式选取框思路：</h1><p>有三个事件<code>mousedown</code>,<code>mousemove</code>,<code>mouseup</code>，鼠标坐标转化为<code>canvas</code>坐标<code>（canvas.getBoundingClientRect()）</code>。</p>\n<h2 id=\"mousedown\"><a href=\"#mousedown\" class=\"headerlink\" title=\"mousedown\"></a><code>mousedown</code></h2><p>选取框的起始点位于鼠标按下的位置。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">canvas.onmousedown = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> x = e.clientX,</span><br><span class=\"line\">            y = e.clientY;</span><br><span class=\"line\">        e.preventDefault();</span><br><span class=\"line\">        zoomStart(x,y);   <span class=\"comment\">//橡皮筋选取框开始</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//选取框起始位置</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">zoomStart</span>(<span class=\"params\">x,y</span>) </span>&#123;</span><br><span class=\"line\">        mousedown.x = x;</span><br><span class=\"line\">        mousedown.y =y;</span><br><span class=\"line\">        zoomRectangle.left =  mousedown.x;</span><br><span class=\"line\">        zoomRectangle.top =  mousedown.y;</span><br><span class=\"line\">        moveZoom();</span><br><span class=\"line\">        showZoom();</span><br><span class=\"line\">        flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"mousemove\"><a href=\"#mousemove\" class=\"headerlink\" title=\"mousemove\"></a><code>mousemove</code></h2><p>鼠标移动的距离，判断是向左还是向右向上还是向下，根据移动的距离取出选取框的宽高。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onmousemove = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">var</span> x = e.clientX,</span><br><span class=\"line\">           y = e.clientY;</span><br><span class=\"line\">       e.preventDefault();</span><br><span class=\"line\">       <span class=\"keyword\">if</span>(flag) zoomStretch(x,y);</span><br><span class=\"line\">   &#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">zoomStretch</span>(<span class=\"params\">x,y</span>) </span>&#123;</span><br><span class=\"line\">       <span class=\"comment\">//选取框top，left，width，height值</span></span><br><span class=\"line\">       zoomRectangle.left = x&lt; mousedown.x? x:mousedown.x;</span><br><span class=\"line\">       zoomRectangle.top =  y&lt; mousedown.y?y:mousedown.y;</span><br><span class=\"line\">       zoomRectangle.width = <span class=\"built_in\">Math</span>.abs(x-mousedown.x);</span><br><span class=\"line\">       zoomRectangle.height = <span class=\"built_in\">Math</span>.abs(y-mousedown.y);</span><br><span class=\"line\">       moveZoom();</span><br><span class=\"line\">       resizeZoom();</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">moveZoom</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        zoom.style.left = zoomRectangle.left +<span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">        zoom.style.top = zoomRectangle.top +<span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">resizeZoom</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        zoom.style.width = zoomRectangle.width +<span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">        zoom.style.height = zoomRectangle.height +<span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"mouseup\"><a href=\"#mouseup\" class=\"headerlink\" title=\"mouseup\"></a><code>mouseup</code></h2><p>求出最终的选取框的宽高，原来图像消失，变为选取的图像。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onmouseup = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">       e.preventDefault();</span><br><span class=\"line\">       zoomEnd();</span><br><span class=\"line\">   &#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">zoomEnd</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> bbox = canvas.getBoundingClientRect();</span><br><span class=\"line\">       <span class=\"comment\">//选定的区间，放大到整个canvas</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            context.drawImage(canvas,zoomRectangle.left-bbox.left,zoomRectangle.top-bbox.top,zoomRectangle.width,zoomRectangle.height,<span class=\"number\">0</span>,<span class=\"number\">0</span>,canvas.width,canvas.height)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span>(e)&#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      <span class=\"comment\">//原来选取框相关数据归零</span></span><br><span class=\"line\">        resetZoomRectangle();</span><br><span class=\"line\">        zoom.style.width = <span class=\"number\">0</span>;</span><br><span class=\"line\">        zoom.style.height = <span class=\"number\">0</span>;</span><br><span class=\"line\">        hideZoom();</span><br><span class=\"line\">        flag = <span class=\"literal\">false</span>; （<span class=\"literal\">false</span>判断是否进行选取动作）</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showZoom</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      zoom.style.display = <span class=\"string\">\"block\"</span> ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">unction hideZoom() &#123;</span><br><span class=\"line\">       zoom.style.display = <span class=\"string\">\"none\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"重置键\"><a href=\"#重置键\" class=\"headerlink\" title=\"重置键\"></a><code>重置键</code></h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//清除画布，重新绘制图像</span></span><br><span class=\"line\">rButton.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        context.clearRect(<span class=\"number\">0</span>,<span class=\"number\">0</span>,canvas.width,canvas.height);</span><br><span class=\"line\">        context.drawImage(img,<span class=\"number\">0</span>,<span class=\"number\">0</span>,canvas.width,canvas.height);</span><br><span class=\"line\"> &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>代码差不多给了80%左右，关键步骤都已经给了，一些开始的准备代码没有写，还是思路重要。如果想要看相似的代码，点击上图。其实和拖动有很大的相似，只不过这个是结合<code>canvas</code>来写。（不支持<code>IE8</code>及以下）。</p>\n<p>这样选取框就做好啦</p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<p>canvas实现橡皮筋式选取框</p>\n<p>点击查看示例： <a href=\"http://www.hbbaly.com/wp-content/themes/blog/case/rubber.html\" target=\"_blank\" rel=\"noopener\">示例</a></p>\n<h1 id=\"canvas实现橡皮筋式选取框思路：\"><a href=\"#canvas实现橡皮筋式选取框思路：\" class=\"headerlink\" title=\"canvas实现橡皮筋式选取框思路：\"></a>canvas实现橡皮筋式选取框思路：</h1><p>有三个事件<code>mousedown</code>,<code>mousemove</code>,<code>mouseup</code>，鼠标坐标转化为<code>canvas</code>坐标<code>（canvas.getBoundingClientRect()）</code>。</p>\n<h2 id=\"mousedown\"><a href=\"#mousedown\" class=\"headerlink\" title=\"mousedown\"></a><code>mousedown</code></h2><p>选取框的起始点位于鼠标按下的位置。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">canvas.onmousedown = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> x = e.clientX,</span><br><span class=\"line\">            y = e.clientY;</span><br><span class=\"line\">        e.preventDefault();</span><br><span class=\"line\">        zoomStart(x,y);   <span class=\"comment\">//橡皮筋选取框开始</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//选取框起始位置</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">zoomStart</span>(<span class=\"params\">x,y</span>) </span>&#123;</span><br><span class=\"line\">        mousedown.x = x;</span><br><span class=\"line\">        mousedown.y =y;</span><br><span class=\"line\">        zoomRectangle.left =  mousedown.x;</span><br><span class=\"line\">        zoomRectangle.top =  mousedown.y;</span><br><span class=\"line\">        moveZoom();</span><br><span class=\"line\">        showZoom();</span><br><span class=\"line\">        flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"mousemove\"><a href=\"#mousemove\" class=\"headerlink\" title=\"mousemove\"></a><code>mousemove</code></h2><p>鼠标移动的距离，判断是向左还是向右向上还是向下，根据移动的距离取出选取框的宽高。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onmousemove = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">var</span> x = e.clientX,</span><br><span class=\"line\">           y = e.clientY;</span><br><span class=\"line\">       e.preventDefault();</span><br><span class=\"line\">       <span class=\"keyword\">if</span>(flag) zoomStretch(x,y);</span><br><span class=\"line\">   &#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">zoomStretch</span>(<span class=\"params\">x,y</span>) </span>&#123;</span><br><span class=\"line\">       <span class=\"comment\">//选取框top，left，width，height值</span></span><br><span class=\"line\">       zoomRectangle.left = x&lt; mousedown.x? x:mousedown.x;</span><br><span class=\"line\">       zoomRectangle.top =  y&lt; mousedown.y?y:mousedown.y;</span><br><span class=\"line\">       zoomRectangle.width = <span class=\"built_in\">Math</span>.abs(x-mousedown.x);</span><br><span class=\"line\">       zoomRectangle.height = <span class=\"built_in\">Math</span>.abs(y-mousedown.y);</span><br><span class=\"line\">       moveZoom();</span><br><span class=\"line\">       resizeZoom();</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">moveZoom</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        zoom.style.left = zoomRectangle.left +<span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">        zoom.style.top = zoomRectangle.top +<span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">resizeZoom</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        zoom.style.width = zoomRectangle.width +<span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">        zoom.style.height = zoomRectangle.height +<span class=\"string\">\"px\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"mouseup\"><a href=\"#mouseup\" class=\"headerlink\" title=\"mouseup\"></a><code>mouseup</code></h2><p>求出最终的选取框的宽高，原来图像消失，变为选取的图像。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onmouseup = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">       e.preventDefault();</span><br><span class=\"line\">       zoomEnd();</span><br><span class=\"line\">   &#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">zoomEnd</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> bbox = canvas.getBoundingClientRect();</span><br><span class=\"line\">       <span class=\"comment\">//选定的区间，放大到整个canvas</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            context.drawImage(canvas,zoomRectangle.left-bbox.left,zoomRectangle.top-bbox.top,zoomRectangle.width,zoomRectangle.height,<span class=\"number\">0</span>,<span class=\"number\">0</span>,canvas.width,canvas.height)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span>(e)&#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      <span class=\"comment\">//原来选取框相关数据归零</span></span><br><span class=\"line\">        resetZoomRectangle();</span><br><span class=\"line\">        zoom.style.width = <span class=\"number\">0</span>;</span><br><span class=\"line\">        zoom.style.height = <span class=\"number\">0</span>;</span><br><span class=\"line\">        hideZoom();</span><br><span class=\"line\">        flag = <span class=\"literal\">false</span>; （<span class=\"literal\">false</span>判断是否进行选取动作）</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showZoom</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      zoom.style.display = <span class=\"string\">\"block\"</span> ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">unction hideZoom() &#123;</span><br><span class=\"line\">       zoom.style.display = <span class=\"string\">\"none\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"重置键\"><a href=\"#重置键\" class=\"headerlink\" title=\"重置键\"></a><code>重置键</code></h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//清除画布，重新绘制图像</span></span><br><span class=\"line\">rButton.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        context.clearRect(<span class=\"number\">0</span>,<span class=\"number\">0</span>,canvas.width,canvas.height);</span><br><span class=\"line\">        context.drawImage(img,<span class=\"number\">0</span>,<span class=\"number\">0</span>,canvas.width,canvas.height);</span><br><span class=\"line\"> &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>代码差不多给了80%左右，关键步骤都已经给了，一些开始的准备代码没有写，还是思路重要。如果想要看相似的代码，点击上图。其实和拖动有很大的相似，只不过这个是结合<code>canvas</code>来写。（不支持<code>IE8</code>及以下）。</p>\n<p>这样选取框就做好啦</p>\n"},{"title":"闭包","comments":1,"description":"关于闭包这个问题，我刚开始接触的时候，也是不懂，随着学习的深入和能力的提升，渐渐地开始理解。闭包是JavaScript中的难点，很多地方也是会碰到闭包问题","date":"2016-10-12T07:39:10.000Z","keywords":"闭包","_content":"\n关于闭包这个问题，我刚开始接触的时候，也是不懂，随着学习的深入和能力的提升，渐渐地开始理解。闭包是`JavaScript`中的难点，很多地方也是会碰到闭包问题。\n\n我们知道如果变量不加上`var`关键字，则默认的会添加到全局对象的属性上去，这样的临时变量加入全局对象有很多坏处，比如：别的函数可能误用这些变量；造成全局对象过于庞大，影响访问速度(因为变量的取值是需要从原型链上遍历的)。\n\n变量的作用域：全局变量和局部变量，作用域可以引用上一个作用域的参数或者变量，反之不可。\n\n比如：\n\n```js\nvar a = \"global\";  //全局变量\nfunction fn() {\n  var a = \"local\"; //局部变量\n  function fn1(){alert(a);}\n  return fn1();\n}\nfn();    //弹出local\n```\n\n在fn函数内声明了一个局部变量，定义了一个函数`fn1`并把`fn1（）`作为函数`fn`执行结果返回，a就是局部变量。\n\n```js\nvar a = \"global\";  //全局变量\nfunction fn() {\n    var a = \"local\"; //局部变量\n    function fn1(){alert(a);}\n    return fn1;\n}\nfn()();\n```\n\n看看上例弹出的是？\n\n我们来分析一遍：`fn()`执行后返回的`fn1`这个函数，再加上（）的时候，把`fn1`执行（也就是调用嵌套的fn1函数）, `fn1`内没有变量`a`，它会沿着作用域链向上一层查找变量`a`，调用上一层的局部变量`a`，所以弹出的还是`local`！\n\n闭包：内部函数使用了外部函数的参数与变量，而且这个参数或者变量将永久存在。\n\n```js\nfunction a(){\n  var n = 0;\n  function b() {\n    n++;\n    console.log(n);\n  }\n  b();  //1\n  b();  //2\n}\na();\n```\n\n这里内部函数b引用了外部函数a的变量n，最后执行函数a，相当于执行了两次函数b，n从0变为2。这是闭包的一个例子。\n\n当一个函数嵌套另外一个函数，外部函数将嵌套的函数对象作为返回值返回的时候往往出现闭包。\n\n```js\nfunction a(){\n  var n = 0;\n  function b() {\n    n++;\n    console.log(n);\n  }\n  return b;\n}\nvar c = a();\nc();    //1\nc();    //2\n```\n\n这里的答案和上例是一样的，这里用了`return b`，因为外部无法调用函数b，所以使用`return b` 与外部联系形成闭包。\n\nhtml代码：\n\n```html\n<div id=\"box\">\n  <ul>\n    <li>1111111</li>\n    <li>222222</li>\n    <li>3333333</li>\n    <li>444444</li>\n  </ul>\n</div>\n```\n\njs代码：\n\n```js\n  var aLi = document.querySelectorAll('#box ul li');\n  for (var i = 0,length = aLi.length; i < length; i++) {\n    aLi[i].onclick = function () {\n      alert(i);\n    }\n  }\n```\n\n点击每一个`li`都弹出4，因为`for`循环是一瞬间执行完毕，没有保存过程中的i，这种情况我们也可以使用闭包来做。\n\n```js\nvar aLi = document.getElementsByClassName('#box ul li');\nfor (var i = 0,length = aLi.length; i < length; i++) {\n  (function () {\n    var x = i;\n    aLi[x].onclick = function () {\n      alert(x);\n    }\n  })();\n}\n```\n\n这样点击相应的li就会弹出对应的序号。上例可以看出有两个函数，内部函数使用了外部函数的变量x，并且这个x永久的保存下来了，没有被回收。我们可以对js代码进行完善。\n\n```js\nvar aLi = document.getElementsByClassName('#box ul li');\n  for (var i = 0,length = aLi.length; i < length; i++) {\n    (function (x) {\n      aLi[x].onclick = function () {\n        alert(x);\n      }\n  })(i);\n}\n```\n闭包的写法，看起来更加简洁。\n\n下面来看几道例题：\n\n1.\n\n```js\nfor (var i = 0; i < 4; i++) {\n  setTimeout(function () {\n    alert(i);\n  });\n}\n```\n\n弹出4个4，因为`for`循环是一瞬间执行，如果想要得到0,1,2,3可以使用闭包来做。\n\n2.\n\n```js\nvar name = \"window\";\n  var obj = {\n    name : \"local\",\n    fn : function(){\n      return function(){\n        return this.name;\n      };\n    }\n  };\nalert(obj.fn()());\n```\n\n弹出`window`，因为这个`this`是指向`window`的，所以`this.name = “window”`(因为匿名函数执行环境是全局)。\n\n3.\n\n```js\n  var name = \"Window\";\n  var obj = {\n    name : \"local\",\n      fn : function(){\n        var that = this;\n        return function(){\n          return that.name;\n        };\n      }\n  };\nalert(obj.fn()());\n```\n\n弹出`local`,使用了闭包，`that`指向的是`obj`。\n\n4.\n\n```js\n  var name = \"window\";\n  var obj = {\n    name : \"local\",\n      fn : function(){\n        return this.name;\n      }\n   };\n  alert(obj.fn());\n  alert((obj.fn)());\n  alert((obj.fn = obj.fn)());\n```\n\n把例3里面的代码稍微改一些，得到不同的结果。\n\n`(obj.fn())===>fn`里面的`this`指向的就是`fn`，所以`this.name=“local”`，弹出`local`。\n\n`((obj.fn)`与`obj.fn`相同，所以还是`local`。\n\n`(obj.fn = obj.fn)()`，把`obj.fn`赋值给`obj.fn`，不是引用，所以`this`指向不是`fn`而是`window`。弹出`window`。\n\n2,3,4例题提醒我们：在闭包使用`this`应注意的`this`的指向。\n\n5.\n\n```js\nfunction fn(){\n  var a = [];\n  for (var i=0; i < 10; i++){\n    a[i] = function(){\n      return i;\n    };\n  }\n  return a;\n}\nvar f = fn();\nfor (var i=0; i < f.length; i++){\n  console.log(f[i]());\n}\n```\n\n我们来分析一下：\n\n```js\nfunction fn(){\n  var a = [];  //新建数组\n  for (var i=0; i < 10; i++){\n    a[i] = function(){\n      return i;  //往数组里面添加i\n    };\n  }\n  return a;  //执行fn结果是返回数组a\n}\nvar f = fn();  //f = a\nfor (var i=0; i < f.length; i++){\n  console.log(f[i]);  //打印数组f,里面为function(){ return i;}\n  console.log(f[i]());\n}\n```\n\nf内存放着10个函数`function(){return i}`;  `fn[i]()`结果是返回10个10。\n","source":"_posts/js-11.md","raw":"---\ntitle: 闭包\ncomments: true\ndescription: 关于闭包这个问题，我刚开始接触的时候，也是不懂，随着学习的深入和能力的提升，渐渐地开始理解。闭包是JavaScript中的难点，很多地方也是会碰到闭包问题\ntags: \"js\"\ndate: 2016-10-12 15:39:10\ncategories: \"js\"\nkeywords: 闭包\n---\n\n关于闭包这个问题，我刚开始接触的时候，也是不懂，随着学习的深入和能力的提升，渐渐地开始理解。闭包是`JavaScript`中的难点，很多地方也是会碰到闭包问题。\n\n我们知道如果变量不加上`var`关键字，则默认的会添加到全局对象的属性上去，这样的临时变量加入全局对象有很多坏处，比如：别的函数可能误用这些变量；造成全局对象过于庞大，影响访问速度(因为变量的取值是需要从原型链上遍历的)。\n\n变量的作用域：全局变量和局部变量，作用域可以引用上一个作用域的参数或者变量，反之不可。\n\n比如：\n\n```js\nvar a = \"global\";  //全局变量\nfunction fn() {\n  var a = \"local\"; //局部变量\n  function fn1(){alert(a);}\n  return fn1();\n}\nfn();    //弹出local\n```\n\n在fn函数内声明了一个局部变量，定义了一个函数`fn1`并把`fn1（）`作为函数`fn`执行结果返回，a就是局部变量。\n\n```js\nvar a = \"global\";  //全局变量\nfunction fn() {\n    var a = \"local\"; //局部变量\n    function fn1(){alert(a);}\n    return fn1;\n}\nfn()();\n```\n\n看看上例弹出的是？\n\n我们来分析一遍：`fn()`执行后返回的`fn1`这个函数，再加上（）的时候，把`fn1`执行（也就是调用嵌套的fn1函数）, `fn1`内没有变量`a`，它会沿着作用域链向上一层查找变量`a`，调用上一层的局部变量`a`，所以弹出的还是`local`！\n\n闭包：内部函数使用了外部函数的参数与变量，而且这个参数或者变量将永久存在。\n\n```js\nfunction a(){\n  var n = 0;\n  function b() {\n    n++;\n    console.log(n);\n  }\n  b();  //1\n  b();  //2\n}\na();\n```\n\n这里内部函数b引用了外部函数a的变量n，最后执行函数a，相当于执行了两次函数b，n从0变为2。这是闭包的一个例子。\n\n当一个函数嵌套另外一个函数，外部函数将嵌套的函数对象作为返回值返回的时候往往出现闭包。\n\n```js\nfunction a(){\n  var n = 0;\n  function b() {\n    n++;\n    console.log(n);\n  }\n  return b;\n}\nvar c = a();\nc();    //1\nc();    //2\n```\n\n这里的答案和上例是一样的，这里用了`return b`，因为外部无法调用函数b，所以使用`return b` 与外部联系形成闭包。\n\nhtml代码：\n\n```html\n<div id=\"box\">\n  <ul>\n    <li>1111111</li>\n    <li>222222</li>\n    <li>3333333</li>\n    <li>444444</li>\n  </ul>\n</div>\n```\n\njs代码：\n\n```js\n  var aLi = document.querySelectorAll('#box ul li');\n  for (var i = 0,length = aLi.length; i < length; i++) {\n    aLi[i].onclick = function () {\n      alert(i);\n    }\n  }\n```\n\n点击每一个`li`都弹出4，因为`for`循环是一瞬间执行完毕，没有保存过程中的i，这种情况我们也可以使用闭包来做。\n\n```js\nvar aLi = document.getElementsByClassName('#box ul li');\nfor (var i = 0,length = aLi.length; i < length; i++) {\n  (function () {\n    var x = i;\n    aLi[x].onclick = function () {\n      alert(x);\n    }\n  })();\n}\n```\n\n这样点击相应的li就会弹出对应的序号。上例可以看出有两个函数，内部函数使用了外部函数的变量x，并且这个x永久的保存下来了，没有被回收。我们可以对js代码进行完善。\n\n```js\nvar aLi = document.getElementsByClassName('#box ul li');\n  for (var i = 0,length = aLi.length; i < length; i++) {\n    (function (x) {\n      aLi[x].onclick = function () {\n        alert(x);\n      }\n  })(i);\n}\n```\n闭包的写法，看起来更加简洁。\n\n下面来看几道例题：\n\n1.\n\n```js\nfor (var i = 0; i < 4; i++) {\n  setTimeout(function () {\n    alert(i);\n  });\n}\n```\n\n弹出4个4，因为`for`循环是一瞬间执行，如果想要得到0,1,2,3可以使用闭包来做。\n\n2.\n\n```js\nvar name = \"window\";\n  var obj = {\n    name : \"local\",\n    fn : function(){\n      return function(){\n        return this.name;\n      };\n    }\n  };\nalert(obj.fn()());\n```\n\n弹出`window`，因为这个`this`是指向`window`的，所以`this.name = “window”`(因为匿名函数执行环境是全局)。\n\n3.\n\n```js\n  var name = \"Window\";\n  var obj = {\n    name : \"local\",\n      fn : function(){\n        var that = this;\n        return function(){\n          return that.name;\n        };\n      }\n  };\nalert(obj.fn()());\n```\n\n弹出`local`,使用了闭包，`that`指向的是`obj`。\n\n4.\n\n```js\n  var name = \"window\";\n  var obj = {\n    name : \"local\",\n      fn : function(){\n        return this.name;\n      }\n   };\n  alert(obj.fn());\n  alert((obj.fn)());\n  alert((obj.fn = obj.fn)());\n```\n\n把例3里面的代码稍微改一些，得到不同的结果。\n\n`(obj.fn())===>fn`里面的`this`指向的就是`fn`，所以`this.name=“local”`，弹出`local`。\n\n`((obj.fn)`与`obj.fn`相同，所以还是`local`。\n\n`(obj.fn = obj.fn)()`，把`obj.fn`赋值给`obj.fn`，不是引用，所以`this`指向不是`fn`而是`window`。弹出`window`。\n\n2,3,4例题提醒我们：在闭包使用`this`应注意的`this`的指向。\n\n5.\n\n```js\nfunction fn(){\n  var a = [];\n  for (var i=0; i < 10; i++){\n    a[i] = function(){\n      return i;\n    };\n  }\n  return a;\n}\nvar f = fn();\nfor (var i=0; i < f.length; i++){\n  console.log(f[i]());\n}\n```\n\n我们来分析一下：\n\n```js\nfunction fn(){\n  var a = [];  //新建数组\n  for (var i=0; i < 10; i++){\n    a[i] = function(){\n      return i;  //往数组里面添加i\n    };\n  }\n  return a;  //执行fn结果是返回数组a\n}\nvar f = fn();  //f = a\nfor (var i=0; i < f.length; i++){\n  console.log(f[i]);  //打印数组f,里面为function(){ return i;}\n  console.log(f[i]());\n}\n```\n\nf内存放着10个函数`function(){return i}`;  `fn[i]()`结果是返回10个10。\n","slug":"js-11","published":1,"updated":"2019-09-19T01:38:44.615Z","layout":"post","photos":[],"link":"","_id":"ck1p3g29u000mn0b9sjywl1d6","content":"<p>关于闭包这个问题，我刚开始接触的时候，也是不懂，随着学习的深入和能力的提升，渐渐地开始理解。闭包是<code>JavaScript</code>中的难点，很多地方也是会碰到闭包问题。</p>\n<p>我们知道如果变量不加上<code>var</code>关键字，则默认的会添加到全局对象的属性上去，这样的临时变量加入全局对象有很多坏处，比如：别的函数可能误用这些变量；造成全局对象过于庞大，影响访问速度(因为变量的取值是需要从原型链上遍历的)。</p>\n<p>变量的作用域：全局变量和局部变量，作用域可以引用上一个作用域的参数或者变量，反之不可。</p>\n<p>比如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">\"global\"</span>;  <span class=\"comment\">//全局变量</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"string\">\"local\"</span>; <span class=\"comment\">//局部变量</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>)</span>&#123;alert(a);&#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> fn1();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fn();    <span class=\"comment\">//弹出local</span></span><br></pre></td></tr></table></figure>\n\n<p>在fn函数内声明了一个局部变量，定义了一个函数<code>fn1</code>并把<code>fn1（）</code>作为函数<code>fn</code>执行结果返回，a就是局部变量。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">\"global\"</span>;  <span class=\"comment\">//全局变量</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"string\">\"local\"</span>; <span class=\"comment\">//局部变量</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>)</span>&#123;alert(a);&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> fn1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fn()();</span><br></pre></td></tr></table></figure>\n\n<p>看看上例弹出的是？</p>\n<p>我们来分析一遍：<code>fn()</code>执行后返回的<code>fn1</code>这个函数，再加上（）的时候，把<code>fn1</code>执行（也就是调用嵌套的fn1函数）, <code>fn1</code>内没有变量<code>a</code>，它会沿着作用域链向上一层查找变量<code>a</code>，调用上一层的局部变量<code>a</code>，所以弹出的还是<code>local</code>！</p>\n<p>闭包：内部函数使用了外部函数的参数与变量，而且这个参数或者变量将永久存在。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> n = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">b</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    n++;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(n);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  b();  <span class=\"comment\">//1</span></span><br><span class=\"line\">  b();  <span class=\"comment\">//2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">a();</span><br></pre></td></tr></table></figure>\n\n<p>这里内部函数b引用了外部函数a的变量n，最后执行函数a，相当于执行了两次函数b，n从0变为2。这是闭包的一个例子。</p>\n<p>当一个函数嵌套另外一个函数，外部函数将嵌套的函数对象作为返回值返回的时候往往出现闭包。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> n = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">b</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    n++;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(n);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = a();</span><br><span class=\"line\">c();    <span class=\"comment\">//1</span></span><br><span class=\"line\">c();    <span class=\"comment\">//2</span></span><br></pre></td></tr></table></figure>\n\n<p>这里的答案和上例是一样的，这里用了<code>return b</code>，因为外部无法调用函数b，所以使用<code>return b</code> 与外部联系形成闭包。</p>\n<p>html代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>1111111<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>222222<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>3333333<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>444444<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>js代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> aLi = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'#box ul li'</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,length = aLi.length; i &lt; length; i++) &#123;</span><br><span class=\"line\">  aLi[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(i);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>点击每一个<code>li</code>都弹出4，因为<code>for</code>循环是一瞬间执行完毕，没有保存过程中的i，这种情况我们也可以使用闭包来做。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> aLi = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">'#box ul li'</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,length = aLi.length; i &lt; length; i++) &#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> x = i;</span><br><span class=\"line\">    aLi[x].onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      alert(x);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这样点击相应的li就会弹出对应的序号。上例可以看出有两个函数，内部函数使用了外部函数的变量x，并且这个x永久的保存下来了，没有被回收。我们可以对js代码进行完善。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> aLi = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">'#box ul li'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,length = aLi.length; i &lt; length; i++) &#123;</span><br><span class=\"line\">    (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">      aLi[x].onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        alert(x);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;)(i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>闭包的写法，看起来更加简洁。</p>\n<p>下面来看几道例题：</p>\n<p>1.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++) &#123;</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(i);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>弹出4个4，因为<code>for</code>循环是一瞬间执行，如果想要得到0,1,2,3可以使用闭包来做。</p>\n<p>2.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">\"window\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    name : <span class=\"string\">\"local\"</span>,</span><br><span class=\"line\">    fn : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">alert(obj.fn()());</span><br></pre></td></tr></table></figure>\n\n<p>弹出<code>window</code>，因为这个<code>this</code>是指向<code>window</code>的，所以<code>this.name = “window”</code>(因为匿名函数执行环境是全局)。</p>\n<p>3.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">\"Window\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    name : <span class=\"string\">\"local\"</span>,</span><br><span class=\"line\">      fn : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> that.name;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">alert(obj.fn()());</span><br></pre></td></tr></table></figure>\n\n<p>弹出<code>local</code>,使用了闭包，<code>that</code>指向的是<code>obj</code>。</p>\n<p>4.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">\"window\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  name : <span class=\"string\">\"local\"</span>,</span><br><span class=\"line\">    fn : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\">alert(obj.fn());</span><br><span class=\"line\">alert((obj.fn)());</span><br><span class=\"line\">alert((obj.fn = obj.fn)());</span><br></pre></td></tr></table></figure>\n\n<p>把例3里面的代码稍微改一些，得到不同的结果。</p>\n<p><code>(obj.fn())===&gt;fn</code>里面的<code>this</code>指向的就是<code>fn</code>，所以<code>this.name=“local”</code>，弹出<code>local</code>。</p>\n<p><code>((obj.fn)</code>与<code>obj.fn</code>相同，所以还是<code>local</code>。</p>\n<p><code>(obj.fn = obj.fn)()</code>，把<code>obj.fn</code>赋值给<code>obj.fn</code>，不是引用，所以<code>this</code>指向不是<code>fn</code>而是<code>window</code>。弹出<code>window</code>。</p>\n<p>2,3,4例题提醒我们：在闭包使用<code>this</code>应注意的<code>this</code>的指向。</p>\n<p>5.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">    a[i] = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> f = fn();</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i &lt; f.length; i++)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(f[i]());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>我们来分析一下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = [];  <span class=\"comment\">//新建数组</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">    a[i] = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> i;  <span class=\"comment\">//往数组里面添加i</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a;  <span class=\"comment\">//执行fn结果是返回数组a</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> f = fn();  <span class=\"comment\">//f = a</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i &lt; f.length; i++)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(f[i]);  <span class=\"comment\">//打印数组f,里面为function()&#123; return i;&#125;</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(f[i]());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>f内存放着10个函数<code>function(){return i}</code>;  <code>fn[i]()</code>结果是返回10个10。</p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<p>关于闭包这个问题，我刚开始接触的时候，也是不懂，随着学习的深入和能力的提升，渐渐地开始理解。闭包是<code>JavaScript</code>中的难点，很多地方也是会碰到闭包问题。</p>\n<p>我们知道如果变量不加上<code>var</code>关键字，则默认的会添加到全局对象的属性上去，这样的临时变量加入全局对象有很多坏处，比如：别的函数可能误用这些变量；造成全局对象过于庞大，影响访问速度(因为变量的取值是需要从原型链上遍历的)。</p>\n<p>变量的作用域：全局变量和局部变量，作用域可以引用上一个作用域的参数或者变量，反之不可。</p>\n<p>比如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">\"global\"</span>;  <span class=\"comment\">//全局变量</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"string\">\"local\"</span>; <span class=\"comment\">//局部变量</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>)</span>&#123;alert(a);&#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> fn1();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fn();    <span class=\"comment\">//弹出local</span></span><br></pre></td></tr></table></figure>\n\n<p>在fn函数内声明了一个局部变量，定义了一个函数<code>fn1</code>并把<code>fn1（）</code>作为函数<code>fn</code>执行结果返回，a就是局部变量。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">\"global\"</span>;  <span class=\"comment\">//全局变量</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"string\">\"local\"</span>; <span class=\"comment\">//局部变量</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn1</span>(<span class=\"params\"></span>)</span>&#123;alert(a);&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> fn1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fn()();</span><br></pre></td></tr></table></figure>\n\n<p>看看上例弹出的是？</p>\n<p>我们来分析一遍：<code>fn()</code>执行后返回的<code>fn1</code>这个函数，再加上（）的时候，把<code>fn1</code>执行（也就是调用嵌套的fn1函数）, <code>fn1</code>内没有变量<code>a</code>，它会沿着作用域链向上一层查找变量<code>a</code>，调用上一层的局部变量<code>a</code>，所以弹出的还是<code>local</code>！</p>\n<p>闭包：内部函数使用了外部函数的参数与变量，而且这个参数或者变量将永久存在。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> n = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">b</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    n++;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(n);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  b();  <span class=\"comment\">//1</span></span><br><span class=\"line\">  b();  <span class=\"comment\">//2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">a();</span><br></pre></td></tr></table></figure>\n\n<p>这里内部函数b引用了外部函数a的变量n，最后执行函数a，相当于执行了两次函数b，n从0变为2。这是闭包的一个例子。</p>\n<p>当一个函数嵌套另外一个函数，外部函数将嵌套的函数对象作为返回值返回的时候往往出现闭包。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> n = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">b</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    n++;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(n);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = a();</span><br><span class=\"line\">c();    <span class=\"comment\">//1</span></span><br><span class=\"line\">c();    <span class=\"comment\">//2</span></span><br></pre></td></tr></table></figure>\n\n<p>这里的答案和上例是一样的，这里用了<code>return b</code>，因为外部无法调用函数b，所以使用<code>return b</code> 与外部联系形成闭包。</p>\n<p>html代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>1111111<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>222222<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>3333333<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>444444<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>js代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> aLi = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'#box ul li'</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,length = aLi.length; i &lt; length; i++) &#123;</span><br><span class=\"line\">  aLi[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(i);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>点击每一个<code>li</code>都弹出4，因为<code>for</code>循环是一瞬间执行完毕，没有保存过程中的i，这种情况我们也可以使用闭包来做。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> aLi = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">'#box ul li'</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,length = aLi.length; i &lt; length; i++) &#123;</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> x = i;</span><br><span class=\"line\">    aLi[x].onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      alert(x);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这样点击相应的li就会弹出对应的序号。上例可以看出有两个函数，内部函数使用了外部函数的变量x，并且这个x永久的保存下来了，没有被回收。我们可以对js代码进行完善。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> aLi = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">'#box ul li'</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,length = aLi.length; i &lt; length; i++) &#123;</span><br><span class=\"line\">    (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">x</span>) </span>&#123;</span><br><span class=\"line\">      aLi[x].onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        alert(x);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;)(i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>闭包的写法，看起来更加简洁。</p>\n<p>下面来看几道例题：</p>\n<p>1.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++) &#123;</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(i);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>弹出4个4，因为<code>for</code>循环是一瞬间执行，如果想要得到0,1,2,3可以使用闭包来做。</p>\n<p>2.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">\"window\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    name : <span class=\"string\">\"local\"</span>,</span><br><span class=\"line\">    fn : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">alert(obj.fn()());</span><br></pre></td></tr></table></figure>\n\n<p>弹出<code>window</code>，因为这个<code>this</code>是指向<code>window</code>的，所以<code>this.name = “window”</code>(因为匿名函数执行环境是全局)。</p>\n<p>3.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"keyword\">var</span> name = <span class=\"string\">\"Window\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">    name : <span class=\"string\">\"local\"</span>,</span><br><span class=\"line\">      fn : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> that.name;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">alert(obj.fn()());</span><br></pre></td></tr></table></figure>\n\n<p>弹出<code>local</code>,使用了闭包，<code>that</code>指向的是<code>obj</code>。</p>\n<p>4.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> name = <span class=\"string\">\"window\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  name : <span class=\"string\">\"local\"</span>,</span><br><span class=\"line\">    fn : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\">alert(obj.fn());</span><br><span class=\"line\">alert((obj.fn)());</span><br><span class=\"line\">alert((obj.fn = obj.fn)());</span><br></pre></td></tr></table></figure>\n\n<p>把例3里面的代码稍微改一些，得到不同的结果。</p>\n<p><code>(obj.fn())===&gt;fn</code>里面的<code>this</code>指向的就是<code>fn</code>，所以<code>this.name=“local”</code>，弹出<code>local</code>。</p>\n<p><code>((obj.fn)</code>与<code>obj.fn</code>相同，所以还是<code>local</code>。</p>\n<p><code>(obj.fn = obj.fn)()</code>，把<code>obj.fn</code>赋值给<code>obj.fn</code>，不是引用，所以<code>this</code>指向不是<code>fn</code>而是<code>window</code>。弹出<code>window</code>。</p>\n<p>2,3,4例题提醒我们：在闭包使用<code>this</code>应注意的<code>this</code>的指向。</p>\n<p>5.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">    a[i] = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> f = fn();</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i &lt; f.length; i++)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(f[i]());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>我们来分析一下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = [];  <span class=\"comment\">//新建数组</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)&#123;</span><br><span class=\"line\">    a[i] = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> i;  <span class=\"comment\">//往数组里面添加i</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a;  <span class=\"comment\">//执行fn结果是返回数组a</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> f = fn();  <span class=\"comment\">//f = a</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i &lt; f.length; i++)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(f[i]);  <span class=\"comment\">//打印数组f,里面为function()&#123; return i;&#125;</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(f[i]());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>f内存放着10个函数<code>function(){return i}</code>;  <code>fn[i]()</code>结果是返回10个10。</p>\n"},{"title":"作用域相关知识","comments":1,"description":"执行环境是JavaScript中很重要的概念，定义了变量或者函数可以访问其他数据，每一个执行环境，都有一个关联的变量对象，其内定义的所有变量和函数都保存在这个对象内","date":"2016-10-10T10:35:50.000Z","keywords":"作用域相关知识","_content":"\n## 执行环境及作用域\n\n执行环境是`JavaScript`中很重要的概念，定义了变量或者函数可以访问其他数据，每一个执行环境，都有一个关联的变量对象，其内定义的所有变量和函数都保存在这个对象内。\n\n全局执行环境是最外围的执行环境。每个函数都有自己的执行环境。当代码在某一个环境中执行时，会创建变量对象的一个作用域链，这个作用域链的用途，保证对执行对象有权利访问所有的变量和函数的有序访问。作用域链中的下一个变量对象来自来自其包含环境，在下一个对象则来自下一个包含环境，直到全局执行环境。（这也就是子作用域可以访问父作用域的参数和变量，反之不行）\n\n## JavaScript的解析顺序\n\n（定义）先解析`var`、`function`参数；\n该步骤的`var`只定义当前某个变量，后面的= 赋值不解析\n该步骤的函数只定义函数，函数的执行不解析\n重名只留后面的一个，`var`和函数重名函数优先\n（执行）再从上至下执行其他代码，每个作用域要访问变量时，先从自身找，找不到再往上一级找。\n示例：\n\n```js\nalert( a );\nfunction a() {\n  alert(a);\n}\nvar a = 520;\nalert( a );\na();\n```\n\n解析顺序：\n\n先找`var ====> a`;\n```js\nfunction a(){\n  alert(1);\n};\n```\n\n从上往下执行：\n\n```js\nalert(a);   //undefined（只定义了，但是没有赋值）\na = 520;\nalert(a);   // 520;\na();   //520 （函数a执行，弹出变量a）；\n```\n\n以后在做解析顺序方面的问题可以按照这个顺序来解析！\n\n当然凡事都有例外：\n\n```js\nvar a = function () {  // 函数表达式\n         alert( 1 )；\n };\nfunction a() {  // 函数声明\n        alert( 2 )；\n}；\na();  //1;\n```\n\n这里得到的结果是弹出1；因为解析器在执行环境中对函数声明与函数表达式并不是一视同仁，解析器会先读取函数声明，并使其在执行任何代码之前可以访问，相当于把函数声明放到源代码的顶部，后面的函数表达式覆盖了函数声明。\n\n## 函数声明与函数表达式的区别\n\n```js\nfunction a(){\n  function b() {\n    return 1;\n  }；\n  return b();\n  function b() {\n    return 2;\n  }；\n}；\nalert(a());   //2\n```\n\n这里咱们来进行解析：\n\n解析顺序：\n\n1. 先找`var ====>`没有\n\n   找：`function a(){}`；\n\n2. 从上往下执行：\n\n`alert(a);  ===> a()====>function b(){}`；\n\n`return b()`;  函数内有两个同名的函数，后面的覆盖前面的,执行后面的函数声                                                 明，因为有`return`所以不执行后面的代码，弹出2。\n\n下面来看几个例子：\n\n```js\nfunction a(){\n  var b = function() {\n    return 3;\n  };\n  return b();\n  var b = function() {\n    return 8;\n  };\n}\nalert(a());    //3\n```\n\n答案是3；\n\n解析顺序：\n\n1. 先找`var ====>`没有\n\n   找：`function a(){}`；\n\n2. 从上往下执行：\n\n`alert(a);  ===> a()====>1`.找`var ===>var b = undefined`;           `var b = undefined` 第一个变量b引用函数`function() {  return 3;  }`;`return b() ===> return 3`;===>弹出3；\n\n```js\nfunction a(){\n  return b();\n  var b = function() {\n    return 3;\n  };\n  var b = function() {\n    return 8;\n  };\n}\nalert(a());    //报错：Uncaught TypeError: b is not a function\n```\n\n解析顺序：\n\n1. 先找`var ====>`没有\n\n   找：`function a(){}`；\n\n2. 从上往下执行：\n\n`alert(a);  ===> a();====>1`.找`var ===>var b = undefined`;`var b = undefined`;`return b() ===> b为undefined`，不是函数;===>报错；\n\n使用函数声明应该注意的事项：\n\n```js\n function a() {\n  if(0) {\n    function x() { alert(1); }；\n  }\n  return x;\n }\nalert(a());\n```\n\n在`chorme`，`firefox`，以及`IE`中`edge`都是弹出`undefined`；在我的电脑上只有最高`IE10`，随意在`IE10`及以下都是弹出： `function x() { alert(1); }` 。\n\n## JavaScript没有块级作用域\n\n任何一对花括号｛｝中的语句集都属于一个块，在这之中定义的所有变量在代码块外都是不可见的，我们称之为块级作用域。在`C`,`C++`,`Java`中在{}内的语句执行完后会被销毁，但是在`JavaScript`中，则是不一样。\n\n```js\nif (1){\n  var a = 1;\n}\nalert(a);\n```\n\n在`JavaScript`中`if`语句中的变量a会被添加到当前的执行环境，并没有被销毁。\n\n在`for`语句也是一样：\n\n```js\nfor (var i = 0; i < 6; i++) {\n  var a = i;\n}\nalert(a);\n```\n\n注意的是：\n\n```js\nfunction a () {\n  var b = 1;\n}\nalert(window.b);\n```\n\n为了避免报错使用`alert（window.b）`；因为如果`function (){}`不是块级的话，b也相当于全局变量，但事实是`JavaScript`中`function (){}`是可以开辟作用域的，所以这个是因为外部环境不能使用内部的变量（不能由外到内）。\n怎么可以使`if`语句及`for`语句形成一个块级作用域呢？\n\n### 第一种方法\n\n我们可以在语句外包裹一个`function（）{}`,这样就可以解决这个问题。\n\n```js\nfunction a() {\n  for (var i = 0; i < 6; i++) {\n    var b = i;\n  }\n}\nalert(i);\n```\n\n这里`alert（window.i）`弹出`undefined`。\n\n### 第二种方法\n\n使用`ES6`中的`let`\n\n```js\nfor (let i = 0; i < 6; i++) {\n  var b = i;\n }\nalert(window.b);\n```\n\n弹出`undefined`；\n\n## ES6中的let与var的区别\n\n`let`命令与`var`还是有很大的区别的。\n\n### 没有预解析。\n\n```js\nalert(a);   //undefined,没有报错\nvar a = 1;\nalert(b);   //报错\nlet b = 2;\nalert(b);  //2\n```\n\n可以得出：`var`有预解析，而`let`没有预解析，只能在`let`定义后才能使用。\n\n### 作用域的不同\n用`let`定义的变量的作用域是一个块级`{}`。\n\n```js\n{\n  let a = 1;\n  alert(a);   //1；\n}\n{\n  let a = 1;\n}\nalert(a);  //报错\n```\n\n得知：`let`定义的变量只在`let`所在的代码块内有效。\n\n`let`很适合用在`for`循环内。\n\n```html\n<div id=\"box\">\n  <ul>\n    <li>1</li>\n    <li>2</li>\n    <li>3</li>\n    <li>4</li>\n    <li>5</li>\n  </ul>\n</div>\n```\n\n```js\nlet li = document.querySelectorAll('#box ul li');\nfor (var i = 0; i < li.length; i++) {\n       li[i].i = i;\n       li[i].onclick = function () {\n             alert(i); //点击任意一个li弹出的都是5。\n       }\n};\nlet li = document.querySelectorAll('#box ul li');\nfor (let i = 0; i < li.length; i++) {\n       li[i].i = i;\n       li[i].onclick = function () {\n            alert(i); //弹出i；。\n      }\n}\n```\n\n把`var`改成了`let`，在`for`内保存了每一个i，不会像`var`那样。\n\n### 暂时性死区\n\n```js\nvar a = 1;\nif (1){\n  let a = 5;\n  alert(5);\n}\n```\n\n在一个块级中使用`let`声明变量，这个变量不会受到块级之外的变量影响。\n\n## 不能再同一个块级作用域中，同时重复定义同一个变量。\n\n```js\nfunction () {\n  var b = 1;\n  let b = 2;\n}\nfunction () {\n  let b = 1;\n  let b = 2;\n}\n```\n\n上面两个这样会报错，前一个函数原因：b重复声明（`Identifier 'b' has already been declared`），后者原因：`Unexpected token (`。\n给函数加上函数名两个就都不会报错。\n\n```js\nfunction a() {\n  let b = 1;\n  let b = 2;\n}\n```\n\n本来只是想写关于作用域的文章，写着写着就发现，涉及的知识点越来越多。只好写到这里了。\n\n本文参考了`JavaScript`高级程序设计第三版\n\n阮一峰大神写的ES6入门: http://es6.ruanyifeng.com/\n","source":"_posts/js-10.md","raw":"---\ntitle: 作用域相关知识\ncomments: true\ndescription: 执行环境是JavaScript中很重要的概念，定义了变量或者函数可以访问其他数据，每一个执行环境，都有一个关联的变量对象，其内定义的所有变量和函数都保存在这个对象内\ntags: \"js\"\ndate: 2016-10-10 18:35:50\ncategories: \"js\"\nkeywords: 作用域相关知识\n---\n\n## 执行环境及作用域\n\n执行环境是`JavaScript`中很重要的概念，定义了变量或者函数可以访问其他数据，每一个执行环境，都有一个关联的变量对象，其内定义的所有变量和函数都保存在这个对象内。\n\n全局执行环境是最外围的执行环境。每个函数都有自己的执行环境。当代码在某一个环境中执行时，会创建变量对象的一个作用域链，这个作用域链的用途，保证对执行对象有权利访问所有的变量和函数的有序访问。作用域链中的下一个变量对象来自来自其包含环境，在下一个对象则来自下一个包含环境，直到全局执行环境。（这也就是子作用域可以访问父作用域的参数和变量，反之不行）\n\n## JavaScript的解析顺序\n\n（定义）先解析`var`、`function`参数；\n该步骤的`var`只定义当前某个变量，后面的= 赋值不解析\n该步骤的函数只定义函数，函数的执行不解析\n重名只留后面的一个，`var`和函数重名函数优先\n（执行）再从上至下执行其他代码，每个作用域要访问变量时，先从自身找，找不到再往上一级找。\n示例：\n\n```js\nalert( a );\nfunction a() {\n  alert(a);\n}\nvar a = 520;\nalert( a );\na();\n```\n\n解析顺序：\n\n先找`var ====> a`;\n```js\nfunction a(){\n  alert(1);\n};\n```\n\n从上往下执行：\n\n```js\nalert(a);   //undefined（只定义了，但是没有赋值）\na = 520;\nalert(a);   // 520;\na();   //520 （函数a执行，弹出变量a）；\n```\n\n以后在做解析顺序方面的问题可以按照这个顺序来解析！\n\n当然凡事都有例外：\n\n```js\nvar a = function () {  // 函数表达式\n         alert( 1 )；\n };\nfunction a() {  // 函数声明\n        alert( 2 )；\n}；\na();  //1;\n```\n\n这里得到的结果是弹出1；因为解析器在执行环境中对函数声明与函数表达式并不是一视同仁，解析器会先读取函数声明，并使其在执行任何代码之前可以访问，相当于把函数声明放到源代码的顶部，后面的函数表达式覆盖了函数声明。\n\n## 函数声明与函数表达式的区别\n\n```js\nfunction a(){\n  function b() {\n    return 1;\n  }；\n  return b();\n  function b() {\n    return 2;\n  }；\n}；\nalert(a());   //2\n```\n\n这里咱们来进行解析：\n\n解析顺序：\n\n1. 先找`var ====>`没有\n\n   找：`function a(){}`；\n\n2. 从上往下执行：\n\n`alert(a);  ===> a()====>function b(){}`；\n\n`return b()`;  函数内有两个同名的函数，后面的覆盖前面的,执行后面的函数声                                                 明，因为有`return`所以不执行后面的代码，弹出2。\n\n下面来看几个例子：\n\n```js\nfunction a(){\n  var b = function() {\n    return 3;\n  };\n  return b();\n  var b = function() {\n    return 8;\n  };\n}\nalert(a());    //3\n```\n\n答案是3；\n\n解析顺序：\n\n1. 先找`var ====>`没有\n\n   找：`function a(){}`；\n\n2. 从上往下执行：\n\n`alert(a);  ===> a()====>1`.找`var ===>var b = undefined`;           `var b = undefined` 第一个变量b引用函数`function() {  return 3;  }`;`return b() ===> return 3`;===>弹出3；\n\n```js\nfunction a(){\n  return b();\n  var b = function() {\n    return 3;\n  };\n  var b = function() {\n    return 8;\n  };\n}\nalert(a());    //报错：Uncaught TypeError: b is not a function\n```\n\n解析顺序：\n\n1. 先找`var ====>`没有\n\n   找：`function a(){}`；\n\n2. 从上往下执行：\n\n`alert(a);  ===> a();====>1`.找`var ===>var b = undefined`;`var b = undefined`;`return b() ===> b为undefined`，不是函数;===>报错；\n\n使用函数声明应该注意的事项：\n\n```js\n function a() {\n  if(0) {\n    function x() { alert(1); }；\n  }\n  return x;\n }\nalert(a());\n```\n\n在`chorme`，`firefox`，以及`IE`中`edge`都是弹出`undefined`；在我的电脑上只有最高`IE10`，随意在`IE10`及以下都是弹出： `function x() { alert(1); }` 。\n\n## JavaScript没有块级作用域\n\n任何一对花括号｛｝中的语句集都属于一个块，在这之中定义的所有变量在代码块外都是不可见的，我们称之为块级作用域。在`C`,`C++`,`Java`中在{}内的语句执行完后会被销毁，但是在`JavaScript`中，则是不一样。\n\n```js\nif (1){\n  var a = 1;\n}\nalert(a);\n```\n\n在`JavaScript`中`if`语句中的变量a会被添加到当前的执行环境，并没有被销毁。\n\n在`for`语句也是一样：\n\n```js\nfor (var i = 0; i < 6; i++) {\n  var a = i;\n}\nalert(a);\n```\n\n注意的是：\n\n```js\nfunction a () {\n  var b = 1;\n}\nalert(window.b);\n```\n\n为了避免报错使用`alert（window.b）`；因为如果`function (){}`不是块级的话，b也相当于全局变量，但事实是`JavaScript`中`function (){}`是可以开辟作用域的，所以这个是因为外部环境不能使用内部的变量（不能由外到内）。\n怎么可以使`if`语句及`for`语句形成一个块级作用域呢？\n\n### 第一种方法\n\n我们可以在语句外包裹一个`function（）{}`,这样就可以解决这个问题。\n\n```js\nfunction a() {\n  for (var i = 0; i < 6; i++) {\n    var b = i;\n  }\n}\nalert(i);\n```\n\n这里`alert（window.i）`弹出`undefined`。\n\n### 第二种方法\n\n使用`ES6`中的`let`\n\n```js\nfor (let i = 0; i < 6; i++) {\n  var b = i;\n }\nalert(window.b);\n```\n\n弹出`undefined`；\n\n## ES6中的let与var的区别\n\n`let`命令与`var`还是有很大的区别的。\n\n### 没有预解析。\n\n```js\nalert(a);   //undefined,没有报错\nvar a = 1;\nalert(b);   //报错\nlet b = 2;\nalert(b);  //2\n```\n\n可以得出：`var`有预解析，而`let`没有预解析，只能在`let`定义后才能使用。\n\n### 作用域的不同\n用`let`定义的变量的作用域是一个块级`{}`。\n\n```js\n{\n  let a = 1;\n  alert(a);   //1；\n}\n{\n  let a = 1;\n}\nalert(a);  //报错\n```\n\n得知：`let`定义的变量只在`let`所在的代码块内有效。\n\n`let`很适合用在`for`循环内。\n\n```html\n<div id=\"box\">\n  <ul>\n    <li>1</li>\n    <li>2</li>\n    <li>3</li>\n    <li>4</li>\n    <li>5</li>\n  </ul>\n</div>\n```\n\n```js\nlet li = document.querySelectorAll('#box ul li');\nfor (var i = 0; i < li.length; i++) {\n       li[i].i = i;\n       li[i].onclick = function () {\n             alert(i); //点击任意一个li弹出的都是5。\n       }\n};\nlet li = document.querySelectorAll('#box ul li');\nfor (let i = 0; i < li.length; i++) {\n       li[i].i = i;\n       li[i].onclick = function () {\n            alert(i); //弹出i；。\n      }\n}\n```\n\n把`var`改成了`let`，在`for`内保存了每一个i，不会像`var`那样。\n\n### 暂时性死区\n\n```js\nvar a = 1;\nif (1){\n  let a = 5;\n  alert(5);\n}\n```\n\n在一个块级中使用`let`声明变量，这个变量不会受到块级之外的变量影响。\n\n## 不能再同一个块级作用域中，同时重复定义同一个变量。\n\n```js\nfunction () {\n  var b = 1;\n  let b = 2;\n}\nfunction () {\n  let b = 1;\n  let b = 2;\n}\n```\n\n上面两个这样会报错，前一个函数原因：b重复声明（`Identifier 'b' has already been declared`），后者原因：`Unexpected token (`。\n给函数加上函数名两个就都不会报错。\n\n```js\nfunction a() {\n  let b = 1;\n  let b = 2;\n}\n```\n\n本来只是想写关于作用域的文章，写着写着就发现，涉及的知识点越来越多。只好写到这里了。\n\n本文参考了`JavaScript`高级程序设计第三版\n\n阮一峰大神写的ES6入门: http://es6.ruanyifeng.com/\n","slug":"js-10","published":1,"updated":"2019-09-19T01:24:30.394Z","layout":"post","photos":[],"link":"","_id":"ck1p3g29v000qn0b9q78tad7q","content":"<h2 id=\"执行环境及作用域\"><a href=\"#执行环境及作用域\" class=\"headerlink\" title=\"执行环境及作用域\"></a>执行环境及作用域</h2><p>执行环境是<code>JavaScript</code>中很重要的概念，定义了变量或者函数可以访问其他数据，每一个执行环境，都有一个关联的变量对象，其内定义的所有变量和函数都保存在这个对象内。</p>\n<p>全局执行环境是最外围的执行环境。每个函数都有自己的执行环境。当代码在某一个环境中执行时，会创建变量对象的一个作用域链，这个作用域链的用途，保证对执行对象有权利访问所有的变量和函数的有序访问。作用域链中的下一个变量对象来自来自其包含环境，在下一个对象则来自下一个包含环境，直到全局执行环境。（这也就是子作用域可以访问父作用域的参数和变量，反之不行）</p>\n<h2 id=\"JavaScript的解析顺序\"><a href=\"#JavaScript的解析顺序\" class=\"headerlink\" title=\"JavaScript的解析顺序\"></a>JavaScript的解析顺序</h2><p>（定义）先解析<code>var</code>、<code>function</code>参数；<br>该步骤的<code>var</code>只定义当前某个变量，后面的= 赋值不解析<br>该步骤的函数只定义函数，函数的执行不解析<br>重名只留后面的一个，<code>var</code>和函数重名函数优先<br>（执行）再从上至下执行其他代码，每个作用域要访问变量时，先从自身找，找不到再往上一级找。<br>示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert( a );</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">520</span>;</span><br><span class=\"line\">alert( a );</span><br><span class=\"line\">a();</span><br></pre></td></tr></table></figure>\n\n<p>解析顺序：</p>\n<p>先找<code>var ====&gt; a</code>;</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  alert(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>从上往下执行：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert(a);   <span class=\"comment\">//undefined（只定义了，但是没有赋值）</span></span><br><span class=\"line\">a = <span class=\"number\">520</span>;</span><br><span class=\"line\">alert(a);   <span class=\"comment\">// 520;</span></span><br><span class=\"line\">a();   <span class=\"comment\">//520 （函数a执行，弹出变量a）；</span></span><br></pre></td></tr></table></figure>\n\n<p>以后在做解析顺序方面的问题可以按照这个顺序来解析！</p>\n<p>当然凡事都有例外：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;  <span class=\"comment\">// 函数表达式</span></span><br><span class=\"line\">         alert( <span class=\"number\">1</span> )；</span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;  <span class=\"comment\">// 函数声明</span></span><br><span class=\"line\">        alert( <span class=\"number\">2</span> )；</span><br><span class=\"line\">&#125;；</span><br><span class=\"line\">a();  <span class=\"comment\">//1;</span></span><br></pre></td></tr></table></figure>\n\n<p>这里得到的结果是弹出1；因为解析器在执行环境中对函数声明与函数表达式并不是一视同仁，解析器会先读取函数声明，并使其在执行任何代码之前可以访问，相当于把函数声明放到源代码的顶部，后面的函数表达式覆盖了函数声明。</p>\n<h2 id=\"函数声明与函数表达式的区别\"><a href=\"#函数声明与函数表达式的区别\" class=\"headerlink\" title=\"函数声明与函数表达式的区别\"></a>函数声明与函数表达式的区别</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">b</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;；</span><br><span class=\"line\">  <span class=\"keyword\">return</span> b();</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">b</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">  &#125;；</span><br><span class=\"line\">&#125;；</span><br><span class=\"line\">alert(a());   <span class=\"comment\">//2</span></span><br></pre></td></tr></table></figure>\n\n<p>这里咱们来进行解析：</p>\n<p>解析顺序：</p>\n<ol>\n<li><p>先找<code>var ====&gt;</code>没有</p>\n<p>找：<code>function a(){}</code>；</p>\n</li>\n<li><p>从上往下执行：</p>\n</li>\n</ol>\n<p><code>alert(a);  ===&gt; a()====&gt;function b(){}</code>；</p>\n<p><code>return b()</code>;  函数内有两个同名的函数，后面的覆盖前面的,执行后面的函数声                                                 明，因为有<code>return</code>所以不执行后面的代码，弹出2。</p>\n<p>下面来看几个例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> b();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">8</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alert(a());    <span class=\"comment\">//3</span></span><br></pre></td></tr></table></figure>\n\n<p>答案是3；</p>\n<p>解析顺序：</p>\n<ol>\n<li><p>先找<code>var ====&gt;</code>没有</p>\n<p>找：<code>function a(){}</code>；</p>\n</li>\n<li><p>从上往下执行：</p>\n</li>\n</ol>\n<p><code>alert(a);  ===&gt; a()====&gt;1</code>.找<code>var ===&gt;var b = undefined</code>;           <code>var b = undefined</code> 第一个变量b引用函数<code>function() {  return 3;  }</code>;<code>return b() ===&gt; return 3</code>;===&gt;弹出3；</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> b();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">8</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alert(a());    <span class=\"comment\">//报错：Uncaught TypeError: b is not a function</span></span><br></pre></td></tr></table></figure>\n\n<p>解析顺序：</p>\n<ol>\n<li><p>先找<code>var ====&gt;</code>没有</p>\n<p>找：<code>function a(){}</code>；</p>\n</li>\n<li><p>从上往下执行：</p>\n</li>\n</ol>\n<p><code>alert(a);  ===&gt; a();====&gt;1</code>.找<code>var ===&gt;var b = undefined</code>;<code>var b = undefined</code>;<code>return b() ===&gt; b为undefined</code>，不是函数;===&gt;报错；</p>\n<p>使用函数声明应该注意的事项：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">x</span>(<span class=\"params\"></span>) </span>&#123; alert(<span class=\"number\">1</span>); &#125;；</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> x;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">alert(a());</span><br></pre></td></tr></table></figure>\n\n<p>在<code>chorme</code>，<code>firefox</code>，以及<code>IE</code>中<code>edge</code>都是弹出<code>undefined</code>；在我的电脑上只有最高<code>IE10</code>，随意在<code>IE10</code>及以下都是弹出： <code>function x() { alert(1); }</code> 。</p>\n<h2 id=\"JavaScript没有块级作用域\"><a href=\"#JavaScript没有块级作用域\" class=\"headerlink\" title=\"JavaScript没有块级作用域\"></a>JavaScript没有块级作用域</h2><p>任何一对花括号｛｝中的语句集都属于一个块，在这之中定义的所有变量在代码块外都是不可见的，我们称之为块级作用域。在<code>C</code>,<code>C++</code>,<code>Java</code>中在{}内的语句执行完后会被销毁，但是在<code>JavaScript</code>中，则是不一样。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alert(a);</span><br></pre></td></tr></table></figure>\n\n<p>在<code>JavaScript</code>中<code>if</code>语句中的变量a会被添加到当前的执行环境，并没有被销毁。</p>\n<p>在<code>for</code>语句也是一样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alert(a);</span><br></pre></td></tr></table></figure>\n\n<p>注意的是：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alert(<span class=\"built_in\">window</span>.b);</span><br></pre></td></tr></table></figure>\n\n<p>为了避免报错使用<code>alert（window.b）</code>；因为如果<code>function (){}</code>不是块级的话，b也相当于全局变量，但事实是<code>JavaScript</code>中<code>function (){}</code>是可以开辟作用域的，所以这个是因为外部环境不能使用内部的变量（不能由外到内）。<br>怎么可以使<code>if</code>语句及<code>for</code>语句形成一个块级作用域呢？</p>\n<h3 id=\"第一种方法\"><a href=\"#第一种方法\" class=\"headerlink\" title=\"第一种方法\"></a>第一种方法</h3><p>我们可以在语句外包裹一个<code>function（）{}</code>,这样就可以解决这个问题。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> b = i;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alert(i);</span><br></pre></td></tr></table></figure>\n\n<p>这里<code>alert（window.i）</code>弹出<code>undefined</code>。</p>\n<h3 id=\"第二种方法\"><a href=\"#第二种方法\" class=\"headerlink\" title=\"第二种方法\"></a>第二种方法</h3><p>使用<code>ES6</code>中的<code>let</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = i;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">alert(<span class=\"built_in\">window</span>.b);</span><br></pre></td></tr></table></figure>\n\n<p>弹出<code>undefined</code>；</p>\n<h2 id=\"ES6中的let与var的区别\"><a href=\"#ES6中的let与var的区别\" class=\"headerlink\" title=\"ES6中的let与var的区别\"></a>ES6中的let与var的区别</h2><p><code>let</code>命令与<code>var</code>还是有很大的区别的。</p>\n<h3 id=\"没有预解析。\"><a href=\"#没有预解析。\" class=\"headerlink\" title=\"没有预解析。\"></a>没有预解析。</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert(a);   <span class=\"comment\">//undefined,没有报错</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">alert(b);   <span class=\"comment\">//报错</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">alert(b);  <span class=\"comment\">//2</span></span><br></pre></td></tr></table></figure>\n\n<p>可以得出：<code>var</code>有预解析，而<code>let</code>没有预解析，只能在<code>let</code>定义后才能使用。</p>\n<h3 id=\"作用域的不同\"><a href=\"#作用域的不同\" class=\"headerlink\" title=\"作用域的不同\"></a>作用域的不同</h3><p>用<code>let</code>定义的变量的作用域是一个块级<code>{}</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">  alert(a);   <span class=\"comment\">//1；</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alert(a);  <span class=\"comment\">//报错</span></span><br></pre></td></tr></table></figure>\n\n<p>得知：<code>let</code>定义的变量只在<code>let</code>所在的代码块内有效。</p>\n<p><code>let</code>很适合用在<code>for</code>循环内。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> li = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'#box ul li'</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; li.length; i++) &#123;</span><br><span class=\"line\">       li[i].i = i;</span><br><span class=\"line\">       li[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">             alert(i); <span class=\"comment\">//点击任意一个li弹出的都是5。</span></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> li = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'#box ul li'</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; li.length; i++) &#123;</span><br><span class=\"line\">       li[i].i = i;</span><br><span class=\"line\">       li[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            alert(i); <span class=\"comment\">//弹出i；。</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>把<code>var</code>改成了<code>let</code>，在<code>for</code>内保存了每一个i，不会像<code>var</code>那样。</p>\n<h3 id=\"暂时性死区\"><a href=\"#暂时性死区\" class=\"headerlink\" title=\"暂时性死区\"></a>暂时性死区</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> a = <span class=\"number\">5</span>;</span><br><span class=\"line\">  alert(<span class=\"number\">5</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在一个块级中使用<code>let</code>声明变量，这个变量不会受到块级之外的变量影响。</p>\n<h2 id=\"不能再同一个块级作用域中，同时重复定义同一个变量。\"><a href=\"#不能再同一个块级作用域中，同时重复定义同一个变量。\" class=\"headerlink\" title=\"不能再同一个块级作用域中，同时重复定义同一个变量。\"></a>不能再同一个块级作用域中，同时重复定义同一个变量。</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上面两个这样会报错，前一个函数原因：b重复声明（<code>Identifier &#39;b&#39; has already been declared</code>），后者原因：<code>Unexpected token (</code>。<br>给函数加上函数名两个就都不会报错。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>本来只是想写关于作用域的文章，写着写着就发现，涉及的知识点越来越多。只好写到这里了。</p>\n<p>本文参考了<code>JavaScript</code>高级程序设计第三版</p>\n<p>阮一峰大神写的ES6入门: <a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener\">http://es6.ruanyifeng.com/</a></p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<h2 id=\"执行环境及作用域\"><a href=\"#执行环境及作用域\" class=\"headerlink\" title=\"执行环境及作用域\"></a>执行环境及作用域</h2><p>执行环境是<code>JavaScript</code>中很重要的概念，定义了变量或者函数可以访问其他数据，每一个执行环境，都有一个关联的变量对象，其内定义的所有变量和函数都保存在这个对象内。</p>\n<p>全局执行环境是最外围的执行环境。每个函数都有自己的执行环境。当代码在某一个环境中执行时，会创建变量对象的一个作用域链，这个作用域链的用途，保证对执行对象有权利访问所有的变量和函数的有序访问。作用域链中的下一个变量对象来自来自其包含环境，在下一个对象则来自下一个包含环境，直到全局执行环境。（这也就是子作用域可以访问父作用域的参数和变量，反之不行）</p>\n<h2 id=\"JavaScript的解析顺序\"><a href=\"#JavaScript的解析顺序\" class=\"headerlink\" title=\"JavaScript的解析顺序\"></a>JavaScript的解析顺序</h2><p>（定义）先解析<code>var</code>、<code>function</code>参数；<br>该步骤的<code>var</code>只定义当前某个变量，后面的= 赋值不解析<br>该步骤的函数只定义函数，函数的执行不解析<br>重名只留后面的一个，<code>var</code>和函数重名函数优先<br>（执行）再从上至下执行其他代码，每个作用域要访问变量时，先从自身找，找不到再往上一级找。<br>示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert( a );</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">520</span>;</span><br><span class=\"line\">alert( a );</span><br><span class=\"line\">a();</span><br></pre></td></tr></table></figure>\n\n<p>解析顺序：</p>\n<p>先找<code>var ====&gt; a</code>;</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  alert(<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>从上往下执行：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert(a);   <span class=\"comment\">//undefined（只定义了，但是没有赋值）</span></span><br><span class=\"line\">a = <span class=\"number\">520</span>;</span><br><span class=\"line\">alert(a);   <span class=\"comment\">// 520;</span></span><br><span class=\"line\">a();   <span class=\"comment\">//520 （函数a执行，弹出变量a）；</span></span><br></pre></td></tr></table></figure>\n\n<p>以后在做解析顺序方面的问题可以按照这个顺序来解析！</p>\n<p>当然凡事都有例外：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;  <span class=\"comment\">// 函数表达式</span></span><br><span class=\"line\">         alert( <span class=\"number\">1</span> )；</span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;  <span class=\"comment\">// 函数声明</span></span><br><span class=\"line\">        alert( <span class=\"number\">2</span> )；</span><br><span class=\"line\">&#125;；</span><br><span class=\"line\">a();  <span class=\"comment\">//1;</span></span><br></pre></td></tr></table></figure>\n\n<p>这里得到的结果是弹出1；因为解析器在执行环境中对函数声明与函数表达式并不是一视同仁，解析器会先读取函数声明，并使其在执行任何代码之前可以访问，相当于把函数声明放到源代码的顶部，后面的函数表达式覆盖了函数声明。</p>\n<h2 id=\"函数声明与函数表达式的区别\"><a href=\"#函数声明与函数表达式的区别\" class=\"headerlink\" title=\"函数声明与函数表达式的区别\"></a>函数声明与函数表达式的区别</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">b</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;；</span><br><span class=\"line\">  <span class=\"keyword\">return</span> b();</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">b</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">2</span>;</span><br><span class=\"line\">  &#125;；</span><br><span class=\"line\">&#125;；</span><br><span class=\"line\">alert(a());   <span class=\"comment\">//2</span></span><br></pre></td></tr></table></figure>\n\n<p>这里咱们来进行解析：</p>\n<p>解析顺序：</p>\n<ol>\n<li><p>先找<code>var ====&gt;</code>没有</p>\n<p>找：<code>function a(){}</code>；</p>\n</li>\n<li><p>从上往下执行：</p>\n</li>\n</ol>\n<p><code>alert(a);  ===&gt; a()====&gt;function b(){}</code>；</p>\n<p><code>return b()</code>;  函数内有两个同名的函数，后面的覆盖前面的,执行后面的函数声                                                 明，因为有<code>return</code>所以不执行后面的代码，弹出2。</p>\n<p>下面来看几个例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> b();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">8</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alert(a());    <span class=\"comment\">//3</span></span><br></pre></td></tr></table></figure>\n\n<p>答案是3；</p>\n<p>解析顺序：</p>\n<ol>\n<li><p>先找<code>var ====&gt;</code>没有</p>\n<p>找：<code>function a(){}</code>；</p>\n</li>\n<li><p>从上往下执行：</p>\n</li>\n</ol>\n<p><code>alert(a);  ===&gt; a()====&gt;1</code>.找<code>var ===&gt;var b = undefined</code>;           <code>var b = undefined</code> 第一个变量b引用函数<code>function() {  return 3;  }</code>;<code>return b() ===&gt; return 3</code>;===&gt;弹出3；</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> b();</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">8</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alert(a());    <span class=\"comment\">//报错：Uncaught TypeError: b is not a function</span></span><br></pre></td></tr></table></figure>\n\n<p>解析顺序：</p>\n<ol>\n<li><p>先找<code>var ====&gt;</code>没有</p>\n<p>找：<code>function a(){}</code>；</p>\n</li>\n<li><p>从上往下执行：</p>\n</li>\n</ol>\n<p><code>alert(a);  ===&gt; a();====&gt;1</code>.找<code>var ===&gt;var b = undefined</code>;<code>var b = undefined</code>;<code>return b() ===&gt; b为undefined</code>，不是函数;===&gt;报错；</p>\n<p>使用函数声明应该注意的事项：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">x</span>(<span class=\"params\"></span>) </span>&#123; alert(<span class=\"number\">1</span>); &#125;；</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> x;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">alert(a());</span><br></pre></td></tr></table></figure>\n\n<p>在<code>chorme</code>，<code>firefox</code>，以及<code>IE</code>中<code>edge</code>都是弹出<code>undefined</code>；在我的电脑上只有最高<code>IE10</code>，随意在<code>IE10</code>及以下都是弹出： <code>function x() { alert(1); }</code> 。</p>\n<h2 id=\"JavaScript没有块级作用域\"><a href=\"#JavaScript没有块级作用域\" class=\"headerlink\" title=\"JavaScript没有块级作用域\"></a>JavaScript没有块级作用域</h2><p>任何一对花括号｛｝中的语句集都属于一个块，在这之中定义的所有变量在代码块外都是不可见的，我们称之为块级作用域。在<code>C</code>,<code>C++</code>,<code>Java</code>中在{}内的语句执行完后会被销毁，但是在<code>JavaScript</code>中，则是不一样。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alert(a);</span><br></pre></td></tr></table></figure>\n\n<p>在<code>JavaScript</code>中<code>if</code>语句中的变量a会被添加到当前的执行环境，并没有被销毁。</p>\n<p>在<code>for</code>语句也是一样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alert(a);</span><br></pre></td></tr></table></figure>\n\n<p>注意的是：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alert(<span class=\"built_in\">window</span>.b);</span><br></pre></td></tr></table></figure>\n\n<p>为了避免报错使用<code>alert（window.b）</code>；因为如果<code>function (){}</code>不是块级的话，b也相当于全局变量，但事实是<code>JavaScript</code>中<code>function (){}</code>是可以开辟作用域的，所以这个是因为外部环境不能使用内部的变量（不能由外到内）。<br>怎么可以使<code>if</code>语句及<code>for</code>语句形成一个块级作用域呢？</p>\n<h3 id=\"第一种方法\"><a href=\"#第一种方法\" class=\"headerlink\" title=\"第一种方法\"></a>第一种方法</h3><p>我们可以在语句外包裹一个<code>function（）{}</code>,这样就可以解决这个问题。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> b = i;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alert(i);</span><br></pre></td></tr></table></figure>\n\n<p>这里<code>alert（window.i）</code>弹出<code>undefined</code>。</p>\n<h3 id=\"第二种方法\"><a href=\"#第二种方法\" class=\"headerlink\" title=\"第二种方法\"></a>第二种方法</h3><p>使用<code>ES6</code>中的<code>let</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = i;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">alert(<span class=\"built_in\">window</span>.b);</span><br></pre></td></tr></table></figure>\n\n<p>弹出<code>undefined</code>；</p>\n<h2 id=\"ES6中的let与var的区别\"><a href=\"#ES6中的let与var的区别\" class=\"headerlink\" title=\"ES6中的let与var的区别\"></a>ES6中的let与var的区别</h2><p><code>let</code>命令与<code>var</code>还是有很大的区别的。</p>\n<h3 id=\"没有预解析。\"><a href=\"#没有预解析。\" class=\"headerlink\" title=\"没有预解析。\"></a>没有预解析。</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert(a);   <span class=\"comment\">//undefined,没有报错</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">alert(b);   <span class=\"comment\">//报错</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">alert(b);  <span class=\"comment\">//2</span></span><br></pre></td></tr></table></figure>\n\n<p>可以得出：<code>var</code>有预解析，而<code>let</code>没有预解析，只能在<code>let</code>定义后才能使用。</p>\n<h3 id=\"作用域的不同\"><a href=\"#作用域的不同\" class=\"headerlink\" title=\"作用域的不同\"></a>作用域的不同</h3><p>用<code>let</code>定义的变量的作用域是一个块级<code>{}</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">  alert(a);   <span class=\"comment\">//1；</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">alert(a);  <span class=\"comment\">//报错</span></span><br></pre></td></tr></table></figure>\n\n<p>得知：<code>let</code>定义的变量只在<code>let</code>所在的代码块内有效。</p>\n<p><code>let</code>很适合用在<code>for</code>循环内。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>5<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> li = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'#box ul li'</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; li.length; i++) &#123;</span><br><span class=\"line\">       li[i].i = i;</span><br><span class=\"line\">       li[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">             alert(i); <span class=\"comment\">//点击任意一个li弹出的都是5。</span></span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">let</span> li = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">'#box ul li'</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; li.length; i++) &#123;</span><br><span class=\"line\">       li[i].i = i;</span><br><span class=\"line\">       li[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            alert(i); <span class=\"comment\">//弹出i；。</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>把<code>var</code>改成了<code>let</code>，在<code>for</code>内保存了每一个i，不会像<code>var</code>那样。</p>\n<h3 id=\"暂时性死区\"><a href=\"#暂时性死区\" class=\"headerlink\" title=\"暂时性死区\"></a>暂时性死区</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> a = <span class=\"number\">5</span>;</span><br><span class=\"line\">  alert(<span class=\"number\">5</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在一个块级中使用<code>let</code>声明变量，这个变量不会受到块级之外的变量影响。</p>\n<h2 id=\"不能再同一个块级作用域中，同时重复定义同一个变量。\"><a href=\"#不能再同一个块级作用域中，同时重复定义同一个变量。\" class=\"headerlink\" title=\"不能再同一个块级作用域中，同时重复定义同一个变量。\"></a>不能再同一个块级作用域中，同时重复定义同一个变量。</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上面两个这样会报错，前一个函数原因：b重复声明（<code>Identifier &#39;b&#39; has already been declared</code>），后者原因：<code>Unexpected token (</code>。<br>给函数加上函数名两个就都不会报错。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> b = <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>本来只是想写关于作用域的文章，写着写着就发现，涉及的知识点越来越多。只好写到这里了。</p>\n<p>本文参考了<code>JavaScript</code>高级程序设计第三版</p>\n<p>阮一峰大神写的ES6入门: <a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener\">http://es6.ruanyifeng.com/</a></p>\n"},{"title":"移动端浏览器的判别","comments":1,"description":"移动端浏览器的判别","date":"2016-10-22T02:29:10.000Z","keywords":"移动端浏览器的判别","_content":"\n在做移动端的网页的时候，兼容手机上不同的浏览器也是一个痛苦的事情。\n\n我们可以现在`script`部分打印出`console.log(navigator）`：\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/5_NWLPB1_HT_68TX4WB5.png)\n\n可以根据这个`navigator`来判断是否移动端以及是哪个浏览器。\n\n```js\nvar u = navigator.userAgent, app = navigator.appVersion;\nreturn {//移动终端浏览器版本信息  \n         trident: u.indexOf('Trident') > -1, //IE内核  \n         presto: u.indexOf('Presto') > -1, //opera内核  \n         webKit: u.indexOf('AppleWebKit') > -1, //苹果、谷歌内核  \n         gecko: u.indexOf('Gecko') > -1 && u.indexOf('KHTML') == -1, //火狐内核  \n         mobile: !!u.match(/AppleWebKit.*Mobile.*/)||!!u.match(/AppleWebKit/), //是否为移动终端  \n         ios: !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/), //ios终端  \n         android: u.indexOf('Android') > -1 || u.indexOf('Linux') > -1, //android终端或者uc浏览器  \n         iPhone: u.indexOf('iPhone') > -1 || u.indexOf('Mac') > -1, //是否为iPhone或者QQHD浏览器  \n         iPad: u.indexOf('iPad') > -1, //是否iPad  \n         webApp: u.indexOf('Safari') == -1 //是否web应该程序，没有头部与底部  \n };\n```\n比如：如果我在`ios`系统，`uc`浏览器内表现得和其他系统或者浏览器不同，我们可以根据上面的单独对`ios`系统的`uc`浏览器处理。\n\n```js\nvar browser = !!navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/)&&navigator.userAgent.indexOf('UCBrowser') > -1\n```\n如果`browser`为true，那就是`ios`系统下的`uc`浏览器。单独有一套代码来消除特定的`bug`。\n\n\n\n\n","source":"_posts/js-12.md","raw":"---\ntitle: 移动端浏览器的判别\ncomments: true\ndescription: 移动端浏览器的判别\ntags: \"js\"\ndate: 2016-10-22 10:29:10\ncategories: \"js\"\nkeywords: 移动端浏览器的判别\n---\n\n在做移动端的网页的时候，兼容手机上不同的浏览器也是一个痛苦的事情。\n\n我们可以现在`script`部分打印出`console.log(navigator）`：\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/5_NWLPB1_HT_68TX4WB5.png)\n\n可以根据这个`navigator`来判断是否移动端以及是哪个浏览器。\n\n```js\nvar u = navigator.userAgent, app = navigator.appVersion;\nreturn {//移动终端浏览器版本信息  \n         trident: u.indexOf('Trident') > -1, //IE内核  \n         presto: u.indexOf('Presto') > -1, //opera内核  \n         webKit: u.indexOf('AppleWebKit') > -1, //苹果、谷歌内核  \n         gecko: u.indexOf('Gecko') > -1 && u.indexOf('KHTML') == -1, //火狐内核  \n         mobile: !!u.match(/AppleWebKit.*Mobile.*/)||!!u.match(/AppleWebKit/), //是否为移动终端  \n         ios: !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/), //ios终端  \n         android: u.indexOf('Android') > -1 || u.indexOf('Linux') > -1, //android终端或者uc浏览器  \n         iPhone: u.indexOf('iPhone') > -1 || u.indexOf('Mac') > -1, //是否为iPhone或者QQHD浏览器  \n         iPad: u.indexOf('iPad') > -1, //是否iPad  \n         webApp: u.indexOf('Safari') == -1 //是否web应该程序，没有头部与底部  \n };\n```\n比如：如果我在`ios`系统，`uc`浏览器内表现得和其他系统或者浏览器不同，我们可以根据上面的单独对`ios`系统的`uc`浏览器处理。\n\n```js\nvar browser = !!navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/)&&navigator.userAgent.indexOf('UCBrowser') > -1\n```\n如果`browser`为true，那就是`ios`系统下的`uc`浏览器。单独有一套代码来消除特定的`bug`。\n\n\n\n\n","slug":"js-12","published":1,"updated":"2019-09-20T01:08:24.785Z","layout":"post","photos":[],"link":"","_id":"ck1p3g29x000sn0b9zndiagyb","content":"<p>在做移动端的网页的时候，兼容手机上不同的浏览器也是一个痛苦的事情。</p>\n<p>我们可以现在<code>script</code>部分打印出<code>console.log(navigator）</code>：</p>\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/5_NWLPB1_HT_68TX4WB5.png\" class=\"lozad\"></p>\n<p>可以根据这个<code>navigator</code>来判断是否移动端以及是哪个浏览器。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> u = navigator.userAgent, app = navigator.appVersion;</span><br><span class=\"line\"><span class=\"keyword\">return</span> &#123;<span class=\"comment\">//移动终端浏览器版本信息  </span></span><br><span class=\"line\">         trident: u.indexOf(<span class=\"string\">'Trident'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//IE内核  </span></span><br><span class=\"line\">         presto: u.indexOf(<span class=\"string\">'Presto'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//opera内核  </span></span><br><span class=\"line\">         webKit: u.indexOf(<span class=\"string\">'AppleWebKit'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//苹果、谷歌内核  </span></span><br><span class=\"line\">         gecko: u.indexOf(<span class=\"string\">'Gecko'</span>) &gt; <span class=\"number\">-1</span> &amp;&amp; u.indexOf(<span class=\"string\">'KHTML'</span>) == <span class=\"number\">-1</span>, <span class=\"comment\">//火狐内核  </span></span><br><span class=\"line\">         mobile: !!u.match(<span class=\"regexp\">/AppleWebKit.*Mobile.*/</span>)||!!u.match(<span class=\"regexp\">/AppleWebKit/</span>), <span class=\"comment\">//是否为移动终端  </span></span><br><span class=\"line\">         ios: !!u.match(<span class=\"regexp\">/\\(i[^;]+;( U;)? CPU.+Mac OS X/</span>), <span class=\"comment\">//ios终端  </span></span><br><span class=\"line\">         android: u.indexOf(<span class=\"string\">'Android'</span>) &gt; <span class=\"number\">-1</span> || u.indexOf(<span class=\"string\">'Linux'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//android终端或者uc浏览器  </span></span><br><span class=\"line\">         iPhone: u.indexOf(<span class=\"string\">'iPhone'</span>) &gt; <span class=\"number\">-1</span> || u.indexOf(<span class=\"string\">'Mac'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//是否为iPhone或者QQHD浏览器  </span></span><br><span class=\"line\">         iPad: u.indexOf(<span class=\"string\">'iPad'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//是否iPad  </span></span><br><span class=\"line\">         webApp: u.indexOf(<span class=\"string\">'Safari'</span>) == <span class=\"number\">-1</span> <span class=\"comment\">//是否web应该程序，没有头部与底部  </span></span><br><span class=\"line\"> &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>比如：如果我在<code>ios</code>系统，<code>uc</code>浏览器内表现得和其他系统或者浏览器不同，我们可以根据上面的单独对<code>ios</code>系统的<code>uc</code>浏览器处理。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> browser = !!navigator.userAgent.match(<span class=\"regexp\">/\\(i[^;]+;( U;)? CPU.+Mac OS X/</span>)&amp;&amp;navigator.userAgent.indexOf(<span class=\"string\">'UCBrowser'</span>) &gt; <span class=\"number\">-1</span></span><br></pre></td></tr></table></figure>\n\n<p>如果<code>browser</code>为true，那就是<code>ios</code>系统下的<code>uc</code>浏览器。单独有一套代码来消除特定的<code>bug</code>。</p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<p>在做移动端的网页的时候，兼容手机上不同的浏览器也是一个痛苦的事情。</p>\n<p>我们可以现在<code>script</code>部分打印出<code>console.log(navigator）</code>：</p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/5_NWLPB1_HT_68TX4WB5.png\" alt></p>\n<p>可以根据这个<code>navigator</code>来判断是否移动端以及是哪个浏览器。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> u = navigator.userAgent, app = navigator.appVersion;</span><br><span class=\"line\"><span class=\"keyword\">return</span> &#123;<span class=\"comment\">//移动终端浏览器版本信息  </span></span><br><span class=\"line\">         trident: u.indexOf(<span class=\"string\">'Trident'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//IE内核  </span></span><br><span class=\"line\">         presto: u.indexOf(<span class=\"string\">'Presto'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//opera内核  </span></span><br><span class=\"line\">         webKit: u.indexOf(<span class=\"string\">'AppleWebKit'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//苹果、谷歌内核  </span></span><br><span class=\"line\">         gecko: u.indexOf(<span class=\"string\">'Gecko'</span>) &gt; <span class=\"number\">-1</span> &amp;&amp; u.indexOf(<span class=\"string\">'KHTML'</span>) == <span class=\"number\">-1</span>, <span class=\"comment\">//火狐内核  </span></span><br><span class=\"line\">         mobile: !!u.match(<span class=\"regexp\">/AppleWebKit.*Mobile.*/</span>)||!!u.match(<span class=\"regexp\">/AppleWebKit/</span>), <span class=\"comment\">//是否为移动终端  </span></span><br><span class=\"line\">         ios: !!u.match(<span class=\"regexp\">/\\(i[^;]+;( U;)? CPU.+Mac OS X/</span>), <span class=\"comment\">//ios终端  </span></span><br><span class=\"line\">         android: u.indexOf(<span class=\"string\">'Android'</span>) &gt; <span class=\"number\">-1</span> || u.indexOf(<span class=\"string\">'Linux'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//android终端或者uc浏览器  </span></span><br><span class=\"line\">         iPhone: u.indexOf(<span class=\"string\">'iPhone'</span>) &gt; <span class=\"number\">-1</span> || u.indexOf(<span class=\"string\">'Mac'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//是否为iPhone或者QQHD浏览器  </span></span><br><span class=\"line\">         iPad: u.indexOf(<span class=\"string\">'iPad'</span>) &gt; <span class=\"number\">-1</span>, <span class=\"comment\">//是否iPad  </span></span><br><span class=\"line\">         webApp: u.indexOf(<span class=\"string\">'Safari'</span>) == <span class=\"number\">-1</span> <span class=\"comment\">//是否web应该程序，没有头部与底部  </span></span><br><span class=\"line\"> &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>比如：如果我在<code>ios</code>系统，<code>uc</code>浏览器内表现得和其他系统或者浏览器不同，我们可以根据上面的单独对<code>ios</code>系统的<code>uc</code>浏览器处理。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> browser = !!navigator.userAgent.match(<span class=\"regexp\">/\\(i[^;]+;( U;)? CPU.+Mac OS X/</span>)&amp;&amp;navigator.userAgent.indexOf(<span class=\"string\">'UCBrowser'</span>) &gt; <span class=\"number\">-1</span></span><br></pre></td></tr></table></figure>\n\n<p>如果<code>browser</code>为true，那就是<code>ios</code>系统下的<code>uc</code>浏览器。单独有一套代码来消除特定的<code>bug</code>。</p>\n"},{"title":"console的使用","comments":1,"description":"console拥有多个方法可以更好显示我们想要调试的内容。在平时调试js代码，我比较喜欢使用console来调试","date":"2016-04-22T02:29:10.000Z","keywords":"console的使用","_content":"\n`console`拥有多个方法可以更好显示我们想要调试的内容。在平时调试js代码，我比较喜欢使用`console`来调试。\n\n## console.log()\n\n这个就不用多介绍了，主要是来输出一个或者多个的变量或者字符串\n\n## console.table()\n\n主要是输出一个对象\n\n```js\nlet [arr1,arr2] = [[1,2,3,4,5,6],{\n    name:'hbb',\n    age:20\n}]\nconsole.table(arr1)\nconsole.table(arr2)\n```\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/I4C6JHIXQ1OYVW-1.png)\n\n\n可以看到以表格的形式输出对象。\n\n## console.time()与console.timeEnd()\n\n可以得出一段代码运行时间\n\n```js\nconsole.time()\nlet arr = [1,2,3,4,5,67,8,12,3,43546,56,76,11]\nlet arr1 = arr.filter(val=>val>10)\nconsole.log(arr1)\nconsole.timeEnd()\n```\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/25XLL0H9VIN53W92C8.png)\n\n## console.dir()\n\n可以显示一个对象所有的属性和方法。\n\n```js\nlet arr = [1,2,3,4,5,67,8,12,3,43546,56,76,11]\nconsole.dir(arr)\n```\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/GE68P1MV_SF97B2@C1EM.png)\n\n## console.assert()\n\n判断一个表达式或变量是否为真。如果结果为否，则在控制台输出一条相应信息，并且抛出一个异常。\n\n```js\nlet a = 1\nconsole.assert(a)\nconsole.assert(a===2)\n```\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/EGSYYTZAX4U60IL3TR1X.png)\n\n## console.trace()\n\n来追踪函数的调用轨迹。（函数是如何被调用的，在其中加入`console.trace()`方法就可以了）\n\n```js\nlet fun = function (param) {\n  console.trace()\n  param.filter(val=>val>5)\n}\nfun([1,2,3,4,5,6])\nfun([1,12,31,41,15,16])\nfun([1,2,31,4,15,6])\nfun([1,2,13,41,5,6])\n```\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/R8VLQ881S0D977OE0T4VH.png)\n\n\n实践中基本就用到过这么多，还有其他的一些方法：https://developer.mozilla.org/en-US/docs/Web/API/console","source":"_posts/js-13.md","raw":"---\ntitle: console的使用\ncomments: true\ndescription: console拥有多个方法可以更好显示我们想要调试的内容。在平时调试js代码，我比较喜欢使用console来调试\ntags: \"js\"\ndate: 2016-4-22 10:29:10\ncategories: \"js\"\nkeywords: console的使用\n---\n\n`console`拥有多个方法可以更好显示我们想要调试的内容。在平时调试js代码，我比较喜欢使用`console`来调试。\n\n## console.log()\n\n这个就不用多介绍了，主要是来输出一个或者多个的变量或者字符串\n\n## console.table()\n\n主要是输出一个对象\n\n```js\nlet [arr1,arr2] = [[1,2,3,4,5,6],{\n    name:'hbb',\n    age:20\n}]\nconsole.table(arr1)\nconsole.table(arr2)\n```\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/I4C6JHIXQ1OYVW-1.png)\n\n\n可以看到以表格的形式输出对象。\n\n## console.time()与console.timeEnd()\n\n可以得出一段代码运行时间\n\n```js\nconsole.time()\nlet arr = [1,2,3,4,5,67,8,12,3,43546,56,76,11]\nlet arr1 = arr.filter(val=>val>10)\nconsole.log(arr1)\nconsole.timeEnd()\n```\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/25XLL0H9VIN53W92C8.png)\n\n## console.dir()\n\n可以显示一个对象所有的属性和方法。\n\n```js\nlet arr = [1,2,3,4,5,67,8,12,3,43546,56,76,11]\nconsole.dir(arr)\n```\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/GE68P1MV_SF97B2@C1EM.png)\n\n## console.assert()\n\n判断一个表达式或变量是否为真。如果结果为否，则在控制台输出一条相应信息，并且抛出一个异常。\n\n```js\nlet a = 1\nconsole.assert(a)\nconsole.assert(a===2)\n```\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/EGSYYTZAX4U60IL3TR1X.png)\n\n## console.trace()\n\n来追踪函数的调用轨迹。（函数是如何被调用的，在其中加入`console.trace()`方法就可以了）\n\n```js\nlet fun = function (param) {\n  console.trace()\n  param.filter(val=>val>5)\n}\nfun([1,2,3,4,5,6])\nfun([1,12,31,41,15,16])\nfun([1,2,31,4,15,6])\nfun([1,2,13,41,5,6])\n```\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/R8VLQ881S0D977OE0T4VH.png)\n\n\n实践中基本就用到过这么多，还有其他的一些方法：https://developer.mozilla.org/en-US/docs/Web/API/console","slug":"js-13","published":1,"updated":"2019-09-20T01:13:54.902Z","layout":"post","photos":[],"link":"","_id":"ck1p3g29y000wn0b9qrtlqfaz","content":"<p><code>console</code>拥有多个方法可以更好显示我们想要调试的内容。在平时调试js代码，我比较喜欢使用<code>console</code>来调试。</p>\n<h2 id=\"console-log\"><a href=\"#console-log\" class=\"headerlink\" title=\"console.log()\"></a>console.log()</h2><p>这个就不用多介绍了，主要是来输出一个或者多个的变量或者字符串</p>\n<h2 id=\"console-table\"><a href=\"#console-table\" class=\"headerlink\" title=\"console.table()\"></a>console.table()</h2><p>主要是输出一个对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [arr1,arr2] = [[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>],&#123;</span><br><span class=\"line\">    name:<span class=\"string\">'hbb'</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.table(arr1)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.table(arr2)</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/I4C6JHIXQ1OYVW-1.png\" class=\"lozad\"></p>\n<p>可以看到以表格的形式输出对象。</p>\n<h2 id=\"console-time-与console-timeEnd\"><a href=\"#console-time-与console-timeEnd\" class=\"headerlink\" title=\"console.time()与console.timeEnd()\"></a>console.time()与console.timeEnd()</h2><p>可以得出一段代码运行时间</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.time()</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">67</span>,<span class=\"number\">8</span>,<span class=\"number\">12</span>,<span class=\"number\">3</span>,<span class=\"number\">43546</span>,<span class=\"number\">56</span>,<span class=\"number\">76</span>,<span class=\"number\">11</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr1 = arr.filter(<span class=\"function\"><span class=\"params\">val</span>=&gt;</span>val&gt;<span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr1)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.timeEnd()</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/25XLL0H9VIN53W92C8.png\" class=\"lozad\"></p>\n<h2 id=\"console-dir\"><a href=\"#console-dir\" class=\"headerlink\" title=\"console.dir()\"></a>console.dir()</h2><p>可以显示一个对象所有的属性和方法。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">67</span>,<span class=\"number\">8</span>,<span class=\"number\">12</span>,<span class=\"number\">3</span>,<span class=\"number\">43546</span>,<span class=\"number\">56</span>,<span class=\"number\">76</span>,<span class=\"number\">11</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.dir(arr)</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/GE68P1MV_SF97B2@C1EM.png\" class=\"lozad\"></p>\n<h2 id=\"console-assert\"><a href=\"#console-assert\" class=\"headerlink\" title=\"console.assert()\"></a>console.assert()</h2><p>判断一个表达式或变量是否为真。如果结果为否，则在控制台输出一条相应信息，并且抛出一个异常。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.assert(a)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.assert(a===<span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/EGSYYTZAX4U60IL3TR1X.png\" class=\"lozad\"></p>\n<h2 id=\"console-trace\"><a href=\"#console-trace\" class=\"headerlink\" title=\"console.trace()\"></a>console.trace()</h2><p>来追踪函数的调用轨迹。（函数是如何被调用的，在其中加入<code>console.trace()</code>方法就可以了）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fun = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">param</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.trace()</span><br><span class=\"line\">  param.filter(<span class=\"function\"><span class=\"params\">val</span>=&gt;</span>val&gt;<span class=\"number\">5</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fun([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>])</span><br><span class=\"line\">fun([<span class=\"number\">1</span>,<span class=\"number\">12</span>,<span class=\"number\">31</span>,<span class=\"number\">41</span>,<span class=\"number\">15</span>,<span class=\"number\">16</span>])</span><br><span class=\"line\">fun([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">31</span>,<span class=\"number\">4</span>,<span class=\"number\">15</span>,<span class=\"number\">6</span>])</span><br><span class=\"line\">fun([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">13</span>,<span class=\"number\">41</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>])</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/R8VLQ881S0D977OE0T4VH.png\" class=\"lozad\"></p>\n<p>实践中基本就用到过这么多，还有其他的一些方法：<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/en-US/docs/Web/API/console</a></p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<p><code>console</code>拥有多个方法可以更好显示我们想要调试的内容。在平时调试js代码，我比较喜欢使用<code>console</code>来调试。</p>\n<h2 id=\"console-log\"><a href=\"#console-log\" class=\"headerlink\" title=\"console.log()\"></a>console.log()</h2><p>这个就不用多介绍了，主要是来输出一个或者多个的变量或者字符串</p>\n<h2 id=\"console-table\"><a href=\"#console-table\" class=\"headerlink\" title=\"console.table()\"></a>console.table()</h2><p>主要是输出一个对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [arr1,arr2] = [[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>],&#123;</span><br><span class=\"line\">    name:<span class=\"string\">'hbb'</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.table(arr1)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.table(arr2)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/I4C6JHIXQ1OYVW-1.png\" alt></p>\n<p>可以看到以表格的形式输出对象。</p>\n<h2 id=\"console-time-与console-timeEnd\"><a href=\"#console-time-与console-timeEnd\" class=\"headerlink\" title=\"console.time()与console.timeEnd()\"></a>console.time()与console.timeEnd()</h2><p>可以得出一段代码运行时间</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.time()</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">67</span>,<span class=\"number\">8</span>,<span class=\"number\">12</span>,<span class=\"number\">3</span>,<span class=\"number\">43546</span>,<span class=\"number\">56</span>,<span class=\"number\">76</span>,<span class=\"number\">11</span>]</span><br><span class=\"line\"><span class=\"keyword\">let</span> arr1 = arr.filter(<span class=\"function\"><span class=\"params\">val</span>=&gt;</span>val&gt;<span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr1)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.timeEnd()</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/25XLL0H9VIN53W92C8.png\" alt></p>\n<h2 id=\"console-dir\"><a href=\"#console-dir\" class=\"headerlink\" title=\"console.dir()\"></a>console.dir()</h2><p>可以显示一个对象所有的属性和方法。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">67</span>,<span class=\"number\">8</span>,<span class=\"number\">12</span>,<span class=\"number\">3</span>,<span class=\"number\">43546</span>,<span class=\"number\">56</span>,<span class=\"number\">76</span>,<span class=\"number\">11</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.dir(arr)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/GE68P1MV_SF97B2@C1EM.png\" alt></p>\n<h2 id=\"console-assert\"><a href=\"#console-assert\" class=\"headerlink\" title=\"console.assert()\"></a>console.assert()</h2><p>判断一个表达式或变量是否为真。如果结果为否，则在控制台输出一条相应信息，并且抛出一个异常。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.assert(a)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.assert(a===<span class=\"number\">2</span>)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/EGSYYTZAX4U60IL3TR1X.png\" alt></p>\n<h2 id=\"console-trace\"><a href=\"#console-trace\" class=\"headerlink\" title=\"console.trace()\"></a>console.trace()</h2><p>来追踪函数的调用轨迹。（函数是如何被调用的，在其中加入<code>console.trace()</code>方法就可以了）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> fun = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">param</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.trace()</span><br><span class=\"line\">  param.filter(<span class=\"function\"><span class=\"params\">val</span>=&gt;</span>val&gt;<span class=\"number\">5</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fun([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>])</span><br><span class=\"line\">fun([<span class=\"number\">1</span>,<span class=\"number\">12</span>,<span class=\"number\">31</span>,<span class=\"number\">41</span>,<span class=\"number\">15</span>,<span class=\"number\">16</span>])</span><br><span class=\"line\">fun([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">31</span>,<span class=\"number\">4</span>,<span class=\"number\">15</span>,<span class=\"number\">6</span>])</span><br><span class=\"line\">fun([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">13</span>,<span class=\"number\">41</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>])</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/R8VLQ881S0D977OE0T4VH.png\" alt></p>\n<p>实践中基本就用到过这么多，还有其他的一些方法：<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/console\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/en-US/docs/Web/API/console</a></p>\n"},{"title":"正则表达式","comments":1,"description":"正则表达式(regular expression)描述了一种字符串匹配的模式（pattern），可以用来检查一个串是否含有某种子串、将匹配的子串替换或者从某个串中取出符合某个条件的子串等。","date":"2016-09-22T02:29:10.000Z","keywords":"正则表达式","_content":"\n## 正则表达式\n用来匹配某一段字符串满不满足某个规则的对象。\n\n找出字符里面的数字集合['123','60','753']：\n\n```js\nvar str = \"123gou60dan753\";\nvar arr = [];\nvar s = \"\";\nfor (var i = 0,length=str.length; i < length; i++) {\n  if ( !isNaN(str.charAt(i)) ){\n    s += str.charAt(i);\n  }else if ( s ){\n    arr.push( s );\n    s = \"\";\n  }\n}\nif ( s ){\n  arr.push( s );\n}\n```\n\n使用正则我们只需一行代码搞定：\n\n```js\nvar str = \"123gou888dan753\";\nvar arr = str.match(/\\d+/g);\n```\n\n\n### reg.test(str)\n\n返回一个布尔值，匹配成功返回`true`，匹配失败返回`false`。\n\n/正则表达式主体/修饰符(可选)，如下：\n\n```js\nvar r = /123/;\nvar str = \"狗蛋123\";\nalert( r.test( str ) ); //true;\n```\n\n如果匹配的是字符串该怎么转化：\n\n```js\nvar a = \"123\";\nvar r = new RegExp(a);\nvar str = \"狗蛋123\";\nalert( r.test( str ) );   //true;\n```\n\n## 转义：\\\n\n1. 当我们在匹配有特殊意义的字符的时候，我们需要加 \\ 符号。特殊字符有哪些？\n/ \\ { } ? + * ( )\n\n2. \\符号，在配合一些特定的字符的时候，有特殊的意义。\\n \\r \\t 字符串里面也有这些\n\\S 非空格\n\n\\s 空格\n\n\\d 数字\n\n\\D 非数字\n\n\\w 字符（数字、字母、_）\n\n\\W 非字符\n\n\\b 独立部分 起始、结束、连词符(除了\\w包含的之外)\n\n\\B 非独立部分\n\n**匹配一个空格**\n\n```js\nvar reg = /\\S/;\nvar str = \"789  8\";\nalert( reg.test(str) );  //true;\n```\n\n**匹配两个数字**\n\n```js\nvar reg = /\\d\\d/;\nvar str = \"Goudan00\";\nalert( reg.test(str) );  //true;\n```\n\n**匹配字符**\n\n```js\nvar reg = /\\w/;\nvar str =\"狗_蛋\";\nalert( reg.test(str) ); //true;\n```\n\n**匹配以1234开头或者结尾**\n\n```js\nvar reg = /\\b1234\\b/;\nvar str = \"1234-dgfdgsd\";\nalert( reg.test(str) ); //true;\n```\n\n## 量词\n\n量词：{}\n\n```js\n{5} n = 5\n{1,3} 1 <= n <= 3\n{2,} 2 <= n\n```\n\n有几种非常特殊的量词，可以用特定的符号来表示\n\n```js\n{0,1} ?\n{1,} +\n{0,} *\nvar r = /1{5}/;\nvar str = \"1狗蛋11111111\";\nalert( r.test( str ) ); //true\n```\n\n## match（）\n\n`str.match(reg)`,返回一个数组，包含着匹配内容的类数组，如果匹配不成功返回`null`\n\n```js\nvar reg = /1{3,}/;\nvar str = \"狗蛋111111\";\nconsole.log( str.match(reg) );  // 0：\"111111\"\n```\n\n## 标识\n\ni 不区分大小写\n\nm 换行匹配\n\ng 全局匹配\n\n```js\nvar reg = /1{2}/g;\nvar str = \"11狗11蛋11\";\nconsole.log( str.match(reg) ); //0：\"11\"，1:\"11，\"2:\"11\"，length:3\nvar reg = /abc/gi;\nvar str = \"Abc\";\nconsole.log( str.match(reg) ); //0:'Abc'\n```\n\nRegExp的使用\n\n```js\nvar x = \"ig\";\nvar str = \"123Gou888dgn753\";\nvar reg = new RegExp(\"\\g\" , x);\nconsole.log( str.match(reg) ); //[\"G\", \"g\"]\n```\n\n## 子集\n\n```js\nvar reg = /狗蛋((12)(3))/;\nvar str = \"去去去狗蛋123我我我\";\nconsole.log( str.match(reg) );  // 0:\"狗蛋123\",1:\"123\",2:\"12\",3:\"3\"\n```\n\n`match` 在匹配加了标识g的正则的时候，成功的话返回的是一个真正的数组，并且不包含子集。\n\n```js\nvar reg = /1212(12){2,3}/g;\nvar str = \"12121212\";\nconsole.log( str.match(reg) );  // [\"12121212\"]\n```\n\n## 字符集\n字符集： []\n\n1. 一段连续的内容：\n\n[0-9]\n\n[a-z]\n\n[A-Z]\n\n[\\u4e00-\\u9fa5]\n\n2. 或者 |\n\n3. 除了 [^]\n\n放在字符集最开始才有除了的意思，否则就是没有特殊意义\n\n注意：\n\n①：- 在字符集里面（可能）是有特殊意义的，所以在字符集里面要匹配 \"-\" 本身最好加 \\；\n\n②：- 在字符集之外是没有特殊意义的；\n\n③：大多数在正则里面有特殊意义的字符，在字符集里面都没有特殊意义；(){}?+*\n\n```js\nvar reg = /[0-9]/;\nvar str = \"hsha12\";\nconsole.log( str.match(reg) ); //0:\"1\"\nvar reg = /a|bc/g; //整体的或者   a  bc   \nvar str = \"ac123bc\";\nconsole.log( str.match(reg) );\nvar reg = /(a|b)c/g; //局部的子集内的或者  ac  bc\nvar str = \"ac123bc\";\nconsole.log( str.match(reg) );\nvar reg = /[a\\-0]/g;\nvar str = \"a-b10\";\nconsole.log( str.match(reg) ); //[\"a\", \"-\", \"0\"]\nvar reg = /[(a{8,9})]/;\nvar str = \"a1bxa2a\";\nconsole.log( str.match(reg) ); //[\"a\", index: 0, input: \"a1bxa2a\"]\nvar reg = /[a^b]/g;\nvar str = \"^ac\";\nconsole.log( str.match(reg) ); //[\"^\", \"a\"]\n```\n\n## 使用字符串方法\n\n1. 字符集后面也能加量词\n\n2. 数字转义是有特殊意义的，在字符串里面也是一样，但是不需要去了解是什么东西\n\n```js\nvar reg = /[abc]{3}/;\nvar str = \"cab\";\nconsole.log( str.match( reg ) );//0:\"cab\"\nvar reg = /a\\1/;\nvar str = \"aaa\\1\";\nconsole.log( str.match( reg ) );\n```\n\n`search()` 方法 用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串，并返回子串的起始位置。匹配失败返回-1。\n\n```js\nvar reg = /hbb/;\nvar str = \"hbbalyhbb\";\nconsole.log( str.match( reg ) );//[\"hbb\", index: 0, input: \"hbbalyhbb\"]\n```\n\n`split（`）方法：以XX为分隔符，被分割的组成一个数组。\n\n```js\nvar reg = /[bc]/;\nvar str = \"xybqwercnpm\";\nconsole.log( str.split(reg) ); // [\"xy\", \"qwer\", \"npm\"]\nstr.replace(reg ,str)，str 字符串，reg 正则表达式。\n```\n\n1. string 将匹配成功的部分替换为 该字符串。\n\n2. function 将匹配成功的部分替换为 该函数的返回值，该函数形参分别对应 ==== 匹配整体，第一个子项，第二个子项…………\n\n最终返回新字符串（不改变原来的字符串str）\n\n```js\nvar reg = /[abc]/g;\nvar str = \"lyabc\";\nvar nS = str.replace( reg , \"6666666\" ); //ly666666666666666666666\nvar str = \"abc\";\nvar nS = str.replace(\"a\" , \"x\");\nconsole.log( nS );//xbc\nvar reg = /[abc]/g;\nvar str = \"lyabc\";\nvar nS = str.replace(reg , function () {\nreturn \"x\";\n});\nconsole.log( nS ); //lyxxx\nvar reg = /hbb(a)(ly)/;\nvar str = \"ssshbbalyppp\";\nvar nS = str.replace(reg , function (i,j,k) {\n    console.log( i + \"---\" + j + \"---\" + k ); //hbbaly---a---ly\n});\nconsole.log( nS ); //sssundefinedppp\nvar reg = /[abc]/g;\nvar str = \"lyabc\";\nvar nS = str.replace(reg , function (f) {\nreturn f+\"x\";\n});\nconsole.log( nS ); //lyaxbxcx\n```\n\n## 特殊字符\n.  ：正则里面代表任意字符\n\n^ ： 在字符集之外，代表起始部分\n\n$ ： 代表结束部分\n\n特殊字符：\n\n/ \\ { } ( ) [ ] . ^ $ + * ? |（字符集里面要注意与上面不同）。\n\n惰性： 给任意量词后加 ? 变成惰性匹配，尽量往少着匹配\n\n```js\nvar reg = /./;\nvar str = \"bagb\";\nconsole.log( str.match( reg ) );  //0:\"b\"\nvar reg = /^b/;\nvar str = \"bagb\";\nconsole.log( str.match( reg ) );  //[\"b\", index: 0, input: \"bagb\"]\nvar reg = /a{2,4}?/;\nvar str = \"aaaaa\";\nconsole.log( str.match( reg ) );  //[\"aa\", index: 0, input: \"aaaaa\"]\n```\n\n常用的一些正则表达式：\n\n```js\nqq : /^[1-9]\\d{4,9}$/,//QQ号\nuser : /^[a-zA-Z_]\\w{5,17}$/,//用户名\npwd : /^[\\w~!@#%$^&*()+{}:\"<>?|`,/\\[\\]\\-\\\\\\.]{6,18}$/,//密码\ntel : /^1[3-8]\\d{9}$/,//手机号\nmail : /^[1-9a-z_]\\w{5,17}@[\\da-z]{2,}(\\.[a-z]{2,4}){1,2}$/i,//邮箱\nIDCard : /^[1-9]\\d{16}[\\dx]$/i//身份证号\n```","source":"_posts/js-15.md","raw":"---\ntitle: 正则表达式\ncomments: true\ndescription: 正则表达式(regular expression)描述了一种字符串匹配的模式（pattern），可以用来检查一个串是否含有某种子串、将匹配的子串替换或者从某个串中取出符合某个条件的子串等。\ntags: \"js\"\ndate: 2016-9-22 10:29:10\ncategories: \"regular\"\nkeywords: 正则表达式\n---\n\n## 正则表达式\n用来匹配某一段字符串满不满足某个规则的对象。\n\n找出字符里面的数字集合['123','60','753']：\n\n```js\nvar str = \"123gou60dan753\";\nvar arr = [];\nvar s = \"\";\nfor (var i = 0,length=str.length; i < length; i++) {\n  if ( !isNaN(str.charAt(i)) ){\n    s += str.charAt(i);\n  }else if ( s ){\n    arr.push( s );\n    s = \"\";\n  }\n}\nif ( s ){\n  arr.push( s );\n}\n```\n\n使用正则我们只需一行代码搞定：\n\n```js\nvar str = \"123gou888dan753\";\nvar arr = str.match(/\\d+/g);\n```\n\n\n### reg.test(str)\n\n返回一个布尔值，匹配成功返回`true`，匹配失败返回`false`。\n\n/正则表达式主体/修饰符(可选)，如下：\n\n```js\nvar r = /123/;\nvar str = \"狗蛋123\";\nalert( r.test( str ) ); //true;\n```\n\n如果匹配的是字符串该怎么转化：\n\n```js\nvar a = \"123\";\nvar r = new RegExp(a);\nvar str = \"狗蛋123\";\nalert( r.test( str ) );   //true;\n```\n\n## 转义：\\\n\n1. 当我们在匹配有特殊意义的字符的时候，我们需要加 \\ 符号。特殊字符有哪些？\n/ \\ { } ? + * ( )\n\n2. \\符号，在配合一些特定的字符的时候，有特殊的意义。\\n \\r \\t 字符串里面也有这些\n\\S 非空格\n\n\\s 空格\n\n\\d 数字\n\n\\D 非数字\n\n\\w 字符（数字、字母、_）\n\n\\W 非字符\n\n\\b 独立部分 起始、结束、连词符(除了\\w包含的之外)\n\n\\B 非独立部分\n\n**匹配一个空格**\n\n```js\nvar reg = /\\S/;\nvar str = \"789  8\";\nalert( reg.test(str) );  //true;\n```\n\n**匹配两个数字**\n\n```js\nvar reg = /\\d\\d/;\nvar str = \"Goudan00\";\nalert( reg.test(str) );  //true;\n```\n\n**匹配字符**\n\n```js\nvar reg = /\\w/;\nvar str =\"狗_蛋\";\nalert( reg.test(str) ); //true;\n```\n\n**匹配以1234开头或者结尾**\n\n```js\nvar reg = /\\b1234\\b/;\nvar str = \"1234-dgfdgsd\";\nalert( reg.test(str) ); //true;\n```\n\n## 量词\n\n量词：{}\n\n```js\n{5} n = 5\n{1,3} 1 <= n <= 3\n{2,} 2 <= n\n```\n\n有几种非常特殊的量词，可以用特定的符号来表示\n\n```js\n{0,1} ?\n{1,} +\n{0,} *\nvar r = /1{5}/;\nvar str = \"1狗蛋11111111\";\nalert( r.test( str ) ); //true\n```\n\n## match（）\n\n`str.match(reg)`,返回一个数组，包含着匹配内容的类数组，如果匹配不成功返回`null`\n\n```js\nvar reg = /1{3,}/;\nvar str = \"狗蛋111111\";\nconsole.log( str.match(reg) );  // 0：\"111111\"\n```\n\n## 标识\n\ni 不区分大小写\n\nm 换行匹配\n\ng 全局匹配\n\n```js\nvar reg = /1{2}/g;\nvar str = \"11狗11蛋11\";\nconsole.log( str.match(reg) ); //0：\"11\"，1:\"11，\"2:\"11\"，length:3\nvar reg = /abc/gi;\nvar str = \"Abc\";\nconsole.log( str.match(reg) ); //0:'Abc'\n```\n\nRegExp的使用\n\n```js\nvar x = \"ig\";\nvar str = \"123Gou888dgn753\";\nvar reg = new RegExp(\"\\g\" , x);\nconsole.log( str.match(reg) ); //[\"G\", \"g\"]\n```\n\n## 子集\n\n```js\nvar reg = /狗蛋((12)(3))/;\nvar str = \"去去去狗蛋123我我我\";\nconsole.log( str.match(reg) );  // 0:\"狗蛋123\",1:\"123\",2:\"12\",3:\"3\"\n```\n\n`match` 在匹配加了标识g的正则的时候，成功的话返回的是一个真正的数组，并且不包含子集。\n\n```js\nvar reg = /1212(12){2,3}/g;\nvar str = \"12121212\";\nconsole.log( str.match(reg) );  // [\"12121212\"]\n```\n\n## 字符集\n字符集： []\n\n1. 一段连续的内容：\n\n[0-9]\n\n[a-z]\n\n[A-Z]\n\n[\\u4e00-\\u9fa5]\n\n2. 或者 |\n\n3. 除了 [^]\n\n放在字符集最开始才有除了的意思，否则就是没有特殊意义\n\n注意：\n\n①：- 在字符集里面（可能）是有特殊意义的，所以在字符集里面要匹配 \"-\" 本身最好加 \\；\n\n②：- 在字符集之外是没有特殊意义的；\n\n③：大多数在正则里面有特殊意义的字符，在字符集里面都没有特殊意义；(){}?+*\n\n```js\nvar reg = /[0-9]/;\nvar str = \"hsha12\";\nconsole.log( str.match(reg) ); //0:\"1\"\nvar reg = /a|bc/g; //整体的或者   a  bc   \nvar str = \"ac123bc\";\nconsole.log( str.match(reg) );\nvar reg = /(a|b)c/g; //局部的子集内的或者  ac  bc\nvar str = \"ac123bc\";\nconsole.log( str.match(reg) );\nvar reg = /[a\\-0]/g;\nvar str = \"a-b10\";\nconsole.log( str.match(reg) ); //[\"a\", \"-\", \"0\"]\nvar reg = /[(a{8,9})]/;\nvar str = \"a1bxa2a\";\nconsole.log( str.match(reg) ); //[\"a\", index: 0, input: \"a1bxa2a\"]\nvar reg = /[a^b]/g;\nvar str = \"^ac\";\nconsole.log( str.match(reg) ); //[\"^\", \"a\"]\n```\n\n## 使用字符串方法\n\n1. 字符集后面也能加量词\n\n2. 数字转义是有特殊意义的，在字符串里面也是一样，但是不需要去了解是什么东西\n\n```js\nvar reg = /[abc]{3}/;\nvar str = \"cab\";\nconsole.log( str.match( reg ) );//0:\"cab\"\nvar reg = /a\\1/;\nvar str = \"aaa\\1\";\nconsole.log( str.match( reg ) );\n```\n\n`search()` 方法 用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串，并返回子串的起始位置。匹配失败返回-1。\n\n```js\nvar reg = /hbb/;\nvar str = \"hbbalyhbb\";\nconsole.log( str.match( reg ) );//[\"hbb\", index: 0, input: \"hbbalyhbb\"]\n```\n\n`split（`）方法：以XX为分隔符，被分割的组成一个数组。\n\n```js\nvar reg = /[bc]/;\nvar str = \"xybqwercnpm\";\nconsole.log( str.split(reg) ); // [\"xy\", \"qwer\", \"npm\"]\nstr.replace(reg ,str)，str 字符串，reg 正则表达式。\n```\n\n1. string 将匹配成功的部分替换为 该字符串。\n\n2. function 将匹配成功的部分替换为 该函数的返回值，该函数形参分别对应 ==== 匹配整体，第一个子项，第二个子项…………\n\n最终返回新字符串（不改变原来的字符串str）\n\n```js\nvar reg = /[abc]/g;\nvar str = \"lyabc\";\nvar nS = str.replace( reg , \"6666666\" ); //ly666666666666666666666\nvar str = \"abc\";\nvar nS = str.replace(\"a\" , \"x\");\nconsole.log( nS );//xbc\nvar reg = /[abc]/g;\nvar str = \"lyabc\";\nvar nS = str.replace(reg , function () {\nreturn \"x\";\n});\nconsole.log( nS ); //lyxxx\nvar reg = /hbb(a)(ly)/;\nvar str = \"ssshbbalyppp\";\nvar nS = str.replace(reg , function (i,j,k) {\n    console.log( i + \"---\" + j + \"---\" + k ); //hbbaly---a---ly\n});\nconsole.log( nS ); //sssundefinedppp\nvar reg = /[abc]/g;\nvar str = \"lyabc\";\nvar nS = str.replace(reg , function (f) {\nreturn f+\"x\";\n});\nconsole.log( nS ); //lyaxbxcx\n```\n\n## 特殊字符\n.  ：正则里面代表任意字符\n\n^ ： 在字符集之外，代表起始部分\n\n$ ： 代表结束部分\n\n特殊字符：\n\n/ \\ { } ( ) [ ] . ^ $ + * ? |（字符集里面要注意与上面不同）。\n\n惰性： 给任意量词后加 ? 变成惰性匹配，尽量往少着匹配\n\n```js\nvar reg = /./;\nvar str = \"bagb\";\nconsole.log( str.match( reg ) );  //0:\"b\"\nvar reg = /^b/;\nvar str = \"bagb\";\nconsole.log( str.match( reg ) );  //[\"b\", index: 0, input: \"bagb\"]\nvar reg = /a{2,4}?/;\nvar str = \"aaaaa\";\nconsole.log( str.match( reg ) );  //[\"aa\", index: 0, input: \"aaaaa\"]\n```\n\n常用的一些正则表达式：\n\n```js\nqq : /^[1-9]\\d{4,9}$/,//QQ号\nuser : /^[a-zA-Z_]\\w{5,17}$/,//用户名\npwd : /^[\\w~!@#%$^&*()+{}:\"<>?|`,/\\[\\]\\-\\\\\\.]{6,18}$/,//密码\ntel : /^1[3-8]\\d{9}$/,//手机号\nmail : /^[1-9a-z_]\\w{5,17}@[\\da-z]{2,}(\\.[a-z]{2,4}){1,2}$/i,//邮箱\nIDCard : /^[1-9]\\d{16}[\\dx]$/i//身份证号\n```","slug":"js-15","published":1,"updated":"2019-09-20T01:34:30.366Z","layout":"post","photos":[],"link":"","_id":"ck1p3g29z000yn0b91iifc1kx","content":"<h2 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h2><p>用来匹配某一段字符串满不满足某个规则的对象。</p>\n<p>找出字符里面的数字集合[‘123’,’60’,’753’]：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"123gou60dan753\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> s = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,length=str.length; i &lt; length; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( !<span class=\"built_in\">isNaN</span>(str.charAt(i)) )&#123;</span><br><span class=\"line\">    s += str.charAt(i);</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( s )&#123;</span><br><span class=\"line\">    arr.push( s );</span><br><span class=\"line\">    s = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( s )&#123;</span><br><span class=\"line\">  arr.push( s );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用正则我们只需一行代码搞定：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"123gou888dan753\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = str.match(<span class=\"regexp\">/\\d+/g</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"reg-test-str\"><a href=\"#reg-test-str\" class=\"headerlink\" title=\"reg.test(str)\"></a>reg.test(str)</h3><p>返回一个布尔值，匹配成功返回<code>true</code>，匹配失败返回<code>false</code>。</p>\n<p>/正则表达式主体/修饰符(可选)，如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> r = <span class=\"regexp\">/123/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"狗蛋123\"</span>;</span><br><span class=\"line\">alert( r.test( str ) ); <span class=\"comment\">//true;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果匹配的是字符串该怎么转化：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">\"123\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> r = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(a);</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"狗蛋123\"</span>;</span><br><span class=\"line\">alert( r.test( str ) );   <span class=\"comment\">//true;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"转义：\"><a href=\"#转义：\" class=\"headerlink\" title=\"转义：\\\"></a>转义：\\</h2><ol>\n<li><p>当我们在匹配有特殊意义的字符的时候，我们需要加 \\ 符号。特殊字符有哪些？<br>/ \\ { } ? + * ( )</p>\n</li>\n<li><p>\\符号，在配合一些特定的字符的时候，有特殊的意义。\\n \\r \\t 字符串里面也有这些<br>\\S 非空格</p>\n</li>\n</ol>\n<p>\\s 空格</p>\n<p>\\d 数字</p>\n<p>\\D 非数字</p>\n<p>\\w 字符（数字、字母、_）</p>\n<p>\\W 非字符</p>\n<p>\\b 独立部分 起始、结束、连词符(除了\\w包含的之外)</p>\n<p>\\B 非独立部分</p>\n<p><strong>匹配一个空格</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/\\S/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"789  8\"</span>;</span><br><span class=\"line\">alert( reg.test(str) );  <span class=\"comment\">//true;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>匹配两个数字</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/\\d\\d/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"Goudan00\"</span>;</span><br><span class=\"line\">alert( reg.test(str) );  <span class=\"comment\">//true;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>匹配字符</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/\\w/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str =<span class=\"string\">\"狗_蛋\"</span>;</span><br><span class=\"line\">alert( reg.test(str) ); <span class=\"comment\">//true;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>匹配以1234开头或者结尾</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/\\b1234\\b/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"1234-dgfdgsd\"</span>;</span><br><span class=\"line\">alert( reg.test(str) ); <span class=\"comment\">//true;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"量词\"><a href=\"#量词\" class=\"headerlink\" title=\"量词\"></a>量词</h2><p>量词：{}</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"number\">5</span>&#125; n = <span class=\"number\">5</span></span><br><span class=\"line\">&#123;<span class=\"number\">1</span>,<span class=\"number\">3</span>&#125; <span class=\"number\">1</span> &lt;= n &lt;= <span class=\"number\">3</span></span><br><span class=\"line\">&#123;<span class=\"number\">2</span>,&#125; <span class=\"number\">2</span> &lt;= n</span><br></pre></td></tr></table></figure>\n\n<p>有几种非常特殊的量词，可以用特定的符号来表示</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125; ?</span><br><span class=\"line\">&#123;<span class=\"number\">1</span>,&#125; +</span><br><span class=\"line\">&#123;<span class=\"number\">0</span>,&#125; *</span><br><span class=\"line\"><span class=\"keyword\">var</span> r = <span class=\"regexp\">/1&#123;5&#125;/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"1狗蛋11111111\"</span>;</span><br><span class=\"line\">alert( r.test( str ) ); <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"match（）\"><a href=\"#match（）\" class=\"headerlink\" title=\"match（）\"></a>match（）</h2><p><code>str.match(reg)</code>,返回一个数组，包含着匹配内容的类数组，如果匹配不成功返回<code>null</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/1&#123;3,&#125;/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"狗蛋111111\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) );  <span class=\"comment\">// 0：\"111111\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"标识\"><a href=\"#标识\" class=\"headerlink\" title=\"标识\"></a>标识</h2><p>i 不区分大小写</p>\n<p>m 换行匹配</p>\n<p>g 全局匹配</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/1&#123;2&#125;/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"11狗11蛋11\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) ); <span class=\"comment\">//0：\"11\"，1:\"11，\"2:\"11\"，length:3</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/abc/gi</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"Abc\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) ); <span class=\"comment\">//0:'Abc'</span></span><br></pre></td></tr></table></figure>\n\n<p>RegExp的使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"string\">\"ig\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"123Gou888dgn753\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\"\\g\"</span> , x);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) ); <span class=\"comment\">//[\"G\", \"g\"]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"子集\"><a href=\"#子集\" class=\"headerlink\" title=\"子集\"></a>子集</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/狗蛋((12)(3))/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"去去去狗蛋123我我我\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) );  <span class=\"comment\">// 0:\"狗蛋123\",1:\"123\",2:\"12\",3:\"3\"</span></span><br></pre></td></tr></table></figure>\n\n<p><code>match</code> 在匹配加了标识g的正则的时候，成功的话返回的是一个真正的数组，并且不包含子集。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/1212(12)&#123;2,3&#125;/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"12121212\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) );  <span class=\"comment\">// [\"12121212\"]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符集\"><a href=\"#字符集\" class=\"headerlink\" title=\"字符集\"></a>字符集</h2><p>字符集： []</p>\n<ol>\n<li>一段连续的内容：</li>\n</ol>\n<p>[0-9]</p>\n<p>[a-z]</p>\n<p>[A-Z]</p>\n<p>[\\u4e00-\\u9fa5]</p>\n<ol start=\"2\">\n<li><p>或者 |</p>\n</li>\n<li><p>除了 [^]</p>\n</li>\n</ol>\n<p>放在字符集最开始才有除了的意思，否则就是没有特殊意义</p>\n<p>注意：</p>\n<p>①：- 在字符集里面（可能）是有特殊意义的，所以在字符集里面要匹配 “-“ 本身最好加 \\；</p>\n<p>②：- 在字符集之外是没有特殊意义的；</p>\n<p>③：大多数在正则里面有特殊意义的字符，在字符集里面都没有特殊意义；(){}?+*</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[0-9]/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"hsha12\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) ); <span class=\"comment\">//0:\"1\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/a|bc/g</span>; <span class=\"comment\">//整体的或者   a  bc   </span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"ac123bc\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) );</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/(a|b)c/g</span>; <span class=\"comment\">//局部的子集内的或者  ac  bc</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"ac123bc\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) );</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[a\\-0]/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"a-b10\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) ); <span class=\"comment\">//[\"a\", \"-\", \"0\"]</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[(a&#123;8,9&#125;)]/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"a1bxa2a\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) ); <span class=\"comment\">//[\"a\", index: 0, input: \"a1bxa2a\"]</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[a^b]/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"^ac\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) ); <span class=\"comment\">//[\"^\", \"a\"]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用字符串方法\"><a href=\"#使用字符串方法\" class=\"headerlink\" title=\"使用字符串方法\"></a>使用字符串方法</h2><ol>\n<li><p>字符集后面也能加量词</p>\n</li>\n<li><p>数字转义是有特殊意义的，在字符串里面也是一样，但是不需要去了解是什么东西</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[abc]&#123;3&#125;/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"cab\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match( reg ) );<span class=\"comment\">//0:\"cab\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/a\\1/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"aaa\\1\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match( reg ) );</span><br></pre></td></tr></table></figure>\n\n<p><code>search()</code> 方法 用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串，并返回子串的起始位置。匹配失败返回-1。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/hbb/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"hbbalyhbb\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match( reg ) );<span class=\"comment\">//[\"hbb\", index: 0, input: \"hbbalyhbb\"]</span></span><br></pre></td></tr></table></figure>\n\n<p><code>split（</code>）方法：以XX为分隔符，被分割的组成一个数组。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[bc]/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"xybqwercnpm\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.split(reg) ); <span class=\"comment\">// [\"xy\", \"qwer\", \"npm\"]</span></span><br><span class=\"line\">str.replace(reg ,str)，str 字符串，reg 正则表达式。</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>string 将匹配成功的部分替换为 该字符串。</p>\n</li>\n<li><p>function 将匹配成功的部分替换为 该函数的返回值，该函数形参分别对应 ==== 匹配整体，第一个子项，第二个子项…………</p>\n</li>\n</ol>\n<p>最终返回新字符串（不改变原来的字符串str）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[abc]/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"lyabc\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nS = str.replace( reg , <span class=\"string\">\"6666666\"</span> ); <span class=\"comment\">//ly666666666666666666666</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"abc\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nS = str.replace(<span class=\"string\">\"a\"</span> , <span class=\"string\">\"x\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( nS );<span class=\"comment\">//xbc</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[abc]/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"lyabc\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nS = str.replace(reg , <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"string\">\"x\"</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( nS ); <span class=\"comment\">//lyxxx</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/hbb(a)(ly)/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"ssshbbalyppp\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nS = str.replace(reg , <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i,j,k</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( i + <span class=\"string\">\"---\"</span> + j + <span class=\"string\">\"---\"</span> + k ); <span class=\"comment\">//hbbaly---a---ly</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( nS ); <span class=\"comment\">//sssundefinedppp</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[abc]/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"lyabc\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nS = str.replace(reg , <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">f</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> f+<span class=\"string\">\"x\"</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( nS ); <span class=\"comment\">//lyaxbxcx</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h2><p>.  ：正则里面代表任意字符</p>\n<p>^ ： 在字符集之外，代表起始部分</p>\n<p>$ ： 代表结束部分</p>\n<p>特殊字符：</p>\n<p>/ \\ { } ( ) [ ] . ^ $ + * ? |（字符集里面要注意与上面不同）。</p>\n<p>惰性： 给任意量词后加 ? 变成惰性匹配，尽量往少着匹配</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/./</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"bagb\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match( reg ) );  <span class=\"comment\">//0:\"b\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/^b/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"bagb\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match( reg ) );  <span class=\"comment\">//[\"b\", index: 0, input: \"bagb\"]</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/a&#123;2,4&#125;?/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"aaaaa\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match( reg ) );  <span class=\"comment\">//[\"aa\", index: 0, input: \"aaaaa\"]</span></span><br></pre></td></tr></table></figure>\n\n<p>常用的一些正则表达式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qq : <span class=\"regexp\">/^[1-9]\\d&#123;4,9&#125;$/</span>,<span class=\"comment\">//QQ号</span></span><br><span class=\"line\">user : <span class=\"regexp\">/^[a-zA-Z_]\\w&#123;5,17&#125;$/</span>,<span class=\"comment\">//用户名</span></span><br><span class=\"line\">pwd : <span class=\"regexp\">/^[\\w~!@#%$^&amp;*()+&#123;&#125;:\"&lt;&gt;?|`,/\\[\\]\\-\\\\\\.]&#123;6,18&#125;$/</span>,<span class=\"comment\">//密码</span></span><br><span class=\"line\">tel : <span class=\"regexp\">/^1[3-8]\\d&#123;9&#125;$/</span>,<span class=\"comment\">//手机号</span></span><br><span class=\"line\">mail : <span class=\"regexp\">/^[1-9a-z_]\\w&#123;5,17&#125;@[\\da-z]&#123;2,&#125;(\\.[a-z]&#123;2,4&#125;)&#123;1,2&#125;$/i</span>,<span class=\"comment\">//邮箱</span></span><br><span class=\"line\">IDCard : <span class=\"regexp\">/^[1-9]\\d&#123;16&#125;[\\dx]$/i</span><span class=\"comment\">//身份证号</span></span><br></pre></td></tr></table></figure>","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<h2 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h2><p>用来匹配某一段字符串满不满足某个规则的对象。</p>\n<p>找出字符里面的数字集合[‘123’,’60’,’753’]：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"123gou60dan753\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\"><span class=\"keyword\">var</span> s = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,length=str.length; i &lt; length; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( !<span class=\"built_in\">isNaN</span>(str.charAt(i)) )&#123;</span><br><span class=\"line\">    s += str.charAt(i);</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( s )&#123;</span><br><span class=\"line\">    arr.push( s );</span><br><span class=\"line\">    s = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( s )&#123;</span><br><span class=\"line\">  arr.push( s );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用正则我们只需一行代码搞定：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"123gou888dan753\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = str.match(<span class=\"regexp\">/\\d+/g</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"reg-test-str\"><a href=\"#reg-test-str\" class=\"headerlink\" title=\"reg.test(str)\"></a>reg.test(str)</h3><p>返回一个布尔值，匹配成功返回<code>true</code>，匹配失败返回<code>false</code>。</p>\n<p>/正则表达式主体/修饰符(可选)，如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> r = <span class=\"regexp\">/123/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"狗蛋123\"</span>;</span><br><span class=\"line\">alert( r.test( str ) ); <span class=\"comment\">//true;</span></span><br></pre></td></tr></table></figure>\n\n<p>如果匹配的是字符串该怎么转化：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">\"123\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> r = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(a);</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"狗蛋123\"</span>;</span><br><span class=\"line\">alert( r.test( str ) );   <span class=\"comment\">//true;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"转义：\"><a href=\"#转义：\" class=\"headerlink\" title=\"转义：\\\"></a>转义：\\</h2><ol>\n<li><p>当我们在匹配有特殊意义的字符的时候，我们需要加 \\ 符号。特殊字符有哪些？<br>/ \\ { } ? + * ( )</p>\n</li>\n<li><p>\\符号，在配合一些特定的字符的时候，有特殊的意义。\\n \\r \\t 字符串里面也有这些<br>\\S 非空格</p>\n</li>\n</ol>\n<p>\\s 空格</p>\n<p>\\d 数字</p>\n<p>\\D 非数字</p>\n<p>\\w 字符（数字、字母、_）</p>\n<p>\\W 非字符</p>\n<p>\\b 独立部分 起始、结束、连词符(除了\\w包含的之外)</p>\n<p>\\B 非独立部分</p>\n<p><strong>匹配一个空格</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/\\S/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"789  8\"</span>;</span><br><span class=\"line\">alert( reg.test(str) );  <span class=\"comment\">//true;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>匹配两个数字</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/\\d\\d/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"Goudan00\"</span>;</span><br><span class=\"line\">alert( reg.test(str) );  <span class=\"comment\">//true;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>匹配字符</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/\\w/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str =<span class=\"string\">\"狗_蛋\"</span>;</span><br><span class=\"line\">alert( reg.test(str) ); <span class=\"comment\">//true;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>匹配以1234开头或者结尾</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/\\b1234\\b/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"1234-dgfdgsd\"</span>;</span><br><span class=\"line\">alert( reg.test(str) ); <span class=\"comment\">//true;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"量词\"><a href=\"#量词\" class=\"headerlink\" title=\"量词\"></a>量词</h2><p>量词：{}</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"number\">5</span>&#125; n = <span class=\"number\">5</span></span><br><span class=\"line\">&#123;<span class=\"number\">1</span>,<span class=\"number\">3</span>&#125; <span class=\"number\">1</span> &lt;= n &lt;= <span class=\"number\">3</span></span><br><span class=\"line\">&#123;<span class=\"number\">2</span>,&#125; <span class=\"number\">2</span> &lt;= n</span><br></pre></td></tr></table></figure>\n\n<p>有几种非常特殊的量词，可以用特定的符号来表示</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125; ?</span><br><span class=\"line\">&#123;<span class=\"number\">1</span>,&#125; +</span><br><span class=\"line\">&#123;<span class=\"number\">0</span>,&#125; *</span><br><span class=\"line\"><span class=\"keyword\">var</span> r = <span class=\"regexp\">/1&#123;5&#125;/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"1狗蛋11111111\"</span>;</span><br><span class=\"line\">alert( r.test( str ) ); <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"match（）\"><a href=\"#match（）\" class=\"headerlink\" title=\"match（）\"></a>match（）</h2><p><code>str.match(reg)</code>,返回一个数组，包含着匹配内容的类数组，如果匹配不成功返回<code>null</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/1&#123;3,&#125;/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"狗蛋111111\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) );  <span class=\"comment\">// 0：\"111111\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"标识\"><a href=\"#标识\" class=\"headerlink\" title=\"标识\"></a>标识</h2><p>i 不区分大小写</p>\n<p>m 换行匹配</p>\n<p>g 全局匹配</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/1&#123;2&#125;/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"11狗11蛋11\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) ); <span class=\"comment\">//0：\"11\"，1:\"11，\"2:\"11\"，length:3</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/abc/gi</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"Abc\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) ); <span class=\"comment\">//0:'Abc'</span></span><br></pre></td></tr></table></figure>\n\n<p>RegExp的使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> x = <span class=\"string\">\"ig\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"123Gou888dgn753\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">\"\\g\"</span> , x);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) ); <span class=\"comment\">//[\"G\", \"g\"]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"子集\"><a href=\"#子集\" class=\"headerlink\" title=\"子集\"></a>子集</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/狗蛋((12)(3))/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"去去去狗蛋123我我我\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) );  <span class=\"comment\">// 0:\"狗蛋123\",1:\"123\",2:\"12\",3:\"3\"</span></span><br></pre></td></tr></table></figure>\n\n<p><code>match</code> 在匹配加了标识g的正则的时候，成功的话返回的是一个真正的数组，并且不包含子集。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/1212(12)&#123;2,3&#125;/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"12121212\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) );  <span class=\"comment\">// [\"12121212\"]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符集\"><a href=\"#字符集\" class=\"headerlink\" title=\"字符集\"></a>字符集</h2><p>字符集： []</p>\n<ol>\n<li>一段连续的内容：</li>\n</ol>\n<p>[0-9]</p>\n<p>[a-z]</p>\n<p>[A-Z]</p>\n<p>[\\u4e00-\\u9fa5]</p>\n<ol start=\"2\">\n<li><p>或者 |</p>\n</li>\n<li><p>除了 [^]</p>\n</li>\n</ol>\n<p>放在字符集最开始才有除了的意思，否则就是没有特殊意义</p>\n<p>注意：</p>\n<p>①：- 在字符集里面（可能）是有特殊意义的，所以在字符集里面要匹配 “-“ 本身最好加 \\；</p>\n<p>②：- 在字符集之外是没有特殊意义的；</p>\n<p>③：大多数在正则里面有特殊意义的字符，在字符集里面都没有特殊意义；(){}?+*</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[0-9]/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"hsha12\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) ); <span class=\"comment\">//0:\"1\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/a|bc/g</span>; <span class=\"comment\">//整体的或者   a  bc   </span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"ac123bc\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) );</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/(a|b)c/g</span>; <span class=\"comment\">//局部的子集内的或者  ac  bc</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"ac123bc\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) );</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[a\\-0]/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"a-b10\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) ); <span class=\"comment\">//[\"a\", \"-\", \"0\"]</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[(a&#123;8,9&#125;)]/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"a1bxa2a\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) ); <span class=\"comment\">//[\"a\", index: 0, input: \"a1bxa2a\"]</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[a^b]/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"^ac\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match(reg) ); <span class=\"comment\">//[\"^\", \"a\"]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用字符串方法\"><a href=\"#使用字符串方法\" class=\"headerlink\" title=\"使用字符串方法\"></a>使用字符串方法</h2><ol>\n<li><p>字符集后面也能加量词</p>\n</li>\n<li><p>数字转义是有特殊意义的，在字符串里面也是一样，但是不需要去了解是什么东西</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[abc]&#123;3&#125;/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"cab\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match( reg ) );<span class=\"comment\">//0:\"cab\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/a\\1/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"aaa\\1\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match( reg ) );</span><br></pre></td></tr></table></figure>\n\n<p><code>search()</code> 方法 用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串，并返回子串的起始位置。匹配失败返回-1。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/hbb/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"hbbalyhbb\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match( reg ) );<span class=\"comment\">//[\"hbb\", index: 0, input: \"hbbalyhbb\"]</span></span><br></pre></td></tr></table></figure>\n\n<p><code>split（</code>）方法：以XX为分隔符，被分割的组成一个数组。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[bc]/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"xybqwercnpm\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.split(reg) ); <span class=\"comment\">// [\"xy\", \"qwer\", \"npm\"]</span></span><br><span class=\"line\">str.replace(reg ,str)，str 字符串，reg 正则表达式。</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>string 将匹配成功的部分替换为 该字符串。</p>\n</li>\n<li><p>function 将匹配成功的部分替换为 该函数的返回值，该函数形参分别对应 ==== 匹配整体，第一个子项，第二个子项…………</p>\n</li>\n</ol>\n<p>最终返回新字符串（不改变原来的字符串str）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[abc]/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"lyabc\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nS = str.replace( reg , <span class=\"string\">\"6666666\"</span> ); <span class=\"comment\">//ly666666666666666666666</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"abc\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nS = str.replace(<span class=\"string\">\"a\"</span> , <span class=\"string\">\"x\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( nS );<span class=\"comment\">//xbc</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[abc]/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"lyabc\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nS = str.replace(reg , <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"string\">\"x\"</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( nS ); <span class=\"comment\">//lyxxx</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/hbb(a)(ly)/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"ssshbbalyppp\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nS = str.replace(reg , <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i,j,k</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log( i + <span class=\"string\">\"---\"</span> + j + <span class=\"string\">\"---\"</span> + k ); <span class=\"comment\">//hbbaly---a---ly</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( nS ); <span class=\"comment\">//sssundefinedppp</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/[abc]/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"lyabc\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nS = str.replace(reg , <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">f</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">return</span> f+<span class=\"string\">\"x\"</span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( nS ); <span class=\"comment\">//lyaxbxcx</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h2><p>.  ：正则里面代表任意字符</p>\n<p>^ ： 在字符集之外，代表起始部分</p>\n<p>$ ： 代表结束部分</p>\n<p>特殊字符：</p>\n<p>/ \\ { } ( ) [ ] . ^ $ + * ? |（字符集里面要注意与上面不同）。</p>\n<p>惰性： 给任意量词后加 ? 变成惰性匹配，尽量往少着匹配</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/./</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"bagb\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match( reg ) );  <span class=\"comment\">//0:\"b\"</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/^b/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"bagb\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match( reg ) );  <span class=\"comment\">//[\"b\", index: 0, input: \"bagb\"]</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/a&#123;2,4&#125;?/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"aaaaa\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log( str.match( reg ) );  <span class=\"comment\">//[\"aa\", index: 0, input: \"aaaaa\"]</span></span><br></pre></td></tr></table></figure>\n\n<p>常用的一些正则表达式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qq : <span class=\"regexp\">/^[1-9]\\d&#123;4,9&#125;$/</span>,<span class=\"comment\">//QQ号</span></span><br><span class=\"line\">user : <span class=\"regexp\">/^[a-zA-Z_]\\w&#123;5,17&#125;$/</span>,<span class=\"comment\">//用户名</span></span><br><span class=\"line\">pwd : <span class=\"regexp\">/^[\\w~!@#%$^&amp;*()+&#123;&#125;:\"&lt;&gt;?|`,/\\[\\]\\-\\\\\\.]&#123;6,18&#125;$/</span>,<span class=\"comment\">//密码</span></span><br><span class=\"line\">tel : <span class=\"regexp\">/^1[3-8]\\d&#123;9&#125;$/</span>,<span class=\"comment\">//手机号</span></span><br><span class=\"line\">mail : <span class=\"regexp\">/^[1-9a-z_]\\w&#123;5,17&#125;@[\\da-z]&#123;2,&#125;(\\.[a-z]&#123;2,4&#125;)&#123;1,2&#125;$/i</span>,<span class=\"comment\">//邮箱</span></span><br><span class=\"line\">IDCard : <span class=\"regexp\">/^[1-9]\\d&#123;16&#125;[\\dx]$/i</span><span class=\"comment\">//身份证号</span></span><br></pre></td></tr></table></figure>"},{"title":"跨域技术","comments":1,"description":"跨源资源共享，是W3C的一个工作草案，定义了在必须访问跨源资源时，浏览器与服务器该如何沟通。其背后的基本思想是使用自定义的HTTP头部，让浏览器与服务器进行沟通，从而决定请求或响应是应该成功还是应该失败。","date":"2016-09-22T02:29:10.000Z","keywords":"跨域技术","_content":"\n## CORS:跨域资源共享\n\n(Cross-Origin Resource Sharing），跨源资源共享，是W3C的一个工作草案，定义了在必须访问跨源资源时，浏览器与服务器该如何沟通。其背后的基本思想是使用自定义的HTTP头部，让浏览器与服务器进行沟通，从而决定请求或响应是应该成功还是应该失败。\n\n### `IE`对`CORS`的实现：\n\n引入了`XDR`（XDomainREquest），这个与XHR类似，但能安全可靠的实现跨域通信。与XHR的不同之处：\n\n`cookie`不会随便请求发送，也不会随响应返回。\n智能设置请求头部信息中的 `Content-Type`字段 。\n不能访问响应头部信息 。\n只支持`get`和`post`请求。\n`XDR`使用方法:\n\n1、创建XDR对象；\n2、调用open（）方法，这里open方法只有两个参数，因为所有XDR请求都是异步执行的；\n\n3、调用send（）方法。\n\n```js\nvar xdr = new XDomainRequest();\n xdr.onload = function () {\n     alert(xdr.responseText);\n };\n xdr.onerror = function () { //错误处理程序\n     alert(\"An error occurred.\");\n };\n xdr.open(\"post\",\"http://www.somewhert-else.com/page/\");\n xdr.send(null);\n```\n\n由于导致`XDR`请求失败的因素有很多，因此不要忘记通过`onerror`事件处理程序来捕获该事件。\n\n为了支持`post`请求，`XDR`对象提供了`contentType`属性，用来表示发送数据的格式：\n\n```js\nvar xdr = new XDomainRequest();\nxdr.onload = function () {\n    alert(xdr.responseText);\n};\nxdr.onerror = function () { //错误处理程序\n    alert(\"An error occurred.\");\n};\nxdr.open(\"post\",\"http://www.somewhert-else.com/page/\");\nxdr.contentType = \"application/x-www-form-urlencoded\";\nxdr.send(\"name1=value1&name2=value2\");\n```\n\n这个属性是通过XDR对象影响头部信息的唯一方式。\n\n### 其他浏览器对CORS的实现\n\n要请求位于另一个域的资源，使用标准的`XHR`对象并在`open（）`方法传入绝对url：\n\n```js\nvar xhr =createXHR();\nxhr.onreadystatechange = function () {\nif (xhr.readyState===4){\nif((xhr.status>=200&&xhr.status<300 || xhr.status===304)){\n            alert(xhr.responseText)\n        }else{\n            alert(\"Request was unsuccessful:\" +xhr.status);\n        }\n    }\n};\nxhr.open(\"get\",\"http://www.somewhert-else.com/page/\");\nxdr.send(null);\n```\n\n要使所有浏览器都支持简单的请求，检测`XHR`是否支持`CORS`的最简单的方式，就是检查是否存在`withCredentials` 属性。在结合检测`XDomainRequest`对象是否存在，就可以兼顾所有浏览器。\n\n```js\nfunction createCORSRequest (method,url) {\nvar xhr = new XMLHttpRequest();\nif (\"withCredentails\" in xhr) {\n        xhr.open(method,url,true);\n    } else if (typeof XDomainRequest != \"undefined\") {\n        xhr = new XDomainRequest();\n        xhr.open(method,url);\n    } else {\n        xhr = null;\n    }\nreturn xhr;\n}\nvar request = createCORSRequest(\"get\",\"http://www.somewhere-else.com/page/\");\nif(request) {\n    request.onload = function (){\n//对responseText处理\n    };\n    request.send();\n}\n```\n\n## 图像Ping\n一个网页可以从任何网页中加载图像，不用担心跨域不跨域。使用它们的`onload`和`onerror`事件处理程序来确定是否接受到了响应。\n\n图像`Ping`是与服务器进行简单/单向的跨域通信的一种方式。请求的数据是通过查询字符串的方式发送的。\n\n```js\nvar img = new Image();\nimg.onload =img.onerror = function () {\n    alert(\"Done!\");\n};\nimg.src = \"http://www.example.com/test?name=Nicholas\";\n```\n\n## JSONP\n\n关于`JSONP`内容可以查看：http://www.hbbaly.com/2017/10/08/jsonp/\n\n## Comet\n\n`Ajax`是一种从页面向服务器请求数据的技术，而`Comet`是一种服务器向页面推送数据的技术。`Comet`能够让信息近乎实时的被推送到页面上，非常适合处理体育比赛的分数和股票报价。\n\n有两种实现`Comet`的方式：长轮询和流。\n\n长轮询是短轮询的一个翻版，即浏览器定时向服务器发送请求，看有没有更新的数据。页面发起一个到服务器的请求，然后服务器一直保持连接打开，直到有数据可发送。发送完数据之后，浏览器关闭连接，接着又发起一个到服务器的新请求。这一过程在页面打开期间一直持续不断。\n\n`HTTP`流： 浏览器向服务器发送一个请求，而服务器保持连接打开，然后周期性的向浏览器发送数据。\n\n用XHR对象实现`HTTP`流的典型代码：\n\n```js\nfunction createStreamingClient (url,progress,finished) {\nvar xhr = new XMLHttpRequest();\nvar received = 0;\n    xhr.open(\"get\",url,true);\n    xhr.onreadystatechange = function () {\nvar result;\nif (xhr.readyState == 3) {\n//只取得最近数据并调整计数器\n            result = xhr.responseText.substring(received);\n            received += result.length;\n//调用progress函数\n            progress(result);\n        } else if (xhr.readyState == 4) {\n            finished(xhr.responseText);\n        }\n    };\n    xhr.send(null);\nreturn xhr;\n}\nvar client = createStreamingClient(\"s.php\",function(data){\n    alert(\"Received\" + data);\n},function (data) {\n    alert(\"Done!\")\n});\n```\n\n## SSE 服务器发送事件\n\n`SSE`是围绕只读`Comet`交互推出的`API`，用于创建到服务器的单向连接，服务器通过这个连接可以发送任意数量的数据。\n\n首先，要创建一个新的`EventSource`对象，并传入一个入口点，传入的`URL`必须与原页面同源。`EventSource`的实例有一个`readyState`属性，值为0表示正连接到服务器，1为表示打开了连接，2为表示关闭了连接。\n\n## Web Sockets\n\n其目标是在一个单独的持久连接上提供全双工/双向通信。\n在`JavaScript`中创建了`Web Sockets`之后，会有一个`HTTP`请求发送到服务器以发起连接，在取得服务器响应后，建立的连接会使用`HTTP`升级从`HTTP`协议交换为`Web Socket` 协议。\n使用自定义协议的好处是：能够在客户端和服务器之间发送非常少量的数据，而不必担心HTTP那样字节级的开销。\n\n1、实例`WebSocket`对象，并传入`URL`\n\n`var socket = new WebSocket(\"ws://www.example.com/server.php\");`\n`\n必须传入绝对URL\n实例化`WebSocket`对象后，浏览器会马上尝试创建连接。\n\n2、发送和接收数据\n\n```js\nvar message ={\n  time: new Date(),\n  text:\"hello world\"\n}\nsocket.send(JSON.stringify(message));\n```\n\n`WebSocket`只能通过连接发送纯文本数据，因此将数据序列化为`JSON`字符串。\n\n\n参考资料：JavaScript高级程序设计","source":"_posts/js-14.md","raw":"---\ntitle: 跨域技术\ncomments: true\ndescription: 跨源资源共享，是W3C的一个工作草案，定义了在必须访问跨源资源时，浏览器与服务器该如何沟通。其背后的基本思想是使用自定义的HTTP头部，让浏览器与服务器进行沟通，从而决定请求或响应是应该成功还是应该失败。\ntags: \"js\"\ndate: 2016-9-22 10:29:10\ncategories: \"js\"\nkeywords: 跨域技术\n---\n\n## CORS:跨域资源共享\n\n(Cross-Origin Resource Sharing），跨源资源共享，是W3C的一个工作草案，定义了在必须访问跨源资源时，浏览器与服务器该如何沟通。其背后的基本思想是使用自定义的HTTP头部，让浏览器与服务器进行沟通，从而决定请求或响应是应该成功还是应该失败。\n\n### `IE`对`CORS`的实现：\n\n引入了`XDR`（XDomainREquest），这个与XHR类似，但能安全可靠的实现跨域通信。与XHR的不同之处：\n\n`cookie`不会随便请求发送，也不会随响应返回。\n智能设置请求头部信息中的 `Content-Type`字段 。\n不能访问响应头部信息 。\n只支持`get`和`post`请求。\n`XDR`使用方法:\n\n1、创建XDR对象；\n2、调用open（）方法，这里open方法只有两个参数，因为所有XDR请求都是异步执行的；\n\n3、调用send（）方法。\n\n```js\nvar xdr = new XDomainRequest();\n xdr.onload = function () {\n     alert(xdr.responseText);\n };\n xdr.onerror = function () { //错误处理程序\n     alert(\"An error occurred.\");\n };\n xdr.open(\"post\",\"http://www.somewhert-else.com/page/\");\n xdr.send(null);\n```\n\n由于导致`XDR`请求失败的因素有很多，因此不要忘记通过`onerror`事件处理程序来捕获该事件。\n\n为了支持`post`请求，`XDR`对象提供了`contentType`属性，用来表示发送数据的格式：\n\n```js\nvar xdr = new XDomainRequest();\nxdr.onload = function () {\n    alert(xdr.responseText);\n};\nxdr.onerror = function () { //错误处理程序\n    alert(\"An error occurred.\");\n};\nxdr.open(\"post\",\"http://www.somewhert-else.com/page/\");\nxdr.contentType = \"application/x-www-form-urlencoded\";\nxdr.send(\"name1=value1&name2=value2\");\n```\n\n这个属性是通过XDR对象影响头部信息的唯一方式。\n\n### 其他浏览器对CORS的实现\n\n要请求位于另一个域的资源，使用标准的`XHR`对象并在`open（）`方法传入绝对url：\n\n```js\nvar xhr =createXHR();\nxhr.onreadystatechange = function () {\nif (xhr.readyState===4){\nif((xhr.status>=200&&xhr.status<300 || xhr.status===304)){\n            alert(xhr.responseText)\n        }else{\n            alert(\"Request was unsuccessful:\" +xhr.status);\n        }\n    }\n};\nxhr.open(\"get\",\"http://www.somewhert-else.com/page/\");\nxdr.send(null);\n```\n\n要使所有浏览器都支持简单的请求，检测`XHR`是否支持`CORS`的最简单的方式，就是检查是否存在`withCredentials` 属性。在结合检测`XDomainRequest`对象是否存在，就可以兼顾所有浏览器。\n\n```js\nfunction createCORSRequest (method,url) {\nvar xhr = new XMLHttpRequest();\nif (\"withCredentails\" in xhr) {\n        xhr.open(method,url,true);\n    } else if (typeof XDomainRequest != \"undefined\") {\n        xhr = new XDomainRequest();\n        xhr.open(method,url);\n    } else {\n        xhr = null;\n    }\nreturn xhr;\n}\nvar request = createCORSRequest(\"get\",\"http://www.somewhere-else.com/page/\");\nif(request) {\n    request.onload = function (){\n//对responseText处理\n    };\n    request.send();\n}\n```\n\n## 图像Ping\n一个网页可以从任何网页中加载图像，不用担心跨域不跨域。使用它们的`onload`和`onerror`事件处理程序来确定是否接受到了响应。\n\n图像`Ping`是与服务器进行简单/单向的跨域通信的一种方式。请求的数据是通过查询字符串的方式发送的。\n\n```js\nvar img = new Image();\nimg.onload =img.onerror = function () {\n    alert(\"Done!\");\n};\nimg.src = \"http://www.example.com/test?name=Nicholas\";\n```\n\n## JSONP\n\n关于`JSONP`内容可以查看：http://www.hbbaly.com/2017/10/08/jsonp/\n\n## Comet\n\n`Ajax`是一种从页面向服务器请求数据的技术，而`Comet`是一种服务器向页面推送数据的技术。`Comet`能够让信息近乎实时的被推送到页面上，非常适合处理体育比赛的分数和股票报价。\n\n有两种实现`Comet`的方式：长轮询和流。\n\n长轮询是短轮询的一个翻版，即浏览器定时向服务器发送请求，看有没有更新的数据。页面发起一个到服务器的请求，然后服务器一直保持连接打开，直到有数据可发送。发送完数据之后，浏览器关闭连接，接着又发起一个到服务器的新请求。这一过程在页面打开期间一直持续不断。\n\n`HTTP`流： 浏览器向服务器发送一个请求，而服务器保持连接打开，然后周期性的向浏览器发送数据。\n\n用XHR对象实现`HTTP`流的典型代码：\n\n```js\nfunction createStreamingClient (url,progress,finished) {\nvar xhr = new XMLHttpRequest();\nvar received = 0;\n    xhr.open(\"get\",url,true);\n    xhr.onreadystatechange = function () {\nvar result;\nif (xhr.readyState == 3) {\n//只取得最近数据并调整计数器\n            result = xhr.responseText.substring(received);\n            received += result.length;\n//调用progress函数\n            progress(result);\n        } else if (xhr.readyState == 4) {\n            finished(xhr.responseText);\n        }\n    };\n    xhr.send(null);\nreturn xhr;\n}\nvar client = createStreamingClient(\"s.php\",function(data){\n    alert(\"Received\" + data);\n},function (data) {\n    alert(\"Done!\")\n});\n```\n\n## SSE 服务器发送事件\n\n`SSE`是围绕只读`Comet`交互推出的`API`，用于创建到服务器的单向连接，服务器通过这个连接可以发送任意数量的数据。\n\n首先，要创建一个新的`EventSource`对象，并传入一个入口点，传入的`URL`必须与原页面同源。`EventSource`的实例有一个`readyState`属性，值为0表示正连接到服务器，1为表示打开了连接，2为表示关闭了连接。\n\n## Web Sockets\n\n其目标是在一个单独的持久连接上提供全双工/双向通信。\n在`JavaScript`中创建了`Web Sockets`之后，会有一个`HTTP`请求发送到服务器以发起连接，在取得服务器响应后，建立的连接会使用`HTTP`升级从`HTTP`协议交换为`Web Socket` 协议。\n使用自定义协议的好处是：能够在客户端和服务器之间发送非常少量的数据，而不必担心HTTP那样字节级的开销。\n\n1、实例`WebSocket`对象，并传入`URL`\n\n`var socket = new WebSocket(\"ws://www.example.com/server.php\");`\n`\n必须传入绝对URL\n实例化`WebSocket`对象后，浏览器会马上尝试创建连接。\n\n2、发送和接收数据\n\n```js\nvar message ={\n  time: new Date(),\n  text:\"hello world\"\n}\nsocket.send(JSON.stringify(message));\n```\n\n`WebSocket`只能通过连接发送纯文本数据，因此将数据序列化为`JSON`字符串。\n\n\n参考资料：JavaScript高级程序设计","slug":"js-14","published":1,"updated":"2019-09-20T01:22:46.140Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2a10012n0b9cly2ylo4","content":"<h2 id=\"CORS-跨域资源共享\"><a href=\"#CORS-跨域资源共享\" class=\"headerlink\" title=\"CORS:跨域资源共享\"></a>CORS:跨域资源共享</h2><p>(Cross-Origin Resource Sharing），跨源资源共享，是W3C的一个工作草案，定义了在必须访问跨源资源时，浏览器与服务器该如何沟通。其背后的基本思想是使用自定义的HTTP头部，让浏览器与服务器进行沟通，从而决定请求或响应是应该成功还是应该失败。</p>\n<h3 id=\"IE对CORS的实现：\"><a href=\"#IE对CORS的实现：\" class=\"headerlink\" title=\"IE对CORS的实现：\"></a><code>IE</code>对<code>CORS</code>的实现：</h3><p>引入了<code>XDR</code>（XDomainREquest），这个与XHR类似，但能安全可靠的实现跨域通信。与XHR的不同之处：</p>\n<p><code>cookie</code>不会随便请求发送，也不会随响应返回。<br>智能设置请求头部信息中的 <code>Content-Type</code>字段 。<br>不能访问响应头部信息 。<br>只支持<code>get</code>和<code>post</code>请求。<br><code>XDR</code>使用方法:</p>\n<p>1、创建XDR对象；<br>2、调用open（）方法，这里open方法只有两个参数，因为所有XDR请求都是异步执行的；</p>\n<p>3、调用send（）方法。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xdr = <span class=\"keyword\">new</span> XDomainRequest();</span><br><span class=\"line\"> xdr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     alert(xdr.responseText);</span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"> xdr.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">//错误处理程序</span></span><br><span class=\"line\">     alert(<span class=\"string\">\"An error occurred.\"</span>);</span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"> xdr.open(<span class=\"string\">\"post\"</span>,<span class=\"string\">\"http://www.somewhert-else.com/page/\"</span>);</span><br><span class=\"line\"> xdr.send(<span class=\"literal\">null</span>);</span><br></pre></td></tr></table></figure>\n\n<p>由于导致<code>XDR</code>请求失败的因素有很多，因此不要忘记通过<code>onerror</code>事件处理程序来捕获该事件。</p>\n<p>为了支持<code>post</code>请求，<code>XDR</code>对象提供了<code>contentType</code>属性，用来表示发送数据的格式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xdr = <span class=\"keyword\">new</span> XDomainRequest();</span><br><span class=\"line\">xdr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(xdr.responseText);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">xdr.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">//错误处理程序</span></span><br><span class=\"line\">    alert(<span class=\"string\">\"An error occurred.\"</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">xdr.open(<span class=\"string\">\"post\"</span>,<span class=\"string\">\"http://www.somewhert-else.com/page/\"</span>);</span><br><span class=\"line\">xdr.contentType = <span class=\"string\">\"application/x-www-form-urlencoded\"</span>;</span><br><span class=\"line\">xdr.send(<span class=\"string\">\"name1=value1&amp;name2=value2\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>这个属性是通过XDR对象影响头部信息的唯一方式。</p>\n<h3 id=\"其他浏览器对CORS的实现\"><a href=\"#其他浏览器对CORS的实现\" class=\"headerlink\" title=\"其他浏览器对CORS的实现\"></a>其他浏览器对CORS的实现</h3><p>要请求位于另一个域的资源，使用标准的<code>XHR</code>对象并在<code>open（）</code>方法传入绝对url：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xhr =createXHR();</span><br><span class=\"line\">xhr.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (xhr.readyState===<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>((xhr.status&gt;=<span class=\"number\">200</span>&amp;&amp;xhr.status&lt;<span class=\"number\">300</span> || xhr.status===<span class=\"number\">304</span>))&#123;</span><br><span class=\"line\">            alert(xhr.responseText)</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            alert(<span class=\"string\">\"Request was unsuccessful:\"</span> +xhr.status);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">xhr.open(<span class=\"string\">\"get\"</span>,<span class=\"string\">\"http://www.somewhert-else.com/page/\"</span>);</span><br><span class=\"line\">xdr.send(<span class=\"literal\">null</span>);</span><br></pre></td></tr></table></figure>\n\n<p>要使所有浏览器都支持简单的请求，检测<code>XHR</code>是否支持<code>CORS</code>的最简单的方式，就是检查是否存在<code>withCredentials</code> 属性。在结合检测<code>XDomainRequest</code>对象是否存在，就可以兼顾所有浏览器。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createCORSRequest</span> (<span class=\"params\">method,url</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"string\">\"withCredentails\"</span> <span class=\"keyword\">in</span> xhr) &#123;</span><br><span class=\"line\">        xhr.open(method,url,<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> XDomainRequest != <span class=\"string\">\"undefined\"</span>) &#123;</span><br><span class=\"line\">        xhr = <span class=\"keyword\">new</span> XDomainRequest();</span><br><span class=\"line\">        xhr.open(method,url);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        xhr = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> xhr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> request = createCORSRequest(<span class=\"string\">\"get\"</span>,<span class=\"string\">\"http://www.somewhere-else.com/page/\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(request) &#123;</span><br><span class=\"line\">    request.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//对responseText处理</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    request.send();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"图像Ping\"><a href=\"#图像Ping\" class=\"headerlink\" title=\"图像Ping\"></a>图像Ping</h2><p>一个网页可以从任何网页中加载图像，不用担心跨域不跨域。使用它们的<code>onload</code>和<code>onerror</code>事件处理程序来确定是否接受到了响应。</p>\n<p>图像<code>Ping</code>是与服务器进行简单/单向的跨域通信的一种方式。请求的数据是通过查询字符串的方式发送的。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\">img.onload =img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"Done!\"</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">img.src = <span class=\"string\">\"http://www.example.com/test?name=Nicholas\"</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"JSONP\"><a href=\"#JSONP\" class=\"headerlink\" title=\"JSONP\"></a>JSONP</h2><p>关于<code>JSONP</code>内容可以查看：<a href=\"http://www.hbbaly.com/2017/10/08/jsonp/\" target=\"_blank\" rel=\"noopener\">http://www.hbbaly.com/2017/10/08/jsonp/</a></p>\n<h2 id=\"Comet\"><a href=\"#Comet\" class=\"headerlink\" title=\"Comet\"></a>Comet</h2><p><code>Ajax</code>是一种从页面向服务器请求数据的技术，而<code>Comet</code>是一种服务器向页面推送数据的技术。<code>Comet</code>能够让信息近乎实时的被推送到页面上，非常适合处理体育比赛的分数和股票报价。</p>\n<p>有两种实现<code>Comet</code>的方式：长轮询和流。</p>\n<p>长轮询是短轮询的一个翻版，即浏览器定时向服务器发送请求，看有没有更新的数据。页面发起一个到服务器的请求，然后服务器一直保持连接打开，直到有数据可发送。发送完数据之后，浏览器关闭连接，接着又发起一个到服务器的新请求。这一过程在页面打开期间一直持续不断。</p>\n<p><code>HTTP</code>流： 浏览器向服务器发送一个请求，而服务器保持连接打开，然后周期性的向浏览器发送数据。</p>\n<p>用XHR对象实现<code>HTTP</code>流的典型代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createStreamingClient</span> (<span class=\"params\">url,progress,finished</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\"><span class=\"keyword\">var</span> received = <span class=\"number\">0</span>;</span><br><span class=\"line\">    xhr.open(<span class=\"string\">\"get\"</span>,url,<span class=\"literal\">true</span>);</span><br><span class=\"line\">    xhr.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> result;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (xhr.readyState == <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\"><span class=\"comment\">//只取得最近数据并调整计数器</span></span><br><span class=\"line\">            result = xhr.responseText.substring(received);</span><br><span class=\"line\">            received += result.length;</span><br><span class=\"line\"><span class=\"comment\">//调用progress函数</span></span><br><span class=\"line\">            progress(result);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (xhr.readyState == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">            finished(xhr.responseText);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    xhr.send(<span class=\"literal\">null</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> xhr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> client = createStreamingClient(<span class=\"string\">\"s.php\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"Received\"</span> + data);</span><br><span class=\"line\">&#125;,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"Done!\"</span>)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SSE-服务器发送事件\"><a href=\"#SSE-服务器发送事件\" class=\"headerlink\" title=\"SSE 服务器发送事件\"></a>SSE 服务器发送事件</h2><p><code>SSE</code>是围绕只读<code>Comet</code>交互推出的<code>API</code>，用于创建到服务器的单向连接，服务器通过这个连接可以发送任意数量的数据。</p>\n<p>首先，要创建一个新的<code>EventSource</code>对象，并传入一个入口点，传入的<code>URL</code>必须与原页面同源。<code>EventSource</code>的实例有一个<code>readyState</code>属性，值为0表示正连接到服务器，1为表示打开了连接，2为表示关闭了连接。</p>\n<h2 id=\"Web-Sockets\"><a href=\"#Web-Sockets\" class=\"headerlink\" title=\"Web Sockets\"></a>Web Sockets</h2><p>其目标是在一个单独的持久连接上提供全双工/双向通信。<br>在<code>JavaScript</code>中创建了<code>Web Sockets</code>之后，会有一个<code>HTTP</code>请求发送到服务器以发起连接，在取得服务器响应后，建立的连接会使用<code>HTTP</code>升级从<code>HTTP</code>协议交换为<code>Web Socket</code> 协议。<br>使用自定义协议的好处是：能够在客户端和服务器之间发送非常少量的数据，而不必担心HTTP那样字节级的开销。</p>\n<p>1、实例<code>WebSocket</code>对象，并传入<code>URL</code></p>\n<p><code>var socket = new WebSocket(&quot;ws://www.example.com/server.php&quot;);</code><br><code>必须传入绝对URL\n实例化</code>WebSocket`对象后，浏览器会马上尝试创建连接。</p>\n<p>2、发送和接收数据</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> message =&#123;</span><br><span class=\"line\">  time: <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(),</span><br><span class=\"line\">  text:<span class=\"string\">\"hello world\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">socket.send(<span class=\"built_in\">JSON</span>.stringify(message));</span><br></pre></td></tr></table></figure>\n\n<p><code>WebSocket</code>只能通过连接发送纯文本数据，因此将数据序列化为<code>JSON</code>字符串。</p>\n<p>参考资料：JavaScript高级程序设计</p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<h2 id=\"CORS-跨域资源共享\"><a href=\"#CORS-跨域资源共享\" class=\"headerlink\" title=\"CORS:跨域资源共享\"></a>CORS:跨域资源共享</h2><p>(Cross-Origin Resource Sharing），跨源资源共享，是W3C的一个工作草案，定义了在必须访问跨源资源时，浏览器与服务器该如何沟通。其背后的基本思想是使用自定义的HTTP头部，让浏览器与服务器进行沟通，从而决定请求或响应是应该成功还是应该失败。</p>\n<h3 id=\"IE对CORS的实现：\"><a href=\"#IE对CORS的实现：\" class=\"headerlink\" title=\"IE对CORS的实现：\"></a><code>IE</code>对<code>CORS</code>的实现：</h3><p>引入了<code>XDR</code>（XDomainREquest），这个与XHR类似，但能安全可靠的实现跨域通信。与XHR的不同之处：</p>\n<p><code>cookie</code>不会随便请求发送，也不会随响应返回。<br>智能设置请求头部信息中的 <code>Content-Type</code>字段 。<br>不能访问响应头部信息 。<br>只支持<code>get</code>和<code>post</code>请求。<br><code>XDR</code>使用方法:</p>\n<p>1、创建XDR对象；<br>2、调用open（）方法，这里open方法只有两个参数，因为所有XDR请求都是异步执行的；</p>\n<p>3、调用send（）方法。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xdr = <span class=\"keyword\">new</span> XDomainRequest();</span><br><span class=\"line\"> xdr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     alert(xdr.responseText);</span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"> xdr.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">//错误处理程序</span></span><br><span class=\"line\">     alert(<span class=\"string\">\"An error occurred.\"</span>);</span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"> xdr.open(<span class=\"string\">\"post\"</span>,<span class=\"string\">\"http://www.somewhert-else.com/page/\"</span>);</span><br><span class=\"line\"> xdr.send(<span class=\"literal\">null</span>);</span><br></pre></td></tr></table></figure>\n\n<p>由于导致<code>XDR</code>请求失败的因素有很多，因此不要忘记通过<code>onerror</code>事件处理程序来捕获该事件。</p>\n<p>为了支持<code>post</code>请求，<code>XDR</code>对象提供了<code>contentType</code>属性，用来表示发送数据的格式：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xdr = <span class=\"keyword\">new</span> XDomainRequest();</span><br><span class=\"line\">xdr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(xdr.responseText);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">xdr.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">//错误处理程序</span></span><br><span class=\"line\">    alert(<span class=\"string\">\"An error occurred.\"</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">xdr.open(<span class=\"string\">\"post\"</span>,<span class=\"string\">\"http://www.somewhert-else.com/page/\"</span>);</span><br><span class=\"line\">xdr.contentType = <span class=\"string\">\"application/x-www-form-urlencoded\"</span>;</span><br><span class=\"line\">xdr.send(<span class=\"string\">\"name1=value1&amp;name2=value2\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>这个属性是通过XDR对象影响头部信息的唯一方式。</p>\n<h3 id=\"其他浏览器对CORS的实现\"><a href=\"#其他浏览器对CORS的实现\" class=\"headerlink\" title=\"其他浏览器对CORS的实现\"></a>其他浏览器对CORS的实现</h3><p>要请求位于另一个域的资源，使用标准的<code>XHR</code>对象并在<code>open（）</code>方法传入绝对url：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xhr =createXHR();</span><br><span class=\"line\">xhr.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (xhr.readyState===<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>((xhr.status&gt;=<span class=\"number\">200</span>&amp;&amp;xhr.status&lt;<span class=\"number\">300</span> || xhr.status===<span class=\"number\">304</span>))&#123;</span><br><span class=\"line\">            alert(xhr.responseText)</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            alert(<span class=\"string\">\"Request was unsuccessful:\"</span> +xhr.status);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">xhr.open(<span class=\"string\">\"get\"</span>,<span class=\"string\">\"http://www.somewhert-else.com/page/\"</span>);</span><br><span class=\"line\">xdr.send(<span class=\"literal\">null</span>);</span><br></pre></td></tr></table></figure>\n\n<p>要使所有浏览器都支持简单的请求，检测<code>XHR</code>是否支持<code>CORS</code>的最简单的方式，就是检查是否存在<code>withCredentials</code> 属性。在结合检测<code>XDomainRequest</code>对象是否存在，就可以兼顾所有浏览器。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createCORSRequest</span> (<span class=\"params\">method,url</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"string\">\"withCredentails\"</span> <span class=\"keyword\">in</span> xhr) &#123;</span><br><span class=\"line\">        xhr.open(method,url,<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> XDomainRequest != <span class=\"string\">\"undefined\"</span>) &#123;</span><br><span class=\"line\">        xhr = <span class=\"keyword\">new</span> XDomainRequest();</span><br><span class=\"line\">        xhr.open(method,url);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        xhr = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> xhr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> request = createCORSRequest(<span class=\"string\">\"get\"</span>,<span class=\"string\">\"http://www.somewhere-else.com/page/\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(request) &#123;</span><br><span class=\"line\">    request.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//对responseText处理</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    request.send();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"图像Ping\"><a href=\"#图像Ping\" class=\"headerlink\" title=\"图像Ping\"></a>图像Ping</h2><p>一个网页可以从任何网页中加载图像，不用担心跨域不跨域。使用它们的<code>onload</code>和<code>onerror</code>事件处理程序来确定是否接受到了响应。</p>\n<p>图像<code>Ping</code>是与服务器进行简单/单向的跨域通信的一种方式。请求的数据是通过查询字符串的方式发送的。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\">img.onload =img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"Done!\"</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">img.src = <span class=\"string\">\"http://www.example.com/test?name=Nicholas\"</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"JSONP\"><a href=\"#JSONP\" class=\"headerlink\" title=\"JSONP\"></a>JSONP</h2><p>关于<code>JSONP</code>内容可以查看：<a href=\"http://www.hbbaly.com/2017/10/08/jsonp/\" target=\"_blank\" rel=\"noopener\">http://www.hbbaly.com/2017/10/08/jsonp/</a></p>\n<h2 id=\"Comet\"><a href=\"#Comet\" class=\"headerlink\" title=\"Comet\"></a>Comet</h2><p><code>Ajax</code>是一种从页面向服务器请求数据的技术，而<code>Comet</code>是一种服务器向页面推送数据的技术。<code>Comet</code>能够让信息近乎实时的被推送到页面上，非常适合处理体育比赛的分数和股票报价。</p>\n<p>有两种实现<code>Comet</code>的方式：长轮询和流。</p>\n<p>长轮询是短轮询的一个翻版，即浏览器定时向服务器发送请求，看有没有更新的数据。页面发起一个到服务器的请求，然后服务器一直保持连接打开，直到有数据可发送。发送完数据之后，浏览器关闭连接，接着又发起一个到服务器的新请求。这一过程在页面打开期间一直持续不断。</p>\n<p><code>HTTP</code>流： 浏览器向服务器发送一个请求，而服务器保持连接打开，然后周期性的向浏览器发送数据。</p>\n<p>用XHR对象实现<code>HTTP</code>流的典型代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createStreamingClient</span> (<span class=\"params\">url,progress,finished</span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\"><span class=\"keyword\">var</span> received = <span class=\"number\">0</span>;</span><br><span class=\"line\">    xhr.open(<span class=\"string\">\"get\"</span>,url,<span class=\"literal\">true</span>);</span><br><span class=\"line\">    xhr.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> result;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (xhr.readyState == <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\"><span class=\"comment\">//只取得最近数据并调整计数器</span></span><br><span class=\"line\">            result = xhr.responseText.substring(received);</span><br><span class=\"line\">            received += result.length;</span><br><span class=\"line\"><span class=\"comment\">//调用progress函数</span></span><br><span class=\"line\">            progress(result);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (xhr.readyState == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">            finished(xhr.responseText);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    xhr.send(<span class=\"literal\">null</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> xhr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> client = createStreamingClient(<span class=\"string\">\"s.php\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data</span>)</span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"Received\"</span> + data);</span><br><span class=\"line\">&#125;,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"Done!\"</span>)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SSE-服务器发送事件\"><a href=\"#SSE-服务器发送事件\" class=\"headerlink\" title=\"SSE 服务器发送事件\"></a>SSE 服务器发送事件</h2><p><code>SSE</code>是围绕只读<code>Comet</code>交互推出的<code>API</code>，用于创建到服务器的单向连接，服务器通过这个连接可以发送任意数量的数据。</p>\n<p>首先，要创建一个新的<code>EventSource</code>对象，并传入一个入口点，传入的<code>URL</code>必须与原页面同源。<code>EventSource</code>的实例有一个<code>readyState</code>属性，值为0表示正连接到服务器，1为表示打开了连接，2为表示关闭了连接。</p>\n<h2 id=\"Web-Sockets\"><a href=\"#Web-Sockets\" class=\"headerlink\" title=\"Web Sockets\"></a>Web Sockets</h2><p>其目标是在一个单独的持久连接上提供全双工/双向通信。<br>在<code>JavaScript</code>中创建了<code>Web Sockets</code>之后，会有一个<code>HTTP</code>请求发送到服务器以发起连接，在取得服务器响应后，建立的连接会使用<code>HTTP</code>升级从<code>HTTP</code>协议交换为<code>Web Socket</code> 协议。<br>使用自定义协议的好处是：能够在客户端和服务器之间发送非常少量的数据，而不必担心HTTP那样字节级的开销。</p>\n<p>1、实例<code>WebSocket</code>对象，并传入<code>URL</code></p>\n<p><code>var socket = new WebSocket(&quot;ws://www.example.com/server.php&quot;);</code><br><code>必须传入绝对URL\n实例化</code>WebSocket`对象后，浏览器会马上尝试创建连接。</p>\n<p>2、发送和接收数据</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> message =&#123;</span><br><span class=\"line\">  time: <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(),</span><br><span class=\"line\">  text:<span class=\"string\">\"hello world\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">socket.send(<span class=\"built_in\">JSON</span>.stringify(message));</span><br></pre></td></tr></table></figure>\n\n<p><code>WebSocket</code>只能通过连接发送纯文本数据，因此将数据序列化为<code>JSON</code>字符串。</p>\n<p>参考资料：JavaScript高级程序设计</p>\n"},{"title":"let与const命令","comments":1,"description":"let与const命令","date":"2016-06-19T02:29:10.000Z","keywords":"let与const命令","_content":"\n## let\n\n`let`命令与`var`命令类似，但是差别也是很大。\n\n（1）`let`命令只在`let`命令所在的代码块内有效。比如在`for`循环中\n\n```js\nfor(var i=0;i<5;i++){\n  console.log(i)  //0,1,2,3,4\n}\nconsole.log(i)  //5\nfor(let j = 0;j<5;j++){\n  console.log(j)   //0,1,2,3,4\n}\nconsole.log(j)  //Uncaught ReferenceError: j is not defined\n```\n\n计数器`j`只在`for`循环体内有效，在循环体外引用就会报错\n（2）`var` 存在变量提升，`let`不存在\n\n```js\nconsole.log(a)  // undefined\nvar a = 1\nconsole.log(b)  //b is not defined\nlet b = 0\n```\n\n（3） let不允许在同一个作用于内，声明同一个变量\n\n```js\n{\n    let a = 1\n    var a = 0  //Identifier 'a' has already been declared\n}\n{\n    let a = 1\n    let a = 0  //Identifier 'a' has already been declared\n}\n```\n\n（4）在代码块内，使用let命令声明变量之前，该变量都是不可用的\n```js\nvar a = 0\nfunction func(){\n    console.log(a)   //Uncaught ReferenceError: a is not defined\n    let a = 1;\n    console.log(a)   //1\n}\nfunc()\n```\n\n我们可以看到在使用`let`的时候，`func`函数形成了块级作用域，使用`let`命令声明变量之前，该变量都是不可用的。\n\n## const\n\n（1）const声明一个只读的常量。一旦声明，常量的值就不能改变。\n\n```js\nconst a = 1;\na = 1;   //Assignment to constant variable.\n```\n\n（2）如果`const`只声明不赋值，就会报错。\n\n```\nconst a ;  //Uncaught SyntaxError: Missing initializer in const declaration\n```\n（3）`const`的作用域与`let`命令相同：只在声明所在的块级作用域内有效，与`let`一样不可重复声明，在代码块内，使用`const`命令声明变量之前，该变量都是不可用的。\n\n（4）`const`实际上保证的不是数值的不变，而是保证变量指向的内存地址不得改动。\n\n```js\nconst arr = []\narr.push('a'),\nconsole.log(arr,arr.length) // ['a'],1\n arr = ['a']   //Uncaught TypeError: Assignment to constant variable\n//\nconst json = {\n    name:'hbb'\n}\njson.age = 20\nconsole.log(json)\njson = {\n    name:'hbb',\n    age:20\n}   //Uncaught TypeError: Assignment to constant variable\n\n```","source":"_posts/js-16.md","raw":"---\ntitle: let与const命令\ncomments: true\ndescription: let与const命令\ntags: \"es6\"\ndate: 2016-6-19 10:29:10\ncategories: \"js\"\nkeywords: let与const命令\n---\n\n## let\n\n`let`命令与`var`命令类似，但是差别也是很大。\n\n（1）`let`命令只在`let`命令所在的代码块内有效。比如在`for`循环中\n\n```js\nfor(var i=0;i<5;i++){\n  console.log(i)  //0,1,2,3,4\n}\nconsole.log(i)  //5\nfor(let j = 0;j<5;j++){\n  console.log(j)   //0,1,2,3,4\n}\nconsole.log(j)  //Uncaught ReferenceError: j is not defined\n```\n\n计数器`j`只在`for`循环体内有效，在循环体外引用就会报错\n（2）`var` 存在变量提升，`let`不存在\n\n```js\nconsole.log(a)  // undefined\nvar a = 1\nconsole.log(b)  //b is not defined\nlet b = 0\n```\n\n（3） let不允许在同一个作用于内，声明同一个变量\n\n```js\n{\n    let a = 1\n    var a = 0  //Identifier 'a' has already been declared\n}\n{\n    let a = 1\n    let a = 0  //Identifier 'a' has already been declared\n}\n```\n\n（4）在代码块内，使用let命令声明变量之前，该变量都是不可用的\n```js\nvar a = 0\nfunction func(){\n    console.log(a)   //Uncaught ReferenceError: a is not defined\n    let a = 1;\n    console.log(a)   //1\n}\nfunc()\n```\n\n我们可以看到在使用`let`的时候，`func`函数形成了块级作用域，使用`let`命令声明变量之前，该变量都是不可用的。\n\n## const\n\n（1）const声明一个只读的常量。一旦声明，常量的值就不能改变。\n\n```js\nconst a = 1;\na = 1;   //Assignment to constant variable.\n```\n\n（2）如果`const`只声明不赋值，就会报错。\n\n```\nconst a ;  //Uncaught SyntaxError: Missing initializer in const declaration\n```\n（3）`const`的作用域与`let`命令相同：只在声明所在的块级作用域内有效，与`let`一样不可重复声明，在代码块内，使用`const`命令声明变量之前，该变量都是不可用的。\n\n（4）`const`实际上保证的不是数值的不变，而是保证变量指向的内存地址不得改动。\n\n```js\nconst arr = []\narr.push('a'),\nconsole.log(arr,arr.length) // ['a'],1\n arr = ['a']   //Uncaught TypeError: Assignment to constant variable\n//\nconst json = {\n    name:'hbb'\n}\njson.age = 20\nconsole.log(json)\njson = {\n    name:'hbb',\n    age:20\n}   //Uncaught TypeError: Assignment to constant variable\n\n```","slug":"js-16","published":1,"updated":"2019-09-20T01:42:17.442Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2a20014n0b9wzgnyh94","content":"<h2 id=\"let\"><a href=\"#let\" class=\"headerlink\" title=\"let\"></a>let</h2><p><code>let</code>命令与<code>var</code>命令类似，但是差别也是很大。</p>\n<p>（1）<code>let</code>命令只在<code>let</code>命令所在的代码块内有效。比如在<code>for</code>循环中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">5</span>;i++)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i)  <span class=\"comment\">//0,1,2,3,4</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(i)  <span class=\"comment\">//5</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>;j&lt;<span class=\"number\">5</span>;j++)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(j)   <span class=\"comment\">//0,1,2,3,4</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(j)  <span class=\"comment\">//Uncaught ReferenceError: j is not defined</span></span><br></pre></td></tr></table></figure>\n\n<p>计数器<code>j</code>只在<code>for</code>循环体内有效，在循环体外引用就会报错<br>（2）<code>var</code> 存在变量提升，<code>let</code>不存在</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(a)  <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b)  <span class=\"comment\">//b is not defined</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<p>（3） let不允许在同一个作用于内，声明同一个变量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">0</span>  <span class=\"comment\">//Identifier 'a' has already been declared</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"number\">0</span>  <span class=\"comment\">//Identifier 'a' has already been declared</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>（4）在代码块内，使用let命令声明变量之前，该变量都是不可用的</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">func</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(a)   <span class=\"comment\">//Uncaught ReferenceError: a is not defined</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(a)   <span class=\"comment\">//1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">func()</span><br></pre></td></tr></table></figure>\n\n<p>我们可以看到在使用<code>let</code>的时候，<code>func</code>函数形成了块级作用域，使用<code>let</code>命令声明变量之前，该变量都是不可用的。</p>\n<h2 id=\"const\"><a href=\"#const\" class=\"headerlink\" title=\"const\"></a>const</h2><p>（1）const声明一个只读的常量。一旦声明，常量的值就不能改变。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">a = <span class=\"number\">1</span>;   <span class=\"comment\">//Assignment to constant variable.</span></span><br></pre></td></tr></table></figure>\n\n<p>（2）如果<code>const</code>只声明不赋值，就会报错。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const a ;  //Uncaught SyntaxError: Missing initializer in const declaration</span><br></pre></td></tr></table></figure>\n\n<p>（3）<code>const</code>的作用域与<code>let</code>命令相同：只在声明所在的块级作用域内有效，与<code>let</code>一样不可重复声明，在代码块内，使用<code>const</code>命令声明变量之前，该变量都是不可用的。</p>\n<p>（4）<code>const</code>实际上保证的不是数值的不变，而是保证变量指向的内存地址不得改动。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = []</span><br><span class=\"line\">arr.push(<span class=\"string\">'a'</span>),</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr,arr.length) <span class=\"comment\">// ['a'],1</span></span><br><span class=\"line\"> arr = [<span class=\"string\">'a'</span>]   <span class=\"comment\">//Uncaught TypeError: Assignment to constant variable</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> json = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">'hbb'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">json.age = <span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(json)</span><br><span class=\"line\">json = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">'hbb'</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;   <span class=\"comment\">//Uncaught TypeError: Assignment to constant variable</span></span><br></pre></td></tr></table></figure>","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<h2 id=\"let\"><a href=\"#let\" class=\"headerlink\" title=\"let\"></a>let</h2><p><code>let</code>命令与<code>var</code>命令类似，但是差别也是很大。</p>\n<p>（1）<code>let</code>命令只在<code>let</code>命令所在的代码块内有效。比如在<code>for</code>循环中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">5</span>;i++)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(i)  <span class=\"comment\">//0,1,2,3,4</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(i)  <span class=\"comment\">//5</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>;j&lt;<span class=\"number\">5</span>;j++)&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(j)   <span class=\"comment\">//0,1,2,3,4</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(j)  <span class=\"comment\">//Uncaught ReferenceError: j is not defined</span></span><br></pre></td></tr></table></figure>\n\n<p>计数器<code>j</code>只在<code>for</code>循环体内有效，在循环体外引用就会报错<br>（2）<code>var</code> 存在变量提升，<code>let</code>不存在</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(a)  <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b)  <span class=\"comment\">//b is not defined</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<p>（3） let不允许在同一个作用于内，声明同一个变量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">0</span>  <span class=\"comment\">//Identifier 'a' has already been declared</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"number\">0</span>  <span class=\"comment\">//Identifier 'a' has already been declared</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>（4）在代码块内，使用let命令声明变量之前，该变量都是不可用的</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">func</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(a)   <span class=\"comment\">//Uncaught ReferenceError: a is not defined</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(a)   <span class=\"comment\">//1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">func()</span><br></pre></td></tr></table></figure>\n\n<p>我们可以看到在使用<code>let</code>的时候，<code>func</code>函数形成了块级作用域，使用<code>let</code>命令声明变量之前，该变量都是不可用的。</p>\n<h2 id=\"const\"><a href=\"#const\" class=\"headerlink\" title=\"const\"></a>const</h2><p>（1）const声明一个只读的常量。一旦声明，常量的值就不能改变。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> a = <span class=\"number\">1</span>;</span><br><span class=\"line\">a = <span class=\"number\">1</span>;   <span class=\"comment\">//Assignment to constant variable.</span></span><br></pre></td></tr></table></figure>\n\n<p>（2）如果<code>const</code>只声明不赋值，就会报错。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const a ;  //Uncaught SyntaxError: Missing initializer in const declaration</span><br></pre></td></tr></table></figure>\n\n<p>（3）<code>const</code>的作用域与<code>let</code>命令相同：只在声明所在的块级作用域内有效，与<code>let</code>一样不可重复声明，在代码块内，使用<code>const</code>命令声明变量之前，该变量都是不可用的。</p>\n<p>（4）<code>const</code>实际上保证的不是数值的不变，而是保证变量指向的内存地址不得改动。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = []</span><br><span class=\"line\">arr.push(<span class=\"string\">'a'</span>),</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr,arr.length) <span class=\"comment\">// ['a'],1</span></span><br><span class=\"line\"> arr = [<span class=\"string\">'a'</span>]   <span class=\"comment\">//Uncaught TypeError: Assignment to constant variable</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> json = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">'hbb'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">json.age = <span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(json)</span><br><span class=\"line\">json = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">'hbb'</span>,</span><br><span class=\"line\">    age:<span class=\"number\">20</span></span><br><span class=\"line\">&#125;   <span class=\"comment\">//Uncaught TypeError: Assignment to constant variable</span></span><br></pre></td></tr></table></figure>"},{"title":"变量的解构赋值","comments":1,"description":"变量的解构赋值","date":"2016-06-20T06:29:10.000Z","keywords":"变量的解构赋值","_content":"## 简介\n\n`ES6` 允许按照一定模式，从数组和对象中提取值，对变量进行赋值。\n\n比如在`es5`时候给多个变量赋值，我们这样：\n\n```js\nvar a = 1,\n    b = 2,\n    c = 3;\n```\n在`es6`中，我们可以这样：\n\n```js\nlet [a,b,c] = [1,2,3]\n```\n\n等号两边的模式相同，左边的变量就会被赋予对应的值。\n\n```js\nlet [a, [b, c]] = [1, [2, 3]]\nconsole.log(a, b, c) //1,2,3\nlet [e, f, g] = [1, 2, 3, 4]\nconsole.log(e, f, g) //1,2,3\nlet [h, ...arr] = [1, 2, 3, 4]\nconsole.log(h, arr) //1,[2, 3, 4]\nlet [foo, bar, str] = ['a']\nconsole.log(foo, bar, str) //a,undefined,undefined\n//结构不成功，变量的值就为undefined。\n```\n## 允许使用默认值\n\n```js\nlet [a, b = 1, c = 2] = [1, 4, 5]\nconsole.log(a, b, c) ///1,4,5\n//值得注意的是：undefined，null\nlet [d, e = 2] = [1, undefined]\nconsole.log(d, e) //1,2\nlet [f, g = 2] = [1, null]\nconsole.log(f, g) //1,null\n```\n默认值可以引用解构赋值的其他变量，但该变量必须已经声明。\n\n```js\nlet [a = 1, b = a] = []\nconsole.log(a, b) //1,1\nlet [c = 1, d = c] = [2]\nconsole.log(c, d) //2,2\nlet [e = 4, f = e] = [1, 2]\nconsole.log(e, f) //1,2\n```\n\n## 对象的解构赋值\n\n上面基本讲的都是数组，对象也可以使用解构赋值。\n\n```js\nlet { a, b } = { a: 'hbb', b: 'ly' }\nconsole.log(a, b) //'hbb,'ly'\n```\n\n数组使用结构赋值，变量的取值由它的位置决定；而对象中变量必须与属性同名，才能取到正确的值。\n\n```js\nlet { a: c, b: d } = { a: 'hbb', b: 'ly' }\nconsole.log(c, d) //'hbb,'ly'\n```\n\n在上例中，变量是`c`与`d`,而`a`与`b`是属性。\n\n对象的解构赋值的内部机制，是先找到同名属性，然后再赋给对应的变量。真正被赋值的是后者，而不是前者。\n\n对象也可以用于嵌套结构的对象和使用默认值，解构不成功为undefined\n\n```js\nlet x;\n{ x } = { x: 1 };  //Uncaught SyntaxError: Unexpected token =\n```\n\n`JavaScript` 引擎会将`{x}`理解成一个代码块，发生语法错误。我们可以将大括号写在行首，避免 `JavaScript `将其解释为代码块。\n\n```js\nlet x;\n({ x } = { x: 1 });    //不会报错\n```\n\n## 字符串的解构赋值\n\n```js\nlet [a, b, c, d] = 'string'\nconsole.log(a, b, c, d)  //s,t,r,i\n```\n\n## 函数参数的解构赋值\n\n```js\nfunction add([x, y]) {\n  console.log(x, y)\n}\nadd([1, 2])  //1,2\n```\n\n函数参数的解构也可以使用默认值。\n\n```js\nfunction add([x = 3, y = 4]) {\n  console.log(x, y)\n}\nadd([1]) //1,4\n```\n\n推荐一本很好的书，对于ES6的学习很有帮助：[《ES6标准入门（第三版）》](http://es6.ruanyifeng.com/)\n\n","source":"_posts/js-17.md","raw":"---\ntitle: 变量的解构赋值\ncomments: true\ndescription: 变量的解构赋值\ntags: \"es6\"\ndate: 2016-6-20 14:29:10\ncategories: \"js\"\nkeywords: 变量的解构赋值\n---\n## 简介\n\n`ES6` 允许按照一定模式，从数组和对象中提取值，对变量进行赋值。\n\n比如在`es5`时候给多个变量赋值，我们这样：\n\n```js\nvar a = 1,\n    b = 2,\n    c = 3;\n```\n在`es6`中，我们可以这样：\n\n```js\nlet [a,b,c] = [1,2,3]\n```\n\n等号两边的模式相同，左边的变量就会被赋予对应的值。\n\n```js\nlet [a, [b, c]] = [1, [2, 3]]\nconsole.log(a, b, c) //1,2,3\nlet [e, f, g] = [1, 2, 3, 4]\nconsole.log(e, f, g) //1,2,3\nlet [h, ...arr] = [1, 2, 3, 4]\nconsole.log(h, arr) //1,[2, 3, 4]\nlet [foo, bar, str] = ['a']\nconsole.log(foo, bar, str) //a,undefined,undefined\n//结构不成功，变量的值就为undefined。\n```\n## 允许使用默认值\n\n```js\nlet [a, b = 1, c = 2] = [1, 4, 5]\nconsole.log(a, b, c) ///1,4,5\n//值得注意的是：undefined，null\nlet [d, e = 2] = [1, undefined]\nconsole.log(d, e) //1,2\nlet [f, g = 2] = [1, null]\nconsole.log(f, g) //1,null\n```\n默认值可以引用解构赋值的其他变量，但该变量必须已经声明。\n\n```js\nlet [a = 1, b = a] = []\nconsole.log(a, b) //1,1\nlet [c = 1, d = c] = [2]\nconsole.log(c, d) //2,2\nlet [e = 4, f = e] = [1, 2]\nconsole.log(e, f) //1,2\n```\n\n## 对象的解构赋值\n\n上面基本讲的都是数组，对象也可以使用解构赋值。\n\n```js\nlet { a, b } = { a: 'hbb', b: 'ly' }\nconsole.log(a, b) //'hbb,'ly'\n```\n\n数组使用结构赋值，变量的取值由它的位置决定；而对象中变量必须与属性同名，才能取到正确的值。\n\n```js\nlet { a: c, b: d } = { a: 'hbb', b: 'ly' }\nconsole.log(c, d) //'hbb,'ly'\n```\n\n在上例中，变量是`c`与`d`,而`a`与`b`是属性。\n\n对象的解构赋值的内部机制，是先找到同名属性，然后再赋给对应的变量。真正被赋值的是后者，而不是前者。\n\n对象也可以用于嵌套结构的对象和使用默认值，解构不成功为undefined\n\n```js\nlet x;\n{ x } = { x: 1 };  //Uncaught SyntaxError: Unexpected token =\n```\n\n`JavaScript` 引擎会将`{x}`理解成一个代码块，发生语法错误。我们可以将大括号写在行首，避免 `JavaScript `将其解释为代码块。\n\n```js\nlet x;\n({ x } = { x: 1 });    //不会报错\n```\n\n## 字符串的解构赋值\n\n```js\nlet [a, b, c, d] = 'string'\nconsole.log(a, b, c, d)  //s,t,r,i\n```\n\n## 函数参数的解构赋值\n\n```js\nfunction add([x, y]) {\n  console.log(x, y)\n}\nadd([1, 2])  //1,2\n```\n\n函数参数的解构也可以使用默认值。\n\n```js\nfunction add([x = 3, y = 4]) {\n  console.log(x, y)\n}\nadd([1]) //1,4\n```\n\n推荐一本很好的书，对于ES6的学习很有帮助：[《ES6标准入门（第三版）》](http://es6.ruanyifeng.com/)\n\n","slug":"js-17","published":1,"updated":"2019-09-20T01:47:28.666Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2a30017n0b9t80zksgf","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><code>ES6</code> 允许按照一定模式，从数组和对象中提取值，对变量进行赋值。</p>\n<p>比如在<code>es5</code>时候给多个变量赋值，我们这样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>,</span><br><span class=\"line\">    b = <span class=\"number\">2</span>,</span><br><span class=\"line\">    c = <span class=\"number\">3</span>;</span><br></pre></td></tr></table></figure>\n\n<p>在<code>es6</code>中，我们可以这样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [a,b,c] = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br></pre></td></tr></table></figure>\n\n<p>等号两边的模式相同，左边的变量就会被赋予对应的值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [a, [b, c]] = [<span class=\"number\">1</span>, [<span class=\"number\">2</span>, <span class=\"number\">3</span>]]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b, c) <span class=\"comment\">//1,2,3</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [e, f, g] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(e, f, g) <span class=\"comment\">//1,2,3</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [h, ...arr] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(h, arr) <span class=\"comment\">//1,[2, 3, 4]</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [foo, bar, str] = [<span class=\"string\">'a'</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(foo, bar, str) <span class=\"comment\">//a,undefined,undefined</span></span><br><span class=\"line\"><span class=\"comment\">//结构不成功，变量的值就为undefined。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"允许使用默认值\"><a href=\"#允许使用默认值\" class=\"headerlink\" title=\"允许使用默认值\"></a>允许使用默认值</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [a, b = <span class=\"number\">1</span>, c = <span class=\"number\">2</span>] = [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b, c) <span class=\"comment\">///1,4,5</span></span><br><span class=\"line\"><span class=\"comment\">//值得注意的是：undefined，null</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [d, e = <span class=\"number\">2</span>] = [<span class=\"number\">1</span>, <span class=\"literal\">undefined</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(d, e) <span class=\"comment\">//1,2</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [f, g = <span class=\"number\">2</span>] = [<span class=\"number\">1</span>, <span class=\"literal\">null</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(f, g) <span class=\"comment\">//1,null</span></span><br></pre></td></tr></table></figure>\n\n<p>默认值可以引用解构赋值的其他变量，但该变量必须已经声明。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [a = <span class=\"number\">1</span>, b = a] = []</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b) <span class=\"comment\">//1,1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [c = <span class=\"number\">1</span>, d = c] = [<span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(c, d) <span class=\"comment\">//2,2</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [e = <span class=\"number\">4</span>, f = e] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(e, f) <span class=\"comment\">//1,2</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"对象的解构赋值\"><a href=\"#对象的解构赋值\" class=\"headerlink\" title=\"对象的解构赋值\"></a>对象的解构赋值</h2><p>上面基本讲的都是数组，对象也可以使用解构赋值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123; a, b &#125; = &#123; <span class=\"attr\">a</span>: <span class=\"string\">'hbb'</span>, <span class=\"attr\">b</span>: <span class=\"string\">'ly'</span> &#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b) <span class=\"comment\">//'hbb,'ly'</span></span><br></pre></td></tr></table></figure>\n\n<p>数组使用结构赋值，变量的取值由它的位置决定；而对象中变量必须与属性同名，才能取到正确的值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"attr\">a</span>: c, <span class=\"attr\">b</span>: d &#125; = &#123; <span class=\"attr\">a</span>: <span class=\"string\">'hbb'</span>, <span class=\"attr\">b</span>: <span class=\"string\">'ly'</span> &#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(c, d) <span class=\"comment\">//'hbb,'ly'</span></span><br></pre></td></tr></table></figure>\n\n<p>在上例中，变量是<code>c</code>与<code>d</code>,而<code>a</code>与<code>b</code>是属性。</p>\n<p>对象的解构赋值的内部机制，是先找到同名属性，然后再赋给对应的变量。真正被赋值的是后者，而不是前者。</p>\n<p>对象也可以用于嵌套结构的对象和使用默认值，解构不成功为undefined</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> x;</span><br><span class=\"line\">&#123; x &#125; = &#123; <span class=\"attr\">x</span>: <span class=\"number\">1</span> &#125;;  <span class=\"comment\">//Uncaught SyntaxError: Unexpected token =</span></span><br></pre></td></tr></table></figure>\n\n<p><code>JavaScript</code> 引擎会将<code>{x}</code>理解成一个代码块，发生语法错误。我们可以将大括号写在行首，避免 <code>JavaScript</code>将其解释为代码块。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> x;</span><br><span class=\"line\">(&#123; x &#125; = &#123; <span class=\"attr\">x</span>: <span class=\"number\">1</span> &#125;);    <span class=\"comment\">//不会报错</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符串的解构赋值\"><a href=\"#字符串的解构赋值\" class=\"headerlink\" title=\"字符串的解构赋值\"></a>字符串的解构赋值</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [a, b, c, d] = <span class=\"string\">'string'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b, c, d)  <span class=\"comment\">//s,t,r,i</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函数参数的解构赋值\"><a href=\"#函数参数的解构赋值\" class=\"headerlink\" title=\"函数参数的解构赋值\"></a>函数参数的解构赋值</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">[x, y]</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(x, y)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">add([<span class=\"number\">1</span>, <span class=\"number\">2</span>])  <span class=\"comment\">//1,2</span></span><br></pre></td></tr></table></figure>\n\n<p>函数参数的解构也可以使用默认值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">[x = <span class=\"number\">3</span>, y = <span class=\"number\">4</span>]</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(x, y)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">add([<span class=\"number\">1</span>]) <span class=\"comment\">//1,4</span></span><br></pre></td></tr></table></figure>\n\n<p>推荐一本很好的书，对于ES6的学习很有帮助：<a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener\">《ES6标准入门（第三版）》</a></p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><code>ES6</code> 允许按照一定模式，从数组和对象中提取值，对变量进行赋值。</p>\n<p>比如在<code>es5</code>时候给多个变量赋值，我们这样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">1</span>,</span><br><span class=\"line\">    b = <span class=\"number\">2</span>,</span><br><span class=\"line\">    c = <span class=\"number\">3</span>;</span><br></pre></td></tr></table></figure>\n\n<p>在<code>es6</code>中，我们可以这样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [a,b,c] = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br></pre></td></tr></table></figure>\n\n<p>等号两边的模式相同，左边的变量就会被赋予对应的值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [a, [b, c]] = [<span class=\"number\">1</span>, [<span class=\"number\">2</span>, <span class=\"number\">3</span>]]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b, c) <span class=\"comment\">//1,2,3</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [e, f, g] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(e, f, g) <span class=\"comment\">//1,2,3</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [h, ...arr] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(h, arr) <span class=\"comment\">//1,[2, 3, 4]</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [foo, bar, str] = [<span class=\"string\">'a'</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(foo, bar, str) <span class=\"comment\">//a,undefined,undefined</span></span><br><span class=\"line\"><span class=\"comment\">//结构不成功，变量的值就为undefined。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"允许使用默认值\"><a href=\"#允许使用默认值\" class=\"headerlink\" title=\"允许使用默认值\"></a>允许使用默认值</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [a, b = <span class=\"number\">1</span>, c = <span class=\"number\">2</span>] = [<span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b, c) <span class=\"comment\">///1,4,5</span></span><br><span class=\"line\"><span class=\"comment\">//值得注意的是：undefined，null</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [d, e = <span class=\"number\">2</span>] = [<span class=\"number\">1</span>, <span class=\"literal\">undefined</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(d, e) <span class=\"comment\">//1,2</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [f, g = <span class=\"number\">2</span>] = [<span class=\"number\">1</span>, <span class=\"literal\">null</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(f, g) <span class=\"comment\">//1,null</span></span><br></pre></td></tr></table></figure>\n\n<p>默认值可以引用解构赋值的其他变量，但该变量必须已经声明。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [a = <span class=\"number\">1</span>, b = a] = []</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b) <span class=\"comment\">//1,1</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [c = <span class=\"number\">1</span>, d = c] = [<span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(c, d) <span class=\"comment\">//2,2</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> [e = <span class=\"number\">4</span>, f = e] = [<span class=\"number\">1</span>, <span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(e, f) <span class=\"comment\">//1,2</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"对象的解构赋值\"><a href=\"#对象的解构赋值\" class=\"headerlink\" title=\"对象的解构赋值\"></a>对象的解构赋值</h2><p>上面基本讲的都是数组，对象也可以使用解构赋值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123; a, b &#125; = &#123; <span class=\"attr\">a</span>: <span class=\"string\">'hbb'</span>, <span class=\"attr\">b</span>: <span class=\"string\">'ly'</span> &#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b) <span class=\"comment\">//'hbb,'ly'</span></span><br></pre></td></tr></table></figure>\n\n<p>数组使用结构赋值，变量的取值由它的位置决定；而对象中变量必须与属性同名，才能取到正确的值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> &#123; <span class=\"attr\">a</span>: c, <span class=\"attr\">b</span>: d &#125; = &#123; <span class=\"attr\">a</span>: <span class=\"string\">'hbb'</span>, <span class=\"attr\">b</span>: <span class=\"string\">'ly'</span> &#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(c, d) <span class=\"comment\">//'hbb,'ly'</span></span><br></pre></td></tr></table></figure>\n\n<p>在上例中，变量是<code>c</code>与<code>d</code>,而<code>a</code>与<code>b</code>是属性。</p>\n<p>对象的解构赋值的内部机制，是先找到同名属性，然后再赋给对应的变量。真正被赋值的是后者，而不是前者。</p>\n<p>对象也可以用于嵌套结构的对象和使用默认值，解构不成功为undefined</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> x;</span><br><span class=\"line\">&#123; x &#125; = &#123; <span class=\"attr\">x</span>: <span class=\"number\">1</span> &#125;;  <span class=\"comment\">//Uncaught SyntaxError: Unexpected token =</span></span><br></pre></td></tr></table></figure>\n\n<p><code>JavaScript</code> 引擎会将<code>{x}</code>理解成一个代码块，发生语法错误。我们可以将大括号写在行首，避免 <code>JavaScript</code>将其解释为代码块。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> x;</span><br><span class=\"line\">(&#123; x &#125; = &#123; <span class=\"attr\">x</span>: <span class=\"number\">1</span> &#125;);    <span class=\"comment\">//不会报错</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"字符串的解构赋值\"><a href=\"#字符串的解构赋值\" class=\"headerlink\" title=\"字符串的解构赋值\"></a>字符串的解构赋值</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> [a, b, c, d] = <span class=\"string\">'string'</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, b, c, d)  <span class=\"comment\">//s,t,r,i</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"函数参数的解构赋值\"><a href=\"#函数参数的解构赋值\" class=\"headerlink\" title=\"函数参数的解构赋值\"></a>函数参数的解构赋值</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">[x, y]</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(x, y)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">add([<span class=\"number\">1</span>, <span class=\"number\">2</span>])  <span class=\"comment\">//1,2</span></span><br></pre></td></tr></table></figure>\n\n<p>函数参数的解构也可以使用默认值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">add</span>(<span class=\"params\">[x = <span class=\"number\">3</span>, y = <span class=\"number\">4</span>]</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(x, y)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">add([<span class=\"number\">1</span>]) <span class=\"comment\">//1,4</span></span><br></pre></td></tr></table></figure>\n\n<p>推荐一本很好的书，对于ES6的学习很有帮助：<a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener\">《ES6标准入门（第三版）》</a></p>\n"},{"title":"贝赛尔曲线","comments":1,"description":"贝赛尔曲线, canvas, css, js","date":"2016-08-01T00:53:10.000Z","keywords":"贝赛尔曲线","_content":"\n## 贝塞尔曲线简介\n\n这里写一篇关于贝塞尔曲线的基础知识，好多H5特效都用到了贝赛尔曲线。\n\n在这里讲解二次和三次贝赛尔曲线。二次（平方）贝塞尔曲线和三次（立方）贝塞尔曲线。二次贝赛尔曲线是由三个点来定义：两个锚点和一个控制点。三次贝塞尔曲线是由四个点控制，两个锚点，两个控制点。\n\n## 二次贝塞尔曲线\n\n二次贝塞尔曲线是那种只向一个方向弯曲的简单曲线，我们可以使用`quadraticCurveTo（x1，y1，x2，y2）`，该函数接收四个参数，表示两个点的X与Y坐标，第一个点是控制点，用于决定该曲线的形状，第二个点锚点。\n\n\n如图：\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/Animation.gif)\n\n\n两个锚点和控制点：\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/1K_3-8KIRB_VTG7U2WJKH9.png)\n\n给大家推荐一个网站：http://myst729.github.io/bezier-curve/\n\n示例代码：\n\n```html\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>二次贝赛尔曲线</title>\n    <meta name=\"keywords\" content=\"Bump\"/>\n    <meta name=\"description\" content=\"Bump\"/>\n    <style>\n        #canvas{\n            display: block;\n            margin:50px auto;\n        }\n    </style>\n</head>\n<body>\n<canvas id=\"canvas\" width=\"500\" height=\"500\"></canvas>\n<script>\n    var canvas = document.getElementById(\"canvas\"),\n        context = canvas.getContext(\"2d\");\n    context.fillStyle = \"blue\";\n    context.strokeStyle=\"#aaa\";\n    context.shadowColor = '#ccc';\n    context.shadowOffsetX = 4;\n    context.shadowOffsetY = 4;\n    context.shadowBlur = 4;\n    context.lineWidth = 20;\n    context.lineCap = \"round\";\n    context.beginPath();\n    context.moveTo(100,100);\n    context.quadraticCurveTo(150,100,200,200);\n    context.quadraticCurveTo(250,250,300,50);\n    context.quadraticCurveTo(330,0,400,50);\n    context.stroke();\n</script>\n</body>\n</html>\n```\n\n## 三次贝赛尔曲线\n三次贝赛尔曲线：能够向两个方向弯曲的曲线，`bezierCurveTo（x1,y1,x2,y2,x3,y3）`,传入三个坐标，前两个为该曲线的控制点，最后一个为锚点。\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/Animation1.gif)\n\n三次贝塞尔曲线\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/YFT@M58PWOWIE-SRZN.png)\n\n示例代码:\n\n```html\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>三次贝塞尔曲线</title>\n    <meta name=\"keywords\" content=\"Bump\"/>\n    <meta name=\"description\" content=\"Bump\"/>\n    <style>\n        #canvas1{\n            display: block;\n            margin:50px auto;\n        }\n    </style>\n</head>\n<body>\n<canvas id=\"canvas1\" width=\"500\" height=\"300\">\n    canvas not support\n</canvas>\n<script>\n    var canvas1 = document.getElementById(\"canvas1\"),\n        context = canvas1.getContext(\"2d\");\n    context.fillStyle = \"blue\";\n    context.strokeStyle=\"#aaa\";\n    context.shadowColor = '#ccc';\n    context.shadowOffsetX = 4;\n    context.shadowOffsetY = 4;\n    context.shadowBlur = 4;\n    context.lineWidth = 20;\n    context.lineCap = \"round\";\n    context.beginPath();\n    context.moveTo(130,70);\n    context.bezierCurveTo(130,250,450,70,430,270);\n    context.stroke();\n</script>\n</body>\n</html>\n```\n\n## 示例练习\n\n下面我们来用讲到的知识画一个躁动的心。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n    <style>\n        #canvas2{\n            display: block;\n            margin:0 50px;\n            animation:scale 1s infinite alternate;\n        }\n        @keyframes scale {\n            to{\n                transform:scale(1.1);\n            }\n        }\n    </style>\n</head>\n<body>\n<div>\n    <canvas id=\"canvas2\" width=\"300\" height=\"300\">\n        canvas not support\n    </canvas>\n</div>\n<script>\n    //两个半圆加两个三次贝塞尔曲线搞定\n    window.onload = function () {\n        var canvas2 = document.getElementById(\"canvas2\");\n        var context = canvas2.getContext('2d'),\n            gradient = context.createLinearGradient(10, 10, 300, 300);\n        drawHeart(context,gradient);\n    };\n    function drawHeart(context,gradient) {\n        context.save();\n        context.beginPath();\n        gradient.addColorStop(0, '#adf0ff');\n        gradient.addColorStop(0.2, \"#ccc\");\n        gradient.addColorStop(0.4, \"#d967c8\");\n        gradient.addColorStop(0.6, \"#ff3300\");\n        context.fillStyle = gradient;\n        context.arc(100,100,50,Math.PI,0,false);\n        context.arc(200,100,50,Math.PI,0,false);\n        context.moveTo(250,100);\n        context.bezierCurveTo(240, 160, 180, 180, 150, 250);\n        context.bezierCurveTo( 120, 180,60, 160,50,100);\n        context.shadowColor = \"#f60\";\n        context.shadowOffsetX = 5;\n        context.shadowOffsetY = 5;\n        context.shadowBlur = 5;\n        context.fill();\n        context.closePath();\n    }\n</script>\n</body>\n</html>\n```\n\n打开浏览器可以看到一颗跳动的心\n\n","source":"_posts/js-4.md","raw":"---\ntitle: 贝赛尔曲线\ncomments: true\ndescription: 贝赛尔曲线, canvas, css, js\ntags: \"canvas\"\ndate: 2016-08-1 08:53:10\ncategories: \"js\"\nkeywords: 贝赛尔曲线\n---\n\n## 贝塞尔曲线简介\n\n这里写一篇关于贝塞尔曲线的基础知识，好多H5特效都用到了贝赛尔曲线。\n\n在这里讲解二次和三次贝赛尔曲线。二次（平方）贝塞尔曲线和三次（立方）贝塞尔曲线。二次贝赛尔曲线是由三个点来定义：两个锚点和一个控制点。三次贝塞尔曲线是由四个点控制，两个锚点，两个控制点。\n\n## 二次贝塞尔曲线\n\n二次贝塞尔曲线是那种只向一个方向弯曲的简单曲线，我们可以使用`quadraticCurveTo（x1，y1，x2，y2）`，该函数接收四个参数，表示两个点的X与Y坐标，第一个点是控制点，用于决定该曲线的形状，第二个点锚点。\n\n\n如图：\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/Animation.gif)\n\n\n两个锚点和控制点：\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/1K_3-8KIRB_VTG7U2WJKH9.png)\n\n给大家推荐一个网站：http://myst729.github.io/bezier-curve/\n\n示例代码：\n\n```html\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>二次贝赛尔曲线</title>\n    <meta name=\"keywords\" content=\"Bump\"/>\n    <meta name=\"description\" content=\"Bump\"/>\n    <style>\n        #canvas{\n            display: block;\n            margin:50px auto;\n        }\n    </style>\n</head>\n<body>\n<canvas id=\"canvas\" width=\"500\" height=\"500\"></canvas>\n<script>\n    var canvas = document.getElementById(\"canvas\"),\n        context = canvas.getContext(\"2d\");\n    context.fillStyle = \"blue\";\n    context.strokeStyle=\"#aaa\";\n    context.shadowColor = '#ccc';\n    context.shadowOffsetX = 4;\n    context.shadowOffsetY = 4;\n    context.shadowBlur = 4;\n    context.lineWidth = 20;\n    context.lineCap = \"round\";\n    context.beginPath();\n    context.moveTo(100,100);\n    context.quadraticCurveTo(150,100,200,200);\n    context.quadraticCurveTo(250,250,300,50);\n    context.quadraticCurveTo(330,0,400,50);\n    context.stroke();\n</script>\n</body>\n</html>\n```\n\n## 三次贝赛尔曲线\n三次贝赛尔曲线：能够向两个方向弯曲的曲线，`bezierCurveTo（x1,y1,x2,y2,x3,y3）`,传入三个坐标，前两个为该曲线的控制点，最后一个为锚点。\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/Animation1.gif)\n\n三次贝塞尔曲线\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/YFT@M58PWOWIE-SRZN.png)\n\n示例代码:\n\n```html\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>三次贝塞尔曲线</title>\n    <meta name=\"keywords\" content=\"Bump\"/>\n    <meta name=\"description\" content=\"Bump\"/>\n    <style>\n        #canvas1{\n            display: block;\n            margin:50px auto;\n        }\n    </style>\n</head>\n<body>\n<canvas id=\"canvas1\" width=\"500\" height=\"300\">\n    canvas not support\n</canvas>\n<script>\n    var canvas1 = document.getElementById(\"canvas1\"),\n        context = canvas1.getContext(\"2d\");\n    context.fillStyle = \"blue\";\n    context.strokeStyle=\"#aaa\";\n    context.shadowColor = '#ccc';\n    context.shadowOffsetX = 4;\n    context.shadowOffsetY = 4;\n    context.shadowBlur = 4;\n    context.lineWidth = 20;\n    context.lineCap = \"round\";\n    context.beginPath();\n    context.moveTo(130,70);\n    context.bezierCurveTo(130,250,450,70,430,270);\n    context.stroke();\n</script>\n</body>\n</html>\n```\n\n## 示例练习\n\n下面我们来用讲到的知识画一个躁动的心。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n    <style>\n        #canvas2{\n            display: block;\n            margin:0 50px;\n            animation:scale 1s infinite alternate;\n        }\n        @keyframes scale {\n            to{\n                transform:scale(1.1);\n            }\n        }\n    </style>\n</head>\n<body>\n<div>\n    <canvas id=\"canvas2\" width=\"300\" height=\"300\">\n        canvas not support\n    </canvas>\n</div>\n<script>\n    //两个半圆加两个三次贝塞尔曲线搞定\n    window.onload = function () {\n        var canvas2 = document.getElementById(\"canvas2\");\n        var context = canvas2.getContext('2d'),\n            gradient = context.createLinearGradient(10, 10, 300, 300);\n        drawHeart(context,gradient);\n    };\n    function drawHeart(context,gradient) {\n        context.save();\n        context.beginPath();\n        gradient.addColorStop(0, '#adf0ff');\n        gradient.addColorStop(0.2, \"#ccc\");\n        gradient.addColorStop(0.4, \"#d967c8\");\n        gradient.addColorStop(0.6, \"#ff3300\");\n        context.fillStyle = gradient;\n        context.arc(100,100,50,Math.PI,0,false);\n        context.arc(200,100,50,Math.PI,0,false);\n        context.moveTo(250,100);\n        context.bezierCurveTo(240, 160, 180, 180, 150, 250);\n        context.bezierCurveTo( 120, 180,60, 160,50,100);\n        context.shadowColor = \"#f60\";\n        context.shadowOffsetX = 5;\n        context.shadowOffsetY = 5;\n        context.shadowBlur = 5;\n        context.fill();\n        context.closePath();\n    }\n</script>\n</body>\n</html>\n```\n\n打开浏览器可以看到一颗跳动的心\n\n","slug":"js-4","published":1,"updated":"2019-09-20T01:48:16.672Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2a4001an0b91lhwk5bn","content":"<h2 id=\"贝塞尔曲线简介\"><a href=\"#贝塞尔曲线简介\" class=\"headerlink\" title=\"贝塞尔曲线简介\"></a>贝塞尔曲线简介</h2><p>这里写一篇关于贝塞尔曲线的基础知识，好多H5特效都用到了贝赛尔曲线。</p>\n<p>在这里讲解二次和三次贝赛尔曲线。二次（平方）贝塞尔曲线和三次（立方）贝塞尔曲线。二次贝赛尔曲线是由三个点来定义：两个锚点和一个控制点。三次贝塞尔曲线是由四个点控制，两个锚点，两个控制点。</p>\n<h2 id=\"二次贝塞尔曲线\"><a href=\"#二次贝塞尔曲线\" class=\"headerlink\" title=\"二次贝塞尔曲线\"></a>二次贝塞尔曲线</h2><p>二次贝塞尔曲线是那种只向一个方向弯曲的简单曲线，我们可以使用<code>quadraticCurveTo（x1，y1，x2，y2）</code>，该函数接收四个参数，表示两个点的X与Y坐标，第一个点是控制点，用于决定该曲线的形状，第二个点锚点。</p>\n<p>如图：</p>\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/Animation.gif\" class=\"lozad\"></p>\n<p>两个锚点和控制点：</p>\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/1K_3-8KIRB_VTG7U2WJKH9.png\" class=\"lozad\"></p>\n<p>给大家推荐一个网站：<a href=\"http://myst729.github.io/bezier-curve/\" target=\"_blank\" rel=\"noopener\">http://myst729.github.io/bezier-curve/</a></p>\n<p>示例代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>二次贝赛尔曲线<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keywords\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Bump\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"description\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Bump\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#canvas</span>&#123;</span></span><br><span class=\"line\">            display: block;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">margin</span><span class=\"selector-pseudo\">:50px</span> <span class=\"selector-tag\">auto</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"500\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"canvas\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">        context = canvas.getContext(<span class=\"string\">\"2d\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    context.fillStyle = <span class=\"string\">\"blue\"</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    context.strokeStyle=<span class=\"string\">\"#aaa\"</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    context.shadowColor = <span class=\"string\">'#ccc'</span>;</span></span><br><span class=\"line\">    context.shadowOffsetX = 4;</span><br><span class=\"line\">    context.shadowOffsetY = 4;</span><br><span class=\"line\">    context.shadowBlur = 4;</span><br><span class=\"line\">    context.lineWidth = 20;</span><br><span class=\"line\"><span class=\"javascript\">    context.lineCap = <span class=\"string\">\"round\"</span>;</span></span><br><span class=\"line\">    context.beginPath();</span><br><span class=\"line\">    context.moveTo(100,100);</span><br><span class=\"line\">    context.quadraticCurveTo(150,100,200,200);</span><br><span class=\"line\">    context.quadraticCurveTo(250,250,300,50);</span><br><span class=\"line\">    context.quadraticCurveTo(330,0,400,50);</span><br><span class=\"line\">    context.stroke();</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三次贝赛尔曲线\"><a href=\"#三次贝赛尔曲线\" class=\"headerlink\" title=\"三次贝赛尔曲线\"></a>三次贝赛尔曲线</h2><p>三次贝赛尔曲线：能够向两个方向弯曲的曲线，<code>bezierCurveTo（x1,y1,x2,y2,x3,y3）</code>,传入三个坐标，前两个为该曲线的控制点，最后一个为锚点。</p>\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/Animation1.gif\" class=\"lozad\"></p>\n<p>三次贝塞尔曲线</p>\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/YFT@M58PWOWIE-SRZN.png\" class=\"lozad\"></p>\n<p>示例代码:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>三次贝塞尔曲线<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keywords\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Bump\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"description\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Bump\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#canvas1</span>&#123;</span></span><br><span class=\"line\">            display: block;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">margin</span><span class=\"selector-pseudo\">:50px</span> <span class=\"selector-tag\">auto</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas1\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"300\"</span>&gt;</span></span><br><span class=\"line\">    canvas not support</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> canvas1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"canvas1\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">        context = canvas1.getContext(<span class=\"string\">\"2d\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    context.fillStyle = <span class=\"string\">\"blue\"</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    context.strokeStyle=<span class=\"string\">\"#aaa\"</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    context.shadowColor = <span class=\"string\">'#ccc'</span>;</span></span><br><span class=\"line\">    context.shadowOffsetX = 4;</span><br><span class=\"line\">    context.shadowOffsetY = 4;</span><br><span class=\"line\">    context.shadowBlur = 4;</span><br><span class=\"line\">    context.lineWidth = 20;</span><br><span class=\"line\"><span class=\"javascript\">    context.lineCap = <span class=\"string\">\"round\"</span>;</span></span><br><span class=\"line\">    context.beginPath();</span><br><span class=\"line\">    context.moveTo(130,70);</span><br><span class=\"line\">    context.bezierCurveTo(130,250,450,70,430,270);</span><br><span class=\"line\">    context.stroke();</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"示例练习\"><a href=\"#示例练习\" class=\"headerlink\" title=\"示例练习\"></a>示例练习</h2><p>下面我们来用讲到的知识画一个躁动的心。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#canvas2</span>&#123;</span></span><br><span class=\"line\">            display: block;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">margin</span><span class=\"selector-pseudo\">:0</span> 50<span class=\"selector-tag\">px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">animation</span><span class=\"selector-pseudo\">:scale</span> 1<span class=\"selector-tag\">s</span> <span class=\"selector-tag\">infinite</span> <span class=\"selector-tag\">alternate</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        @<span class=\"keyword\">keyframes</span> scale &#123;</span></span><br><span class=\"line\">            to&#123;</span><br><span class=\"line\"><span class=\"css\">                <span class=\"selector-tag\">transform</span><span class=\"selector-pseudo\">:scale(1.1)</span>;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas2\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"300\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"300\"</span>&gt;</span></span><br><span class=\"line\">        canvas not support</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//两个半圆加两个三次贝塞尔曲线搞定</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> canvas2 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"canvas2\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> context = canvas2.getContext(<span class=\"string\">'2d'</span>),</span></span><br><span class=\"line\">            gradient = context.createLinearGradient(10, 10, 300, 300);</span><br><span class=\"line\">        drawHeart(context,gradient);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawHeart</span>(<span class=\"params\">context,gradient</span>) </span>&#123;</span></span><br><span class=\"line\">        context.save();</span><br><span class=\"line\">        context.beginPath();</span><br><span class=\"line\"><span class=\"javascript\">        gradient.addColorStop(<span class=\"number\">0</span>, <span class=\"string\">'#adf0ff'</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        gradient.addColorStop(<span class=\"number\">0.2</span>, <span class=\"string\">\"#ccc\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        gradient.addColorStop(<span class=\"number\">0.4</span>, <span class=\"string\">\"#d967c8\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        gradient.addColorStop(<span class=\"number\">0.6</span>, <span class=\"string\">\"#ff3300\"</span>);</span></span><br><span class=\"line\">        context.fillStyle = gradient;</span><br><span class=\"line\"><span class=\"javascript\">        context.arc(<span class=\"number\">100</span>,<span class=\"number\">100</span>,<span class=\"number\">50</span>,<span class=\"built_in\">Math</span>.PI,<span class=\"number\">0</span>,<span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        context.arc(<span class=\"number\">200</span>,<span class=\"number\">100</span>,<span class=\"number\">50</span>,<span class=\"built_in\">Math</span>.PI,<span class=\"number\">0</span>,<span class=\"literal\">false</span>);</span></span><br><span class=\"line\">        context.moveTo(250,100);</span><br><span class=\"line\">        context.bezierCurveTo(240, 160, 180, 180, 150, 250);</span><br><span class=\"line\">        context.bezierCurveTo( 120, 180,60, 160,50,100);</span><br><span class=\"line\"><span class=\"javascript\">        context.shadowColor = <span class=\"string\">\"#f60\"</span>;</span></span><br><span class=\"line\">        context.shadowOffsetX = 5;</span><br><span class=\"line\">        context.shadowOffsetY = 5;</span><br><span class=\"line\">        context.shadowBlur = 5;</span><br><span class=\"line\">        context.fill();</span><br><span class=\"line\">        context.closePath();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打开浏览器可以看到一颗跳动的心</p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<h2 id=\"贝塞尔曲线简介\"><a href=\"#贝塞尔曲线简介\" class=\"headerlink\" title=\"贝塞尔曲线简介\"></a>贝塞尔曲线简介</h2><p>这里写一篇关于贝塞尔曲线的基础知识，好多H5特效都用到了贝赛尔曲线。</p>\n<p>在这里讲解二次和三次贝赛尔曲线。二次（平方）贝塞尔曲线和三次（立方）贝塞尔曲线。二次贝赛尔曲线是由三个点来定义：两个锚点和一个控制点。三次贝塞尔曲线是由四个点控制，两个锚点，两个控制点。</p>\n<h2 id=\"二次贝塞尔曲线\"><a href=\"#二次贝塞尔曲线\" class=\"headerlink\" title=\"二次贝塞尔曲线\"></a>二次贝塞尔曲线</h2><p>二次贝塞尔曲线是那种只向一个方向弯曲的简单曲线，我们可以使用<code>quadraticCurveTo（x1，y1，x2，y2）</code>，该函数接收四个参数，表示两个点的X与Y坐标，第一个点是控制点，用于决定该曲线的形状，第二个点锚点。</p>\n<p>如图：</p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/Animation.gif\" alt></p>\n<p>两个锚点和控制点：</p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/1K_3-8KIRB_VTG7U2WJKH9.png\" alt></p>\n<p>给大家推荐一个网站：<a href=\"http://myst729.github.io/bezier-curve/\" target=\"_blank\" rel=\"noopener\">http://myst729.github.io/bezier-curve/</a></p>\n<p>示例代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>二次贝赛尔曲线<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keywords\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Bump\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"description\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Bump\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#canvas</span>&#123;</span></span><br><span class=\"line\">            display: block;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">margin</span><span class=\"selector-pseudo\">:50px</span> <span class=\"selector-tag\">auto</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"500\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"canvas\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">        context = canvas.getContext(<span class=\"string\">\"2d\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    context.fillStyle = <span class=\"string\">\"blue\"</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    context.strokeStyle=<span class=\"string\">\"#aaa\"</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    context.shadowColor = <span class=\"string\">'#ccc'</span>;</span></span><br><span class=\"line\">    context.shadowOffsetX = 4;</span><br><span class=\"line\">    context.shadowOffsetY = 4;</span><br><span class=\"line\">    context.shadowBlur = 4;</span><br><span class=\"line\">    context.lineWidth = 20;</span><br><span class=\"line\"><span class=\"javascript\">    context.lineCap = <span class=\"string\">\"round\"</span>;</span></span><br><span class=\"line\">    context.beginPath();</span><br><span class=\"line\">    context.moveTo(100,100);</span><br><span class=\"line\">    context.quadraticCurveTo(150,100,200,200);</span><br><span class=\"line\">    context.quadraticCurveTo(250,250,300,50);</span><br><span class=\"line\">    context.quadraticCurveTo(330,0,400,50);</span><br><span class=\"line\">    context.stroke();</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三次贝赛尔曲线\"><a href=\"#三次贝赛尔曲线\" class=\"headerlink\" title=\"三次贝赛尔曲线\"></a>三次贝赛尔曲线</h2><p>三次贝赛尔曲线：能够向两个方向弯曲的曲线，<code>bezierCurveTo（x1,y1,x2,y2,x3,y3）</code>,传入三个坐标，前两个为该曲线的控制点，最后一个为锚点。</p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/Animation1.gif\" alt></p>\n<p>三次贝塞尔曲线</p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/YFT@M58PWOWIE-SRZN.png\" alt></p>\n<p>示例代码:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>三次贝塞尔曲线<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keywords\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Bump\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"description\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Bump\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#canvas1</span>&#123;</span></span><br><span class=\"line\">            display: block;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">margin</span><span class=\"selector-pseudo\">:50px</span> <span class=\"selector-tag\">auto</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas1\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"300\"</span>&gt;</span></span><br><span class=\"line\">    canvas not support</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> canvas1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"canvas1\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">        context = canvas1.getContext(<span class=\"string\">\"2d\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    context.fillStyle = <span class=\"string\">\"blue\"</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    context.strokeStyle=<span class=\"string\">\"#aaa\"</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    context.shadowColor = <span class=\"string\">'#ccc'</span>;</span></span><br><span class=\"line\">    context.shadowOffsetX = 4;</span><br><span class=\"line\">    context.shadowOffsetY = 4;</span><br><span class=\"line\">    context.shadowBlur = 4;</span><br><span class=\"line\">    context.lineWidth = 20;</span><br><span class=\"line\"><span class=\"javascript\">    context.lineCap = <span class=\"string\">\"round\"</span>;</span></span><br><span class=\"line\">    context.beginPath();</span><br><span class=\"line\">    context.moveTo(130,70);</span><br><span class=\"line\">    context.bezierCurveTo(130,250,450,70,430,270);</span><br><span class=\"line\">    context.stroke();</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"示例练习\"><a href=\"#示例练习\" class=\"headerlink\" title=\"示例练习\"></a>示例练习</h2><p>下面我们来用讲到的知识画一个躁动的心。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#canvas2</span>&#123;</span></span><br><span class=\"line\">            display: block;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">margin</span><span class=\"selector-pseudo\">:0</span> 50<span class=\"selector-tag\">px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">animation</span><span class=\"selector-pseudo\">:scale</span> 1<span class=\"selector-tag\">s</span> <span class=\"selector-tag\">infinite</span> <span class=\"selector-tag\">alternate</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        @<span class=\"keyword\">keyframes</span> scale &#123;</span></span><br><span class=\"line\">            to&#123;</span><br><span class=\"line\"><span class=\"css\">                <span class=\"selector-tag\">transform</span><span class=\"selector-pseudo\">:scale(1.1)</span>;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas2\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"300\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"300\"</span>&gt;</span></span><br><span class=\"line\">        canvas not support</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//两个半圆加两个三次贝塞尔曲线搞定</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> canvas2 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"canvas2\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> context = canvas2.getContext(<span class=\"string\">'2d'</span>),</span></span><br><span class=\"line\">            gradient = context.createLinearGradient(10, 10, 300, 300);</span><br><span class=\"line\">        drawHeart(context,gradient);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawHeart</span>(<span class=\"params\">context,gradient</span>) </span>&#123;</span></span><br><span class=\"line\">        context.save();</span><br><span class=\"line\">        context.beginPath();</span><br><span class=\"line\"><span class=\"javascript\">        gradient.addColorStop(<span class=\"number\">0</span>, <span class=\"string\">'#adf0ff'</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        gradient.addColorStop(<span class=\"number\">0.2</span>, <span class=\"string\">\"#ccc\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        gradient.addColorStop(<span class=\"number\">0.4</span>, <span class=\"string\">\"#d967c8\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        gradient.addColorStop(<span class=\"number\">0.6</span>, <span class=\"string\">\"#ff3300\"</span>);</span></span><br><span class=\"line\">        context.fillStyle = gradient;</span><br><span class=\"line\"><span class=\"javascript\">        context.arc(<span class=\"number\">100</span>,<span class=\"number\">100</span>,<span class=\"number\">50</span>,<span class=\"built_in\">Math</span>.PI,<span class=\"number\">0</span>,<span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        context.arc(<span class=\"number\">200</span>,<span class=\"number\">100</span>,<span class=\"number\">50</span>,<span class=\"built_in\">Math</span>.PI,<span class=\"number\">0</span>,<span class=\"literal\">false</span>);</span></span><br><span class=\"line\">        context.moveTo(250,100);</span><br><span class=\"line\">        context.bezierCurveTo(240, 160, 180, 180, 150, 250);</span><br><span class=\"line\">        context.bezierCurveTo( 120, 180,60, 160,50,100);</span><br><span class=\"line\"><span class=\"javascript\">        context.shadowColor = <span class=\"string\">\"#f60\"</span>;</span></span><br><span class=\"line\">        context.shadowOffsetX = 5;</span><br><span class=\"line\">        context.shadowOffsetY = 5;</span><br><span class=\"line\">        context.shadowBlur = 5;</span><br><span class=\"line\">        context.fill();</span><br><span class=\"line\">        context.closePath();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>打开浏览器可以看到一颗跳动的心</p>\n"},{"title":"canvas实现截图功能","comments":1,"description":"canvas实现截图功能","date":"2016-06-05T08:15:10.000Z","keywords":"canvas, js, 截图","_content":"\n配合时钟来进行截图。\n\n## canvas实现截图功能的思路：\n\n1. 向网页中添加一个img标签，不要给url的属性，给定一个id。调整图像大小，使其刚好覆盖在canvas上。\n2. 点击截图按钮时候，通过调用canvas。toDataURl()方法获得src地址，将此地址设定为图像的src。\n3. 将图像设置为可见，canvas设置为不可见。\n4. 当在截图的状态下，再一次点击按钮时，返回时钟界面，img设置为不可见。\n总体思路就这四点。了解详细的情况可以点击链接： [canvas实现截图功能](http://www.hbbaly.com/wp-content/themes/blog/case/screenshot.html)。\n\n## 代码\n\n```html\n<html lang=\"en\"><head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n    <style>\n        *{\n            margin:0;\n            padding:0;\n        }\n        body{\n            background: rgba(100,145,250,.3);\n        }\n        #canvas{\n            position:absolute;\n            top:50px;\n            left:50px;\n            border:1px solid #ccc;\n        }\n        #controls{\n            margin:20px 0 20px 60px;\n        }\n        #screenshot{\n            padding:5px;\n            border-radius: 5px;\n            border:0;\n            background: blue;\n            color: #fff;\n            cursor: pointer;\n        }\n        #img{\n            position:absolute;\n            top:50px;\n            left:50px;\n        }\n    </style>\n</head>\n<body>\n<div id=\"controls\">\n    <input type=\"button\" id=\"screenshot\" value=\"take screenshot\">\n</div>\n<img src=\"\" id=\"img\">\n<canvas id=\"canvas\" width=\"600\" height=\"600\"></canvas>\n<script>\n    var canvas = document.getElementById(\"canvas\"),\n        context = canvas.getContext(\"2d\"),\n        screenshot = document.getElementById(\"screenshot\"),\n        img = document.getElementById(\"img\"),\n        fontHeight = 15,\n        Margin=35,\n        hand = canvas.width/25,\n        hourHand = canvas.width/10,\n        spacing = 20,\n        radius = canvas.width/2-Margin, // 圆心半径\n        handRadius = radius+spacing,  //绘制数字的半径\n        loop = null;\n    screenshot.onclick = function (e) {\n        var dataURL ;\n        if(screenshot.value ===\"take screenshot\"){\n            dataURL = canvas.toDataURL();\n            clearInterval(loop);\n            img.src = dataURL;\n            img.style.display = \"block\";\n            canvas.style.display = \"none\";\n            screenshot.value = \"return to canvas\";\n\n        }else{\n            canvas.style.display = \"block\";\n            img.style.display = \"none\";\n            loop = setInterval(drawClock,1000);\n            screenshot.value = \"take screenshot\";\n        }\n    };\n\n    //绘制圆\n    function drawCircle() {\n        context.beginPath();\n        context.arc(canvas.width/2,canvas.height/2,radius,0,Math.PI*2,true);\n        context.stroke();\n    }\n    //绘制数字\n    function drawNumbers() {\n        var arr = [1,2,3,4,5,6,7,8,9,10,11,12],\n            angle = 0,\n            w = 0;\n        //遍历arr\n        arr.forEach(function (n) {\n            //angle，是从水平方向顺时针开始，也就是从3的位置\n            angle = Math.PI/6*(n-3);\n            w = context.measureText(n).width; //字体宽度\n            //计算绘制数字的位置，圆点是在画布的左上角\n            context.fillText(n,canvas.width/2+Math.cos(angle)*handRadius-w/2,canvas.height/2+Math.sin(angle)*handRadius+fontHeight/3);\n\n        })\n    }\n    //绘制圆心\n    function drawCenter() {\n        context.beginPath();\n        context.arc(canvas.width/2,canvas.height/2,5,0,Math.PI*2,true);\n        context.fill();\n    }\n    //绘制指针\n    function drawHand(a,b) {\n        var angle = (Math.PI*2)*(a/60)-Math.PI/2, //指针的度数\n            handRadius = b?radius-hand-hourHand:radius-hand; //指针的长度\n        context.moveTo(canvas.width/2,canvas.height/2);\n        context.lineTo(canvas.width/2+Math.cos(angle)*handRadius,canvas.height/2+Math.sin(angle)*handRadius);\n        context.stroke();\n    }\n    //时间关联\n    function drawHands() {\n        var date = new Date,\n            hour = date.getHours();\n        hour = hour>12?hour-12:hour;\n        drawHand(hour*5+(date.getMinutes()/60)*5,true);\n        drawHand(date.getMinutes(),false);\n        drawHand(date.getSeconds(),false);\n    }\n    function drawClock() {\n        context.clearRect(0,0,canvas.width,canvas.height);\n        drawCircle();\n        drawCenter();\n        drawHands();\n        drawNumbers();\n    }\n    context.font = fontHeight+\"px Arial\";\n    loop = setInterval(drawClock,1000);\n\n</script>\n\n</body></html>\n```\n\n![](http://www.hbbaly.com/wp-content/themes/blog/img/article/clock.png)","source":"_posts/js-2.md","raw":"---\ntitle: canvas实现截图功能\ncomments: true\ndescription: canvas实现截图功能\ntags: \"canvas\"\ndate: 2016-06-5 16:15:10\ncategories: \"js\"\nkeywords: canvas, js, 截图\n---\n\n配合时钟来进行截图。\n\n## canvas实现截图功能的思路：\n\n1. 向网页中添加一个img标签，不要给url的属性，给定一个id。调整图像大小，使其刚好覆盖在canvas上。\n2. 点击截图按钮时候，通过调用canvas。toDataURl()方法获得src地址，将此地址设定为图像的src。\n3. 将图像设置为可见，canvas设置为不可见。\n4. 当在截图的状态下，再一次点击按钮时，返回时钟界面，img设置为不可见。\n总体思路就这四点。了解详细的情况可以点击链接： [canvas实现截图功能](http://www.hbbaly.com/wp-content/themes/blog/case/screenshot.html)。\n\n## 代码\n\n```html\n<html lang=\"en\"><head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n    <style>\n        *{\n            margin:0;\n            padding:0;\n        }\n        body{\n            background: rgba(100,145,250,.3);\n        }\n        #canvas{\n            position:absolute;\n            top:50px;\n            left:50px;\n            border:1px solid #ccc;\n        }\n        #controls{\n            margin:20px 0 20px 60px;\n        }\n        #screenshot{\n            padding:5px;\n            border-radius: 5px;\n            border:0;\n            background: blue;\n            color: #fff;\n            cursor: pointer;\n        }\n        #img{\n            position:absolute;\n            top:50px;\n            left:50px;\n        }\n    </style>\n</head>\n<body>\n<div id=\"controls\">\n    <input type=\"button\" id=\"screenshot\" value=\"take screenshot\">\n</div>\n<img src=\"\" id=\"img\">\n<canvas id=\"canvas\" width=\"600\" height=\"600\"></canvas>\n<script>\n    var canvas = document.getElementById(\"canvas\"),\n        context = canvas.getContext(\"2d\"),\n        screenshot = document.getElementById(\"screenshot\"),\n        img = document.getElementById(\"img\"),\n        fontHeight = 15,\n        Margin=35,\n        hand = canvas.width/25,\n        hourHand = canvas.width/10,\n        spacing = 20,\n        radius = canvas.width/2-Margin, // 圆心半径\n        handRadius = radius+spacing,  //绘制数字的半径\n        loop = null;\n    screenshot.onclick = function (e) {\n        var dataURL ;\n        if(screenshot.value ===\"take screenshot\"){\n            dataURL = canvas.toDataURL();\n            clearInterval(loop);\n            img.src = dataURL;\n            img.style.display = \"block\";\n            canvas.style.display = \"none\";\n            screenshot.value = \"return to canvas\";\n\n        }else{\n            canvas.style.display = \"block\";\n            img.style.display = \"none\";\n            loop = setInterval(drawClock,1000);\n            screenshot.value = \"take screenshot\";\n        }\n    };\n\n    //绘制圆\n    function drawCircle() {\n        context.beginPath();\n        context.arc(canvas.width/2,canvas.height/2,radius,0,Math.PI*2,true);\n        context.stroke();\n    }\n    //绘制数字\n    function drawNumbers() {\n        var arr = [1,2,3,4,5,6,7,8,9,10,11,12],\n            angle = 0,\n            w = 0;\n        //遍历arr\n        arr.forEach(function (n) {\n            //angle，是从水平方向顺时针开始，也就是从3的位置\n            angle = Math.PI/6*(n-3);\n            w = context.measureText(n).width; //字体宽度\n            //计算绘制数字的位置，圆点是在画布的左上角\n            context.fillText(n,canvas.width/2+Math.cos(angle)*handRadius-w/2,canvas.height/2+Math.sin(angle)*handRadius+fontHeight/3);\n\n        })\n    }\n    //绘制圆心\n    function drawCenter() {\n        context.beginPath();\n        context.arc(canvas.width/2,canvas.height/2,5,0,Math.PI*2,true);\n        context.fill();\n    }\n    //绘制指针\n    function drawHand(a,b) {\n        var angle = (Math.PI*2)*(a/60)-Math.PI/2, //指针的度数\n            handRadius = b?radius-hand-hourHand:radius-hand; //指针的长度\n        context.moveTo(canvas.width/2,canvas.height/2);\n        context.lineTo(canvas.width/2+Math.cos(angle)*handRadius,canvas.height/2+Math.sin(angle)*handRadius);\n        context.stroke();\n    }\n    //时间关联\n    function drawHands() {\n        var date = new Date,\n            hour = date.getHours();\n        hour = hour>12?hour-12:hour;\n        drawHand(hour*5+(date.getMinutes()/60)*5,true);\n        drawHand(date.getMinutes(),false);\n        drawHand(date.getSeconds(),false);\n    }\n    function drawClock() {\n        context.clearRect(0,0,canvas.width,canvas.height);\n        drawCircle();\n        drawCenter();\n        drawHands();\n        drawNumbers();\n    }\n    context.font = fontHeight+\"px Arial\";\n    loop = setInterval(drawClock,1000);\n\n</script>\n\n</body></html>\n```\n\n![](http://www.hbbaly.com/wp-content/themes/blog/img/article/clock.png)","slug":"js-2","published":1,"updated":"2019-09-20T01:47:50.335Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2a5001dn0b9fxuc8ucb","content":"<p>配合时钟来进行截图。</p>\n<h2 id=\"canvas实现截图功能的思路：\"><a href=\"#canvas实现截图功能的思路：\" class=\"headerlink\" title=\"canvas实现截图功能的思路：\"></a>canvas实现截图功能的思路：</h2><ol>\n<li>向网页中添加一个img标签，不要给url的属性，给定一个id。调整图像大小，使其刚好覆盖在canvas上。</li>\n<li>点击截图按钮时候，通过调用canvas。toDataURl()方法获得src地址，将此地址设定为图像的src。</li>\n<li>将图像设置为可见，canvas设置为不可见。</li>\n<li>当在截图的状态下，再一次点击按钮时，返回时钟界面，img设置为不可见。<br>总体思路就这四点。了解详细的情况可以点击链接： <a href=\"http://www.hbbaly.com/wp-content/themes/blog/case/screenshot.html\" target=\"_blank\" rel=\"noopener\">canvas实现截图功能</a>。</li>\n</ol>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        *&#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">margin</span><span class=\"selector-pseudo\">:0</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">padding</span><span class=\"selector-pseudo\">:0</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        body&#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">background</span>: <span class=\"selector-tag\">rgba</span>(100,145,250,<span class=\"selector-class\">.3</span>);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#canvas</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">position</span><span class=\"selector-pseudo\">:absolute</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">top</span><span class=\"selector-pseudo\">:50px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">left</span><span class=\"selector-pseudo\">:50px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">border</span><span class=\"selector-pseudo\">:1px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#ccc</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#controls</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">margin</span><span class=\"selector-pseudo\">:20px</span> 0 20<span class=\"selector-tag\">px</span> 60<span class=\"selector-tag\">px</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#screenshot</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">padding</span><span class=\"selector-pseudo\">:5px</span>;</span></span><br><span class=\"line\">            border-radius: 5px;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">border</span><span class=\"selector-pseudo\">:0</span>;</span></span><br><span class=\"line\">            background: blue;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#fff</span>;</span></span><br><span class=\"line\">            cursor: pointer;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#img</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">position</span><span class=\"selector-pseudo\">:absolute</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">top</span><span class=\"selector-pseudo\">:50px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">left</span><span class=\"selector-pseudo\">:50px</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"controls\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"screenshot\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"take screenshot\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"img\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"600\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"600\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"canvas\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">        context = canvas.getContext(<span class=\"string\">\"2d\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">        screenshot = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"screenshot\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">        img = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"img\"</span>),</span></span><br><span class=\"line\">        fontHeight = 15,</span><br><span class=\"line\">        Margin=35,</span><br><span class=\"line\">        hand = canvas.width/25,</span><br><span class=\"line\">        hourHand = canvas.width/10,</span><br><span class=\"line\">        spacing = 20,</span><br><span class=\"line\"><span class=\"javascript\">        radius = canvas.width/<span class=\"number\">2</span>-Margin, <span class=\"comment\">// 圆心半径</span></span></span><br><span class=\"line\"><span class=\"javascript\">        handRadius = radius+spacing,  <span class=\"comment\">//绘制数字的半径</span></span></span><br><span class=\"line\"><span class=\"javascript\">        loop = <span class=\"literal\">null</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    screenshot.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> dataURL ;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">if</span>(screenshot.value ===<span class=\"string\">\"take screenshot\"</span>)&#123;</span></span><br><span class=\"line\">            dataURL = canvas.toDataURL();</span><br><span class=\"line\">            clearInterval(loop);</span><br><span class=\"line\">            img.src = dataURL;</span><br><span class=\"line\"><span class=\"javascript\">            img.style.display = <span class=\"string\">\"block\"</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            canvas.style.display = <span class=\"string\">\"none\"</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            screenshot.value = <span class=\"string\">\"return to canvas\"</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        &#125;<span class=\"keyword\">else</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            canvas.style.display = <span class=\"string\">\"block\"</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            img.style.display = <span class=\"string\">\"none\"</span>;</span></span><br><span class=\"line\">            loop = setInterval(drawClock,1000);</span><br><span class=\"line\"><span class=\"javascript\">            screenshot.value = <span class=\"string\">\"take screenshot\"</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//绘制圆</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawCircle</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\">        context.beginPath();</span><br><span class=\"line\"><span class=\"javascript\">        context.arc(canvas.width/<span class=\"number\">2</span>,canvas.height/<span class=\"number\">2</span>,radius,<span class=\"number\">0</span>,<span class=\"built_in\">Math</span>.PI*<span class=\"number\">2</span>,<span class=\"literal\">true</span>);</span></span><br><span class=\"line\">        context.stroke();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//绘制数字</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawNumbers</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>],</span></span><br><span class=\"line\">            angle = 0,</span><br><span class=\"line\">            w = 0;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//遍历arr</span></span></span><br><span class=\"line\"><span class=\"javascript\">        arr.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">n</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">//angle，是从水平方向顺时针开始，也就是从3的位置</span></span></span><br><span class=\"line\"><span class=\"javascript\">            angle = <span class=\"built_in\">Math</span>.PI/<span class=\"number\">6</span>*(n<span class=\"number\">-3</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            w = context.measureText(n).width; <span class=\"comment\">//字体宽度</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">//计算绘制数字的位置，圆点是在画布的左上角</span></span></span><br><span class=\"line\"><span class=\"javascript\">            context.fillText(n,canvas.width/<span class=\"number\">2</span>+<span class=\"built_in\">Math</span>.cos(angle)*handRadius-w/<span class=\"number\">2</span>,canvas.height/<span class=\"number\">2</span>+<span class=\"built_in\">Math</span>.sin(angle)*handRadius+fontHeight/<span class=\"number\">3</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//绘制圆心</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawCenter</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\">        context.beginPath();</span><br><span class=\"line\"><span class=\"javascript\">        context.arc(canvas.width/<span class=\"number\">2</span>,canvas.height/<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">0</span>,<span class=\"built_in\">Math</span>.PI*<span class=\"number\">2</span>,<span class=\"literal\">true</span>);</span></span><br><span class=\"line\">        context.fill();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//绘制指针</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawHand</span>(<span class=\"params\">a,b</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> angle = (<span class=\"built_in\">Math</span>.PI*<span class=\"number\">2</span>)*(a/<span class=\"number\">60</span>)-<span class=\"built_in\">Math</span>.PI/<span class=\"number\">2</span>, <span class=\"comment\">//指针的度数</span></span></span><br><span class=\"line\"><span class=\"javascript\">            handRadius = b?radius-hand-hourHand:radius-hand; <span class=\"comment\">//指针的长度</span></span></span><br><span class=\"line\">        context.moveTo(canvas.width/2,canvas.height/2);</span><br><span class=\"line\"><span class=\"javascript\">        context.lineTo(canvas.width/<span class=\"number\">2</span>+<span class=\"built_in\">Math</span>.cos(angle)*handRadius,canvas.height/<span class=\"number\">2</span>+<span class=\"built_in\">Math</span>.sin(angle)*handRadius);</span></span><br><span class=\"line\">        context.stroke();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//时间关联</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawHands</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>,</span></span><br><span class=\"line\">            hour = date.getHours();</span><br><span class=\"line\">        hour = hour&gt;12?hour-12:hour;</span><br><span class=\"line\"><span class=\"javascript\">        drawHand(hour*<span class=\"number\">5</span>+(date.getMinutes()/<span class=\"number\">60</span>)*<span class=\"number\">5</span>,<span class=\"literal\">true</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        drawHand(date.getMinutes(),<span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        drawHand(date.getSeconds(),<span class=\"literal\">false</span>);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawClock</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\">        context.clearRect(0,0,canvas.width,canvas.height);</span><br><span class=\"line\">        drawCircle();</span><br><span class=\"line\">        drawCenter();</span><br><span class=\"line\">        drawHands();</span><br><span class=\"line\">        drawNumbers();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    context.font = fontHeight+<span class=\"string\">\"px Arial\"</span>;</span></span><br><span class=\"line\">    loop = setInterval(drawClock,1000);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/themes/blog/img/article/clock.png\" class=\"lozad\"></p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<p>配合时钟来进行截图。</p>\n<h2 id=\"canvas实现截图功能的思路：\"><a href=\"#canvas实现截图功能的思路：\" class=\"headerlink\" title=\"canvas实现截图功能的思路：\"></a>canvas实现截图功能的思路：</h2><ol>\n<li>向网页中添加一个img标签，不要给url的属性，给定一个id。调整图像大小，使其刚好覆盖在canvas上。</li>\n<li>点击截图按钮时候，通过调用canvas。toDataURl()方法获得src地址，将此地址设定为图像的src。</li>\n<li>将图像设置为可见，canvas设置为不可见。</li>\n<li>当在截图的状态下，再一次点击按钮时，返回时钟界面，img设置为不可见。<br>总体思路就这四点。了解详细的情况可以点击链接： <a href=\"http://www.hbbaly.com/wp-content/themes/blog/case/screenshot.html\" target=\"_blank\" rel=\"noopener\">canvas实现截图功能</a>。</li>\n</ol>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        *&#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">margin</span><span class=\"selector-pseudo\">:0</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">padding</span><span class=\"selector-pseudo\">:0</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        body&#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">background</span>: <span class=\"selector-tag\">rgba</span>(100,145,250,<span class=\"selector-class\">.3</span>);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#canvas</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">position</span><span class=\"selector-pseudo\">:absolute</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">top</span><span class=\"selector-pseudo\">:50px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">left</span><span class=\"selector-pseudo\">:50px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">border</span><span class=\"selector-pseudo\">:1px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#ccc</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#controls</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">margin</span><span class=\"selector-pseudo\">:20px</span> 0 20<span class=\"selector-tag\">px</span> 60<span class=\"selector-tag\">px</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#screenshot</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">padding</span><span class=\"selector-pseudo\">:5px</span>;</span></span><br><span class=\"line\">            border-radius: 5px;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">border</span><span class=\"selector-pseudo\">:0</span>;</span></span><br><span class=\"line\">            background: blue;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">color</span>: <span class=\"selector-id\">#fff</span>;</span></span><br><span class=\"line\">            cursor: pointer;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#img</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">position</span><span class=\"selector-pseudo\">:absolute</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">top</span><span class=\"selector-pseudo\">:50px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">left</span><span class=\"selector-pseudo\">:50px</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"controls\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"screenshot\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"take screenshot\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"img\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"600\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"600\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"canvas\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">        context = canvas.getContext(<span class=\"string\">\"2d\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">        screenshot = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"screenshot\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">        img = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"img\"</span>),</span></span><br><span class=\"line\">        fontHeight = 15,</span><br><span class=\"line\">        Margin=35,</span><br><span class=\"line\">        hand = canvas.width/25,</span><br><span class=\"line\">        hourHand = canvas.width/10,</span><br><span class=\"line\">        spacing = 20,</span><br><span class=\"line\"><span class=\"javascript\">        radius = canvas.width/<span class=\"number\">2</span>-Margin, <span class=\"comment\">// 圆心半径</span></span></span><br><span class=\"line\"><span class=\"javascript\">        handRadius = radius+spacing,  <span class=\"comment\">//绘制数字的半径</span></span></span><br><span class=\"line\"><span class=\"javascript\">        loop = <span class=\"literal\">null</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    screenshot.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> dataURL ;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">if</span>(screenshot.value ===<span class=\"string\">\"take screenshot\"</span>)&#123;</span></span><br><span class=\"line\">            dataURL = canvas.toDataURL();</span><br><span class=\"line\">            clearInterval(loop);</span><br><span class=\"line\">            img.src = dataURL;</span><br><span class=\"line\"><span class=\"javascript\">            img.style.display = <span class=\"string\">\"block\"</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            canvas.style.display = <span class=\"string\">\"none\"</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            screenshot.value = <span class=\"string\">\"return to canvas\"</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">        &#125;<span class=\"keyword\">else</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            canvas.style.display = <span class=\"string\">\"block\"</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">            img.style.display = <span class=\"string\">\"none\"</span>;</span></span><br><span class=\"line\">            loop = setInterval(drawClock,1000);</span><br><span class=\"line\"><span class=\"javascript\">            screenshot.value = <span class=\"string\">\"take screenshot\"</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//绘制圆</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawCircle</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\">        context.beginPath();</span><br><span class=\"line\"><span class=\"javascript\">        context.arc(canvas.width/<span class=\"number\">2</span>,canvas.height/<span class=\"number\">2</span>,radius,<span class=\"number\">0</span>,<span class=\"built_in\">Math</span>.PI*<span class=\"number\">2</span>,<span class=\"literal\">true</span>);</span></span><br><span class=\"line\">        context.stroke();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//绘制数字</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawNumbers</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>],</span></span><br><span class=\"line\">            angle = 0,</span><br><span class=\"line\">            w = 0;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"comment\">//遍历arr</span></span></span><br><span class=\"line\"><span class=\"javascript\">        arr.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">n</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">//angle，是从水平方向顺时针开始，也就是从3的位置</span></span></span><br><span class=\"line\"><span class=\"javascript\">            angle = <span class=\"built_in\">Math</span>.PI/<span class=\"number\">6</span>*(n<span class=\"number\">-3</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">            w = context.measureText(n).width; <span class=\"comment\">//字体宽度</span></span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"comment\">//计算绘制数字的位置，圆点是在画布的左上角</span></span></span><br><span class=\"line\"><span class=\"javascript\">            context.fillText(n,canvas.width/<span class=\"number\">2</span>+<span class=\"built_in\">Math</span>.cos(angle)*handRadius-w/<span class=\"number\">2</span>,canvas.height/<span class=\"number\">2</span>+<span class=\"built_in\">Math</span>.sin(angle)*handRadius+fontHeight/<span class=\"number\">3</span>);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//绘制圆心</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawCenter</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\">        context.beginPath();</span><br><span class=\"line\"><span class=\"javascript\">        context.arc(canvas.width/<span class=\"number\">2</span>,canvas.height/<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">0</span>,<span class=\"built_in\">Math</span>.PI*<span class=\"number\">2</span>,<span class=\"literal\">true</span>);</span></span><br><span class=\"line\">        context.fill();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//绘制指针</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawHand</span>(<span class=\"params\">a,b</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> angle = (<span class=\"built_in\">Math</span>.PI*<span class=\"number\">2</span>)*(a/<span class=\"number\">60</span>)-<span class=\"built_in\">Math</span>.PI/<span class=\"number\">2</span>, <span class=\"comment\">//指针的度数</span></span></span><br><span class=\"line\"><span class=\"javascript\">            handRadius = b?radius-hand-hourHand:radius-hand; <span class=\"comment\">//指针的长度</span></span></span><br><span class=\"line\">        context.moveTo(canvas.width/2,canvas.height/2);</span><br><span class=\"line\"><span class=\"javascript\">        context.lineTo(canvas.width/<span class=\"number\">2</span>+<span class=\"built_in\">Math</span>.cos(angle)*handRadius,canvas.height/<span class=\"number\">2</span>+<span class=\"built_in\">Math</span>.sin(angle)*handRadius);</span></span><br><span class=\"line\">        context.stroke();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//时间关联</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawHands</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>,</span></span><br><span class=\"line\">            hour = date.getHours();</span><br><span class=\"line\">        hour = hour&gt;12?hour-12:hour;</span><br><span class=\"line\"><span class=\"javascript\">        drawHand(hour*<span class=\"number\">5</span>+(date.getMinutes()/<span class=\"number\">60</span>)*<span class=\"number\">5</span>,<span class=\"literal\">true</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        drawHand(date.getMinutes(),<span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        drawHand(date.getSeconds(),<span class=\"literal\">false</span>);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawClock</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\">        context.clearRect(0,0,canvas.width,canvas.height);</span><br><span class=\"line\">        drawCircle();</span><br><span class=\"line\">        drawCenter();</span><br><span class=\"line\">        drawHands();</span><br><span class=\"line\">        drawNumbers();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    context.font = fontHeight+<span class=\"string\">\"px Arial\"</span>;</span></span><br><span class=\"line\">    loop = setInterval(drawClock,1000);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.hbbaly.com/wp-content/themes/blog/img/article/clock.png\" alt></p>\n"},{"title":"拖动画圆","comments":1,"description":"拖动画圆, canvas, css, js","date":"2016-08-01T00:53:10.000Z","keywords":"拖动画圆","_content":"\n拖动画圆，后面还会写画多种图形。\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/10/Animation.gif)\n\n思路： 建立坐标系，已鼠标中心画圆\n[示例网页](http://www.hbbaly.com/wp-content/themes/blog/case/Drawing%20circle.html)\n\n```html\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n    <meta name=\"keywords\" content=\"Bump\">\n    <meta name=\"description\" content=\"Bump\">\n    <style>\n        *{\n            margin:0;\n            padding:0;\n        }\n        body{\n            background: #ccc;\n            font-size: 12px;\n        }\n        #canvas{\n            display: block;\n            margin:50px;\n            background: #fff;\n            -webkit-box-shadow: 4px 4px 8px rgba(0,0,0,.4) ;\n            -moz-box-shadow: 4px 4px 8px rgba(0,0,0,.4) ;\n            box-shadow: 4px 4px 8px rgba(0,0,0,.4);\n            cursor: pointer;\n        }\n        #controls{\n            position: absolute;\n            top:30px;\n            left:50px;\n        }\n    </style>\n  </head>\n<body>\n<canvas id=\"canvas\" width=\"500\" height=\"500\">\n    canvas not support\n</canvas>\n<div id=\"controls\">\n    StrokeColor <select name=\"select\" id=\"strokeStyleSelect\">\n    <option value=\"red\">red</option>\n    <option value=\"green\">green</option>\n    <option value=\"yellow\">yellow</option>\n    <option value=\"blue\">blue</option>\n    <option value=\"navy\">navy</option>\n</select>\n\nGuidewires: <input type=\"checkbox\" id=\"GuidewiresCheckbox\" checked=\"\">\n<input type=\"button\" id=\"EraseAll\" value=\"Erase all\">\n</div>\n<script>\nvar canvas = document.getElementById(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    strokeStyleSelect = document.getElementById(\"strokeStyleSelect\"),\n    guidewiresCheckbox = document.getElementById(\"GuidewiresCheckbox\"),\n    EraseAll = document.getElementById(\"EraseAll\"),\n    drawSurfaceImageData,\n    mousedown = {},\n    rubberBandRect = {},\n    flag = false,\n    guidewires = guidewiresCheckbox.checked;\n//绘制网格\n    function drawGrid(color,stepx,stepy ) {\n        context.strokeStyle = color;\n        context.lineWidth = .5;\n        for(var i = stepx+.5;i<context.canvas.width;i+=stepx){\n            context.beginPath();\n            context.moveTo(i,context.canvas.height);\n            context.lineTo(i,0);\n            context.stroke();\n        }\n        for(var i = stepy+.5;i<context.canvas.height;i+=stepy){\n            context.beginPath();\n            context.moveTo(0,i);\n            context.lineTo(context.canvas.width,i);\n            context.stroke();\n        }\n    }\n//窗口坐标转化为canvas坐标\n    function WindowToCanvas(x ,y) {\n        var bbox = canvas.getBoundingClientRect();\n        return{\n            x:x-bbox.left*(canvas.width-bbox.width)-50,\n            y:y-bbox.top*(canvas.height-bbox.height)-50\n        };\n    }\n//复制整个画布像素数据\n    function saveDrawingSurface() {\n        drawSurfaceImageData = context.getImageData(0,0,canvas.width,canvas.height);\n    }\n//画布像素数据放回画布\n    function restoreDrawingSurface() {\n        context.putImageData(drawSurfaceImageData ,0,0);\n    }\n    // 确定绘制辅助矩形的宽高，left，top\n    function updateRubberbandRectangle(loc) {\n        rubberBandRect.width = Math.abs(loc.x-mousedown.x);\n        rubberBandRect.height = Math.abs(loc.y-mousedown.y);\n        rubberBandRect.left = (loc.x-mousedown.x)?mousedown.x:loc.x;\n        rubberBandRect.top = (loc.y-mousedown.y)?mousedown.y:loc.y;\n    }\n    //绘制图形\n    function drawRubberbandShape(loc) {\n        var angle,\n            radius;\n        if( mousedown.y===loc.y){\n            angle = 0;\n            radius=Math.abs(loc.x-mousedown.x);\n        }else{\n            angle = Math.atan(rubberBandRect.height/rubberBandRect.width);\n            radius = rubberBandRect.height/Math.sin(angle);\n        }\n        context.fillStyle = strokeStyleSelect.value;\n        context.beginPath();\n        context.arc(mousedown.x,mousedown.y,radius,0,Math.PI*2,false);\n        if(guidewires)context.fill();\n    }\n    function updateRubberband(loc) {\n        updateRubberbandRectangle(loc);\n        drawRubberbandShape(loc);\n    }\n    //guidewires\n    //水平线\n    function drawHorizontalLine(y) {\n        context.beginPath();\n        context.moveTo(0,y+.5);\n        context.moveTo(canvas.width,y+.5);\n        context.stroke();\n    }\n    //垂直的线\n    function drawVerticalLine(x) {\n        context.beginPath();\n        context.moveTo(x+.5,0);\n        context.moveTo(x+.5,canvas.height);\n        context.stroke();\n    }\n    function drawGuidewires(x,y) {\n        context.save();\n        context.strokeStyle = \"red\";\n        context.lineWidth = .5;\n        drawHorizontalLine(y);\n        drawVerticalLine(x);\n        context.restore();\n    }\n    //鼠标在画布的三个事件\n    canvas.onmousedown = function (e) {\n        var loc = WindowToCanvas(e.clientX,e.clientY);\n        e.preventDefault();\n        saveDrawingSurface();\n        mousedown.x = loc.x;\n        mousedown.y = loc.y;\n        flag = true;\n    };\n    canvas.onmousemove = function (e) {\n        var loc;\n        if(flag){\n            e.preventDefault();\n            loc = WindowToCanvas(e.clientX,e.clientY);\n            restoreDrawingSurface();\n            updateRubberband(loc);\n            if(guidewires)drawGuidewires(loc.x,loc.y);\n        }\n    };\n    canvas.onmouseup = function (e) {\n        loc = WindowToCanvas(e.clientX,e.clientY);\n        restoreDrawingSurface();\n        updateRubberband(loc);\n        flag = false;\n    };\n    //controls enent handles\n    EraseAll.onclick = function (e) {\n        context.clearRect(0,0,canvas.width,canvas.height);\n        drawGrid(\"linghtgray\" , 10,10);\n        saveDrawingSurface();\n    };\n    strokeStyleSelect.onchange = function (e) {\n        context.strokeStyle = strokeStyleSelect.value;\n    };\n    guidewiresCheckbox.onchange = function (e) {\n        guidewires = guidewiresCheckbox.checked;\n    };\n    context.strokeStyle = strokeStyleSelect.value;\n    drawGrid(\"lightgray\" ,10,10);\n</script>\n\n</body></html>\n```\n","source":"_posts/js-3.md","raw":"---\ntitle: 拖动画圆\ncomments: true\ndescription: 拖动画圆, canvas, css, js\ntags: \"canvas\"\ndate: 2016-08-1 08:53:10\ncategories: \"js\"\nkeywords: 拖动画圆\n---\n\n拖动画圆，后面还会写画多种图形。\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/10/Animation.gif)\n\n思路： 建立坐标系，已鼠标中心画圆\n[示例网页](http://www.hbbaly.com/wp-content/themes/blog/case/Drawing%20circle.html)\n\n```html\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n    <meta name=\"keywords\" content=\"Bump\">\n    <meta name=\"description\" content=\"Bump\">\n    <style>\n        *{\n            margin:0;\n            padding:0;\n        }\n        body{\n            background: #ccc;\n            font-size: 12px;\n        }\n        #canvas{\n            display: block;\n            margin:50px;\n            background: #fff;\n            -webkit-box-shadow: 4px 4px 8px rgba(0,0,0,.4) ;\n            -moz-box-shadow: 4px 4px 8px rgba(0,0,0,.4) ;\n            box-shadow: 4px 4px 8px rgba(0,0,0,.4);\n            cursor: pointer;\n        }\n        #controls{\n            position: absolute;\n            top:30px;\n            left:50px;\n        }\n    </style>\n  </head>\n<body>\n<canvas id=\"canvas\" width=\"500\" height=\"500\">\n    canvas not support\n</canvas>\n<div id=\"controls\">\n    StrokeColor <select name=\"select\" id=\"strokeStyleSelect\">\n    <option value=\"red\">red</option>\n    <option value=\"green\">green</option>\n    <option value=\"yellow\">yellow</option>\n    <option value=\"blue\">blue</option>\n    <option value=\"navy\">navy</option>\n</select>\n\nGuidewires: <input type=\"checkbox\" id=\"GuidewiresCheckbox\" checked=\"\">\n<input type=\"button\" id=\"EraseAll\" value=\"Erase all\">\n</div>\n<script>\nvar canvas = document.getElementById(\"canvas\"),\n    context = canvas.getContext(\"2d\"),\n    strokeStyleSelect = document.getElementById(\"strokeStyleSelect\"),\n    guidewiresCheckbox = document.getElementById(\"GuidewiresCheckbox\"),\n    EraseAll = document.getElementById(\"EraseAll\"),\n    drawSurfaceImageData,\n    mousedown = {},\n    rubberBandRect = {},\n    flag = false,\n    guidewires = guidewiresCheckbox.checked;\n//绘制网格\n    function drawGrid(color,stepx,stepy ) {\n        context.strokeStyle = color;\n        context.lineWidth = .5;\n        for(var i = stepx+.5;i<context.canvas.width;i+=stepx){\n            context.beginPath();\n            context.moveTo(i,context.canvas.height);\n            context.lineTo(i,0);\n            context.stroke();\n        }\n        for(var i = stepy+.5;i<context.canvas.height;i+=stepy){\n            context.beginPath();\n            context.moveTo(0,i);\n            context.lineTo(context.canvas.width,i);\n            context.stroke();\n        }\n    }\n//窗口坐标转化为canvas坐标\n    function WindowToCanvas(x ,y) {\n        var bbox = canvas.getBoundingClientRect();\n        return{\n            x:x-bbox.left*(canvas.width-bbox.width)-50,\n            y:y-bbox.top*(canvas.height-bbox.height)-50\n        };\n    }\n//复制整个画布像素数据\n    function saveDrawingSurface() {\n        drawSurfaceImageData = context.getImageData(0,0,canvas.width,canvas.height);\n    }\n//画布像素数据放回画布\n    function restoreDrawingSurface() {\n        context.putImageData(drawSurfaceImageData ,0,0);\n    }\n    // 确定绘制辅助矩形的宽高，left，top\n    function updateRubberbandRectangle(loc) {\n        rubberBandRect.width = Math.abs(loc.x-mousedown.x);\n        rubberBandRect.height = Math.abs(loc.y-mousedown.y);\n        rubberBandRect.left = (loc.x-mousedown.x)?mousedown.x:loc.x;\n        rubberBandRect.top = (loc.y-mousedown.y)?mousedown.y:loc.y;\n    }\n    //绘制图形\n    function drawRubberbandShape(loc) {\n        var angle,\n            radius;\n        if( mousedown.y===loc.y){\n            angle = 0;\n            radius=Math.abs(loc.x-mousedown.x);\n        }else{\n            angle = Math.atan(rubberBandRect.height/rubberBandRect.width);\n            radius = rubberBandRect.height/Math.sin(angle);\n        }\n        context.fillStyle = strokeStyleSelect.value;\n        context.beginPath();\n        context.arc(mousedown.x,mousedown.y,radius,0,Math.PI*2,false);\n        if(guidewires)context.fill();\n    }\n    function updateRubberband(loc) {\n        updateRubberbandRectangle(loc);\n        drawRubberbandShape(loc);\n    }\n    //guidewires\n    //水平线\n    function drawHorizontalLine(y) {\n        context.beginPath();\n        context.moveTo(0,y+.5);\n        context.moveTo(canvas.width,y+.5);\n        context.stroke();\n    }\n    //垂直的线\n    function drawVerticalLine(x) {\n        context.beginPath();\n        context.moveTo(x+.5,0);\n        context.moveTo(x+.5,canvas.height);\n        context.stroke();\n    }\n    function drawGuidewires(x,y) {\n        context.save();\n        context.strokeStyle = \"red\";\n        context.lineWidth = .5;\n        drawHorizontalLine(y);\n        drawVerticalLine(x);\n        context.restore();\n    }\n    //鼠标在画布的三个事件\n    canvas.onmousedown = function (e) {\n        var loc = WindowToCanvas(e.clientX,e.clientY);\n        e.preventDefault();\n        saveDrawingSurface();\n        mousedown.x = loc.x;\n        mousedown.y = loc.y;\n        flag = true;\n    };\n    canvas.onmousemove = function (e) {\n        var loc;\n        if(flag){\n            e.preventDefault();\n            loc = WindowToCanvas(e.clientX,e.clientY);\n            restoreDrawingSurface();\n            updateRubberband(loc);\n            if(guidewires)drawGuidewires(loc.x,loc.y);\n        }\n    };\n    canvas.onmouseup = function (e) {\n        loc = WindowToCanvas(e.clientX,e.clientY);\n        restoreDrawingSurface();\n        updateRubberband(loc);\n        flag = false;\n    };\n    //controls enent handles\n    EraseAll.onclick = function (e) {\n        context.clearRect(0,0,canvas.width,canvas.height);\n        drawGrid(\"linghtgray\" , 10,10);\n        saveDrawingSurface();\n    };\n    strokeStyleSelect.onchange = function (e) {\n        context.strokeStyle = strokeStyleSelect.value;\n    };\n    guidewiresCheckbox.onchange = function (e) {\n        guidewires = guidewiresCheckbox.checked;\n    };\n    context.strokeStyle = strokeStyleSelect.value;\n    drawGrid(\"lightgray\" ,10,10);\n</script>\n\n</body></html>\n```\n","slug":"js-3","published":1,"updated":"2019-09-20T01:48:01.660Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2a7001hn0b9aaeozau1","content":"<p>拖动画圆，后面还会写画多种图形。</p>\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/10/Animation.gif\" class=\"lozad\"></p>\n<p>思路： 建立坐标系，已鼠标中心画圆<br><a href=\"http://www.hbbaly.com/wp-content/themes/blog/case/Drawing%20circle.html\" target=\"_blank\" rel=\"noopener\">示例网页</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keywords\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Bump\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"description\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Bump\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        *&#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">margin</span><span class=\"selector-pseudo\">:0</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">padding</span><span class=\"selector-pseudo\">:0</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        body&#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">background</span>: <span class=\"selector-id\">#ccc</span>;</span></span><br><span class=\"line\">            font-size: 12px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#canvas</span>&#123;</span></span><br><span class=\"line\">            display: block;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">margin</span><span class=\"selector-pseudo\">:50px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">background</span>: <span class=\"selector-id\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">-webkit-box-shadow</span>: 4<span class=\"selector-tag\">px</span> 4<span class=\"selector-tag\">px</span> 8<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(0,0,0,<span class=\"selector-class\">.4</span>) ;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">-moz-box-shadow</span>: 4<span class=\"selector-tag\">px</span> 4<span class=\"selector-tag\">px</span> 8<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(0,0,0,<span class=\"selector-class\">.4</span>) ;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">box-shadow</span>: 4<span class=\"selector-tag\">px</span> 4<span class=\"selector-tag\">px</span> 8<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(0,0,0,<span class=\"selector-class\">.4</span>);</span></span><br><span class=\"line\">            cursor: pointer;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#controls</span>&#123;</span></span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">top</span><span class=\"selector-pseudo\">:30px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">left</span><span class=\"selector-pseudo\">:50px</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"500\"</span>&gt;</span></span><br><span class=\"line\">    canvas not support</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"controls\"</span>&gt;</span></span><br><span class=\"line\">    StrokeColor <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">\"select\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"strokeStyleSelect\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"red\"</span>&gt;</span>red<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"green\"</span>&gt;</span>green<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"yellow\"</span>&gt;</span>yellow<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"blue\"</span>&gt;</span>blue<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"navy\"</span>&gt;</span>navy<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">Guidewires: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"GuidewiresCheckbox\"</span> <span class=\"attr\">checked</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"EraseAll\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Erase all\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"canvas\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">    context = canvas.getContext(<span class=\"string\">\"2d\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">    strokeStyleSelect = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"strokeStyleSelect\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">    guidewiresCheckbox = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"GuidewiresCheckbox\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">    EraseAll = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"EraseAll\"</span>),</span></span><br><span class=\"line\">    drawSurfaceImageData,</span><br><span class=\"line\">    mousedown = &#123;&#125;,</span><br><span class=\"line\">    rubberBandRect = &#123;&#125;,</span><br><span class=\"line\"><span class=\"javascript\">    flag = <span class=\"literal\">false</span>,</span></span><br><span class=\"line\">    guidewires = guidewiresCheckbox.checked;</span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//绘制网格</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawGrid</span>(<span class=\"params\">color,stepx,stepy </span>) </span>&#123;</span></span><br><span class=\"line\">        context.strokeStyle = color;</span><br><span class=\"line\">        context.lineWidth = .5;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = stepx+<span class=\"number\">.5</span>;i&lt;context.canvas.width;i+=stepx)&#123;</span></span><br><span class=\"line\">            context.beginPath();</span><br><span class=\"line\">            context.moveTo(i,context.canvas.height);</span><br><span class=\"line\">            context.lineTo(i,0);</span><br><span class=\"line\">            context.stroke();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = stepy+<span class=\"number\">.5</span>;i&lt;context.canvas.height;i+=stepy)&#123;</span></span><br><span class=\"line\">            context.beginPath();</span><br><span class=\"line\">            context.moveTo(0,i);</span><br><span class=\"line\">            context.lineTo(context.canvas.width,i);</span><br><span class=\"line\">            context.stroke();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//窗口坐标转化为canvas坐标</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">WindowToCanvas</span>(<span class=\"params\">x ,y</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> bbox = canvas.getBoundingClientRect();</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">return</span>&#123;</span></span><br><span class=\"line\">            x:x-bbox.left*(canvas.width-bbox.width)-50,</span><br><span class=\"line\">            y:y-bbox.top*(canvas.height-bbox.height)-50</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//复制整个画布像素数据</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">saveDrawingSurface</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\">        drawSurfaceImageData = context.getImageData(0,0,canvas.width,canvas.height);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//画布像素数据放回画布</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">restoreDrawingSurface</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\">        context.putImageData(drawSurfaceImageData ,0,0);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 确定绘制辅助矩形的宽高，left，top</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateRubberbandRectangle</span>(<span class=\"params\">loc</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        rubberBandRect.width = <span class=\"built_in\">Math</span>.abs(loc.x-mousedown.x);</span></span><br><span class=\"line\"><span class=\"javascript\">        rubberBandRect.height = <span class=\"built_in\">Math</span>.abs(loc.y-mousedown.y);</span></span><br><span class=\"line\">        rubberBandRect.left = (loc.x-mousedown.x)?mousedown.x:loc.x;</span><br><span class=\"line\">        rubberBandRect.top = (loc.y-mousedown.y)?mousedown.y:loc.y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//绘制图形</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawRubberbandShape</span>(<span class=\"params\">loc</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> angle,</span></span><br><span class=\"line\">            radius;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">if</span>( mousedown.y===loc.y)&#123;</span></span><br><span class=\"line\">            angle = 0;</span><br><span class=\"line\"><span class=\"javascript\">            radius=<span class=\"built_in\">Math</span>.abs(loc.x-mousedown.x);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;<span class=\"keyword\">else</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            angle = <span class=\"built_in\">Math</span>.atan(rubberBandRect.height/rubberBandRect.width);</span></span><br><span class=\"line\"><span class=\"javascript\">            radius = rubberBandRect.height/<span class=\"built_in\">Math</span>.sin(angle);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        context.fillStyle = strokeStyleSelect.value;</span><br><span class=\"line\">        context.beginPath();</span><br><span class=\"line\"><span class=\"javascript\">        context.arc(mousedown.x,mousedown.y,radius,<span class=\"number\">0</span>,<span class=\"built_in\">Math</span>.PI*<span class=\"number\">2</span>,<span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">if</span>(guidewires)context.fill();</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateRubberband</span>(<span class=\"params\">loc</span>) </span>&#123;</span></span><br><span class=\"line\">        updateRubberbandRectangle(loc);</span><br><span class=\"line\">        drawRubberbandShape(loc);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//guidewires</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//水平线</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawHorizontalLine</span>(<span class=\"params\">y</span>) </span>&#123;</span></span><br><span class=\"line\">        context.beginPath();</span><br><span class=\"line\">        context.moveTo(0,y+.5);</span><br><span class=\"line\">        context.moveTo(canvas.width,y+.5);</span><br><span class=\"line\">        context.stroke();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//垂直的线</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawVerticalLine</span>(<span class=\"params\">x</span>) </span>&#123;</span></span><br><span class=\"line\">        context.beginPath();</span><br><span class=\"line\">        context.moveTo(x+.5,0);</span><br><span class=\"line\">        context.moveTo(x+.5,canvas.height);</span><br><span class=\"line\">        context.stroke();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawGuidewires</span>(<span class=\"params\">x,y</span>) </span>&#123;</span></span><br><span class=\"line\">        context.save();</span><br><span class=\"line\"><span class=\"javascript\">        context.strokeStyle = <span class=\"string\">\"red\"</span>;</span></span><br><span class=\"line\">        context.lineWidth = .5;</span><br><span class=\"line\">        drawHorizontalLine(y);</span><br><span class=\"line\">        drawVerticalLine(x);</span><br><span class=\"line\">        context.restore();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//鼠标在画布的三个事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">    canvas.onmousedown = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> loc = WindowToCanvas(e.clientX,e.clientY);</span></span><br><span class=\"line\">        e.preventDefault();</span><br><span class=\"line\">        saveDrawingSurface();</span><br><span class=\"line\">        mousedown.x = loc.x;</span><br><span class=\"line\">        mousedown.y = loc.y;</span><br><span class=\"line\"><span class=\"javascript\">        flag = <span class=\"literal\">true</span>;</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"><span class=\"javascript\">    canvas.onmousemove = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> loc;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">if</span>(flag)&#123;</span></span><br><span class=\"line\">            e.preventDefault();</span><br><span class=\"line\">            loc = WindowToCanvas(e.clientX,e.clientY);</span><br><span class=\"line\">            restoreDrawingSurface();</span><br><span class=\"line\">            updateRubberband(loc);</span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">if</span>(guidewires)drawGuidewires(loc.x,loc.y);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"><span class=\"javascript\">    canvas.onmouseup = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">        loc = WindowToCanvas(e.clientX,e.clientY);</span><br><span class=\"line\">        restoreDrawingSurface();</span><br><span class=\"line\">        updateRubberband(loc);</span><br><span class=\"line\"><span class=\"javascript\">        flag = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//controls enent handles</span></span></span><br><span class=\"line\"><span class=\"javascript\">    EraseAll.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">        context.clearRect(0,0,canvas.width,canvas.height);</span><br><span class=\"line\"><span class=\"javascript\">        drawGrid(<span class=\"string\">\"linghtgray\"</span> , <span class=\"number\">10</span>,<span class=\"number\">10</span>);</span></span><br><span class=\"line\">        saveDrawingSurface();</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"><span class=\"javascript\">    strokeStyleSelect.onchange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">        context.strokeStyle = strokeStyleSelect.value;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"><span class=\"javascript\">    guidewiresCheckbox.onchange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">        guidewires = guidewiresCheckbox.checked;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    context.strokeStyle = strokeStyleSelect.value;</span><br><span class=\"line\"><span class=\"javascript\">    drawGrid(<span class=\"string\">\"lightgray\"</span> ,<span class=\"number\">10</span>,<span class=\"number\">10</span>);</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<p>拖动画圆，后面还会写画多种图形。</p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/10/Animation.gif\" alt></p>\n<p>思路： 建立坐标系，已鼠标中心画圆<br><a href=\"http://www.hbbaly.com/wp-content/themes/blog/case/Drawing%20circle.html\" target=\"_blank\" rel=\"noopener\">示例网页</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keywords\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Bump\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"description\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"Bump\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        *&#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">margin</span><span class=\"selector-pseudo\">:0</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">padding</span><span class=\"selector-pseudo\">:0</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        body&#123;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">background</span>: <span class=\"selector-id\">#ccc</span>;</span></span><br><span class=\"line\">            font-size: 12px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#canvas</span>&#123;</span></span><br><span class=\"line\">            display: block;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">margin</span><span class=\"selector-pseudo\">:50px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">background</span>: <span class=\"selector-id\">#fff</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">-webkit-box-shadow</span>: 4<span class=\"selector-tag\">px</span> 4<span class=\"selector-tag\">px</span> 8<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(0,0,0,<span class=\"selector-class\">.4</span>) ;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">-moz-box-shadow</span>: 4<span class=\"selector-tag\">px</span> 4<span class=\"selector-tag\">px</span> 8<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(0,0,0,<span class=\"selector-class\">.4</span>) ;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">box-shadow</span>: 4<span class=\"selector-tag\">px</span> 4<span class=\"selector-tag\">px</span> 8<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">rgba</span>(0,0,0,<span class=\"selector-class\">.4</span>);</span></span><br><span class=\"line\">            cursor: pointer;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-id\">#controls</span>&#123;</span></span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">top</span><span class=\"selector-pseudo\">:30px</span>;</span></span><br><span class=\"line\"><span class=\"css\">            <span class=\"selector-tag\">left</span><span class=\"selector-pseudo\">:50px</span>;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"canvas\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"500\"</span>&gt;</span></span><br><span class=\"line\">    canvas not support</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"controls\"</span>&gt;</span></span><br><span class=\"line\">    StrokeColor <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">name</span>=<span class=\"string\">\"select\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"strokeStyleSelect\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"red\"</span>&gt;</span>red<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"green\"</span>&gt;</span>green<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"yellow\"</span>&gt;</span>yellow<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"blue\"</span>&gt;</span>blue<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"navy\"</span>&gt;</span>navy<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">Guidewires: <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"GuidewiresCheckbox\"</span> <span class=\"attr\">checked</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"EraseAll\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Erase all\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"canvas\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">    context = canvas.getContext(<span class=\"string\">\"2d\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">    strokeStyleSelect = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"strokeStyleSelect\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">    guidewiresCheckbox = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"GuidewiresCheckbox\"</span>),</span></span><br><span class=\"line\"><span class=\"javascript\">    EraseAll = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"EraseAll\"</span>),</span></span><br><span class=\"line\">    drawSurfaceImageData,</span><br><span class=\"line\">    mousedown = &#123;&#125;,</span><br><span class=\"line\">    rubberBandRect = &#123;&#125;,</span><br><span class=\"line\"><span class=\"javascript\">    flag = <span class=\"literal\">false</span>,</span></span><br><span class=\"line\">    guidewires = guidewiresCheckbox.checked;</span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//绘制网格</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawGrid</span>(<span class=\"params\">color,stepx,stepy </span>) </span>&#123;</span></span><br><span class=\"line\">        context.strokeStyle = color;</span><br><span class=\"line\">        context.lineWidth = .5;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = stepx+<span class=\"number\">.5</span>;i&lt;context.canvas.width;i+=stepx)&#123;</span></span><br><span class=\"line\">            context.beginPath();</span><br><span class=\"line\">            context.moveTo(i,context.canvas.height);</span><br><span class=\"line\">            context.lineTo(i,0);</span><br><span class=\"line\">            context.stroke();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = stepy+<span class=\"number\">.5</span>;i&lt;context.canvas.height;i+=stepy)&#123;</span></span><br><span class=\"line\">            context.beginPath();</span><br><span class=\"line\">            context.moveTo(0,i);</span><br><span class=\"line\">            context.lineTo(context.canvas.width,i);</span><br><span class=\"line\">            context.stroke();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//窗口坐标转化为canvas坐标</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">WindowToCanvas</span>(<span class=\"params\">x ,y</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> bbox = canvas.getBoundingClientRect();</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">return</span>&#123;</span></span><br><span class=\"line\">            x:x-bbox.left*(canvas.width-bbox.width)-50,</span><br><span class=\"line\">            y:y-bbox.top*(canvas.height-bbox.height)-50</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//复制整个画布像素数据</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">saveDrawingSurface</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\">        drawSurfaceImageData = context.getImageData(0,0,canvas.width,canvas.height);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\"><span class=\"comment\">//画布像素数据放回画布</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">restoreDrawingSurface</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\">        context.putImageData(drawSurfaceImageData ,0,0);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 确定绘制辅助矩形的宽高，left，top</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateRubberbandRectangle</span>(<span class=\"params\">loc</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        rubberBandRect.width = <span class=\"built_in\">Math</span>.abs(loc.x-mousedown.x);</span></span><br><span class=\"line\"><span class=\"javascript\">        rubberBandRect.height = <span class=\"built_in\">Math</span>.abs(loc.y-mousedown.y);</span></span><br><span class=\"line\">        rubberBandRect.left = (loc.x-mousedown.x)?mousedown.x:loc.x;</span><br><span class=\"line\">        rubberBandRect.top = (loc.y-mousedown.y)?mousedown.y:loc.y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//绘制图形</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawRubberbandShape</span>(<span class=\"params\">loc</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> angle,</span></span><br><span class=\"line\">            radius;</span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">if</span>( mousedown.y===loc.y)&#123;</span></span><br><span class=\"line\">            angle = 0;</span><br><span class=\"line\"><span class=\"javascript\">            radius=<span class=\"built_in\">Math</span>.abs(loc.x-mousedown.x);</span></span><br><span class=\"line\"><span class=\"javascript\">        &#125;<span class=\"keyword\">else</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            angle = <span class=\"built_in\">Math</span>.atan(rubberBandRect.height/rubberBandRect.width);</span></span><br><span class=\"line\"><span class=\"javascript\">            radius = rubberBandRect.height/<span class=\"built_in\">Math</span>.sin(angle);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        context.fillStyle = strokeStyleSelect.value;</span><br><span class=\"line\">        context.beginPath();</span><br><span class=\"line\"><span class=\"javascript\">        context.arc(mousedown.x,mousedown.y,radius,<span class=\"number\">0</span>,<span class=\"built_in\">Math</span>.PI*<span class=\"number\">2</span>,<span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">if</span>(guidewires)context.fill();</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">updateRubberband</span>(<span class=\"params\">loc</span>) </span>&#123;</span></span><br><span class=\"line\">        updateRubberbandRectangle(loc);</span><br><span class=\"line\">        drawRubberbandShape(loc);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//guidewires</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//水平线</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawHorizontalLine</span>(<span class=\"params\">y</span>) </span>&#123;</span></span><br><span class=\"line\">        context.beginPath();</span><br><span class=\"line\">        context.moveTo(0,y+.5);</span><br><span class=\"line\">        context.moveTo(canvas.width,y+.5);</span><br><span class=\"line\">        context.stroke();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//垂直的线</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawVerticalLine</span>(<span class=\"params\">x</span>) </span>&#123;</span></span><br><span class=\"line\">        context.beginPath();</span><br><span class=\"line\">        context.moveTo(x+.5,0);</span><br><span class=\"line\">        context.moveTo(x+.5,canvas.height);</span><br><span class=\"line\">        context.stroke();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawGuidewires</span>(<span class=\"params\">x,y</span>) </span>&#123;</span></span><br><span class=\"line\">        context.save();</span><br><span class=\"line\"><span class=\"javascript\">        context.strokeStyle = <span class=\"string\">\"red\"</span>;</span></span><br><span class=\"line\">        context.lineWidth = .5;</span><br><span class=\"line\">        drawHorizontalLine(y);</span><br><span class=\"line\">        drawVerticalLine(x);</span><br><span class=\"line\">        context.restore();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//鼠标在画布的三个事件</span></span></span><br><span class=\"line\"><span class=\"javascript\">    canvas.onmousedown = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> loc = WindowToCanvas(e.clientX,e.clientY);</span></span><br><span class=\"line\">        e.preventDefault();</span><br><span class=\"line\">        saveDrawingSurface();</span><br><span class=\"line\">        mousedown.x = loc.x;</span><br><span class=\"line\">        mousedown.y = loc.y;</span><br><span class=\"line\"><span class=\"javascript\">        flag = <span class=\"literal\">true</span>;</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"><span class=\"javascript\">    canvas.onmousemove = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">var</span> loc;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">if</span>(flag)&#123;</span></span><br><span class=\"line\">            e.preventDefault();</span><br><span class=\"line\">            loc = WindowToCanvas(e.clientX,e.clientY);</span><br><span class=\"line\">            restoreDrawingSurface();</span><br><span class=\"line\">            updateRubberband(loc);</span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">if</span>(guidewires)drawGuidewires(loc.x,loc.y);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"><span class=\"javascript\">    canvas.onmouseup = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">        loc = WindowToCanvas(e.clientX,e.clientY);</span><br><span class=\"line\">        restoreDrawingSurface();</span><br><span class=\"line\">        updateRubberband(loc);</span><br><span class=\"line\"><span class=\"javascript\">        flag = <span class=\"literal\">false</span>;</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">//controls enent handles</span></span></span><br><span class=\"line\"><span class=\"javascript\">    EraseAll.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">        context.clearRect(0,0,canvas.width,canvas.height);</span><br><span class=\"line\"><span class=\"javascript\">        drawGrid(<span class=\"string\">\"linghtgray\"</span> , <span class=\"number\">10</span>,<span class=\"number\">10</span>);</span></span><br><span class=\"line\">        saveDrawingSurface();</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"><span class=\"javascript\">    strokeStyleSelect.onchange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">        context.strokeStyle = strokeStyleSelect.value;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"><span class=\"javascript\">    guidewiresCheckbox.onchange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\">        guidewires = guidewiresCheckbox.checked;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    context.strokeStyle = strokeStyleSelect.value;</span><br><span class=\"line\"><span class=\"javascript\">    drawGrid(<span class=\"string\">\"lightgray\"</span> ,<span class=\"number\">10</span>,<span class=\"number\">10</span>);</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"基本数据类型与引用数据类型","comments":1,"description":"基本数据类型与引用数据类型","date":"2016-02-05T08:15:10.000Z","keywords":"string,number,null,undefined,boolean,基本数据类型与引用数据类型","_content":"## 概述\n\n基本类型是指简单的数据段，比如`string`,`number`,`null`,`undefined`,`boolean`等基本数据是按照值访问的，可以操作存在变量中的实际值。\n\n引用类型是一种数据结构，用于将数据很功能组合在一起。描述的是一类对象所具有的属性和方法。引用类型的值保存在内存中的对象，不允许直接访问内存中的位置。\n\n```js\nvar a = 10;\nvar b = a;\nvar a = 5;\nalert(b); //10;\nvar a = [1,2,3];\nvar b = a;\na[0]= 123;\nconsole.log(b);//[123,2,3];\n```\n\n## 动态的属性\n\n```js\nvar a = new Object();\na.age = 20;\nalert(a.age);    //20\nvar a = 'string';\na.age = 5;\nalert(a.age);   //undefined;\n```\n\n上例说明不能给基本类型添加属性，虽然没有报错。只能够给引用类型动态的添加属性。\n\n## 复制变量值\n\n```js\nvar a = 10;\nvar b = a;\n// 这个例子基本类型：a = 10,b=10.但是他们没有关系，不能互相影响。\nvar a = new Object();\na.age = 20;\nvar b = a;\nalert(b.age); //20\n```\n\n这里a,b指向同一个对象，当a.age存在的时候，也可以通过b.age来访问。\n\n## 传递参数\n\n访问变量有按值和按引用两种方式，但是参数只能按值传递。\n```js\nfunction a(b) {\n     b = 20;\n     return b;\n}\nvar c = 30;\nvar d =  a(c);\nalert(c); //30\nalert(d);  //20\n```\n\n上例可以看出数值等基本类型是按值传递的。\n\n```js\nfunction a(b) {\n  b.name = 'hbb';\n}\nvar c = new Object();\na(c);\nalert(c.name);  //hbb;\n```\n\n`b`与`c`引用的是同一个对象，指向同一个对象。所以通过c也能访问。\n\n```js\nfunction a(b) {\n  b.name = 'hbb';\n  b = new Object();\n  b.name = 'hb';\n}\nvar c = new Object();\na(c);\nalert(c.name);  //hbb;\n```\n\n例中，添加了两行代码，在`b.name = 'hbb'`,基础上重新定义了一个对象，该对象带有一个不同值得`name`属性。如果对象是按照引用传递的话，`c.name = 'hb'`， 但是实际即便在函数内修改参数的值，原始的引用保持不变，是`hbb`，所以对象引用类型也是按照值传递的。\n\n```js\nvar a = [1,2,3];\nvar b = a;\na = [4,5,6];\nconsole.log(b); //123\n```\n\n这里变为[1,2,3],因为前面a与b是引用关系，他们共同指向一个空间的内容。（指向同一个栈）而不是`b`指向`a`，`a`在指向数组，`b=[1,2,3]`。当把[4,5,6]赋值给a的时候，只是对a进行重新赋值，改变a的指向，并没有对a指向空间内容产生变化，所以并不会对b的引用产生影响。\n\n上述这些语句只是我自己的见解，如有不对，还请见谅，随时留言提醒我。欢迎指正！","source":"_posts/js-5.md","raw":"---\ntitle: 基本数据类型与引用数据类型\ncomments: true\ndescription: 基本数据类型与引用数据类型\ntags: \"js\"\ndate: 2016-02-5 16:15:10\ncategories: \"js\"\nkeywords: string,number,null,undefined,boolean,基本数据类型与引用数据类型\n---\n## 概述\n\n基本类型是指简单的数据段，比如`string`,`number`,`null`,`undefined`,`boolean`等基本数据是按照值访问的，可以操作存在变量中的实际值。\n\n引用类型是一种数据结构，用于将数据很功能组合在一起。描述的是一类对象所具有的属性和方法。引用类型的值保存在内存中的对象，不允许直接访问内存中的位置。\n\n```js\nvar a = 10;\nvar b = a;\nvar a = 5;\nalert(b); //10;\nvar a = [1,2,3];\nvar b = a;\na[0]= 123;\nconsole.log(b);//[123,2,3];\n```\n\n## 动态的属性\n\n```js\nvar a = new Object();\na.age = 20;\nalert(a.age);    //20\nvar a = 'string';\na.age = 5;\nalert(a.age);   //undefined;\n```\n\n上例说明不能给基本类型添加属性，虽然没有报错。只能够给引用类型动态的添加属性。\n\n## 复制变量值\n\n```js\nvar a = 10;\nvar b = a;\n// 这个例子基本类型：a = 10,b=10.但是他们没有关系，不能互相影响。\nvar a = new Object();\na.age = 20;\nvar b = a;\nalert(b.age); //20\n```\n\n这里a,b指向同一个对象，当a.age存在的时候，也可以通过b.age来访问。\n\n## 传递参数\n\n访问变量有按值和按引用两种方式，但是参数只能按值传递。\n```js\nfunction a(b) {\n     b = 20;\n     return b;\n}\nvar c = 30;\nvar d =  a(c);\nalert(c); //30\nalert(d);  //20\n```\n\n上例可以看出数值等基本类型是按值传递的。\n\n```js\nfunction a(b) {\n  b.name = 'hbb';\n}\nvar c = new Object();\na(c);\nalert(c.name);  //hbb;\n```\n\n`b`与`c`引用的是同一个对象，指向同一个对象。所以通过c也能访问。\n\n```js\nfunction a(b) {\n  b.name = 'hbb';\n  b = new Object();\n  b.name = 'hb';\n}\nvar c = new Object();\na(c);\nalert(c.name);  //hbb;\n```\n\n例中，添加了两行代码，在`b.name = 'hbb'`,基础上重新定义了一个对象，该对象带有一个不同值得`name`属性。如果对象是按照引用传递的话，`c.name = 'hb'`， 但是实际即便在函数内修改参数的值，原始的引用保持不变，是`hbb`，所以对象引用类型也是按照值传递的。\n\n```js\nvar a = [1,2,3];\nvar b = a;\na = [4,5,6];\nconsole.log(b); //123\n```\n\n这里变为[1,2,3],因为前面a与b是引用关系，他们共同指向一个空间的内容。（指向同一个栈）而不是`b`指向`a`，`a`在指向数组，`b=[1,2,3]`。当把[4,5,6]赋值给a的时候，只是对a进行重新赋值，改变a的指向，并没有对a指向空间内容产生变化，所以并不会对b的引用产生影响。\n\n上述这些语句只是我自己的见解，如有不对，还请见谅，随时留言提醒我。欢迎指正！","slug":"js-5","published":1,"updated":"2019-09-18T01:03:18.774Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2a8001ln0b99ilcsjsa","content":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>基本类型是指简单的数据段，比如<code>string</code>,<code>number</code>,<code>null</code>,<code>undefined</code>,<code>boolean</code>等基本数据是按照值访问的，可以操作存在变量中的实际值。</p>\n<p>引用类型是一种数据结构，用于将数据很功能组合在一起。描述的是一类对象所具有的属性和方法。引用类型的值保存在内存中的对象，不允许直接访问内存中的位置。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">5</span>;</span><br><span class=\"line\">alert(b); <span class=\"comment\">//10;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a;</span><br><span class=\"line\">a[<span class=\"number\">0</span>]= <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b);<span class=\"comment\">//[123,2,3];</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"动态的属性\"><a href=\"#动态的属性\" class=\"headerlink\" title=\"动态的属性\"></a>动态的属性</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">a.age = <span class=\"number\">20</span>;</span><br><span class=\"line\">alert(a.age);    <span class=\"comment\">//20</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'string'</span>;</span><br><span class=\"line\">a.age = <span class=\"number\">5</span>;</span><br><span class=\"line\">alert(a.age);   <span class=\"comment\">//undefined;</span></span><br></pre></td></tr></table></figure>\n\n<p>上例说明不能给基本类型添加属性，虽然没有报错。只能够给引用类型动态的添加属性。</p>\n<h2 id=\"复制变量值\"><a href=\"#复制变量值\" class=\"headerlink\" title=\"复制变量值\"></a>复制变量值</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a;</span><br><span class=\"line\"><span class=\"comment\">// 这个例子基本类型：a = 10,b=10.但是他们没有关系，不能互相影响。</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">a.age = <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a;</span><br><span class=\"line\">alert(b.age); <span class=\"comment\">//20</span></span><br></pre></td></tr></table></figure>\n\n<p>这里a,b指向同一个对象，当a.age存在的时候，也可以通过b.age来访问。</p>\n<h2 id=\"传递参数\"><a href=\"#传递参数\" class=\"headerlink\" title=\"传递参数\"></a>传递参数</h2><p>访问变量有按值和按引用两种方式，但是参数只能按值传递。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\">b</span>) </span>&#123;</span><br><span class=\"line\">     b = <span class=\"number\">20</span>;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"number\">30</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> d =  a(c);</span><br><span class=\"line\">alert(c); <span class=\"comment\">//30</span></span><br><span class=\"line\">alert(d);  <span class=\"comment\">//20</span></span><br></pre></td></tr></table></figure>\n\n<p>上例可以看出数值等基本类型是按值传递的。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\">b</span>) </span>&#123;</span><br><span class=\"line\">  b.name = <span class=\"string\">'hbb'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">a(c);</span><br><span class=\"line\">alert(c.name);  <span class=\"comment\">//hbb;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>b</code>与<code>c</code>引用的是同一个对象，指向同一个对象。所以通过c也能访问。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\">b</span>) </span>&#123;</span><br><span class=\"line\">  b.name = <span class=\"string\">'hbb'</span>;</span><br><span class=\"line\">  b = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">  b.name = <span class=\"string\">'hb'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">a(c);</span><br><span class=\"line\">alert(c.name);  <span class=\"comment\">//hbb;</span></span><br></pre></td></tr></table></figure>\n\n<p>例中，添加了两行代码，在<code>b.name = &#39;hbb&#39;</code>,基础上重新定义了一个对象，该对象带有一个不同值得<code>name</code>属性。如果对象是按照引用传递的话，<code>c.name = &#39;hb&#39;</code>， 但是实际即便在函数内修改参数的值，原始的引用保持不变，是<code>hbb</code>，所以对象引用类型也是按照值传递的。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a;</span><br><span class=\"line\">a = [<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b); <span class=\"comment\">//123</span></span><br></pre></td></tr></table></figure>\n\n<p>这里变为[1,2,3],因为前面a与b是引用关系，他们共同指向一个空间的内容。（指向同一个栈）而不是<code>b</code>指向<code>a</code>，<code>a</code>在指向数组，<code>b=[1,2,3]</code>。当把[4,5,6]赋值给a的时候，只是对a进行重新赋值，改变a的指向，并没有对a指向空间内容产生变化，所以并不会对b的引用产生影响。</p>\n<p>上述这些语句只是我自己的见解，如有不对，还请见谅，随时留言提醒我。欢迎指正！</p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>基本类型是指简单的数据段，比如<code>string</code>,<code>number</code>,<code>null</code>,<code>undefined</code>,<code>boolean</code>等基本数据是按照值访问的，可以操作存在变量中的实际值。</p>\n<p>引用类型是一种数据结构，用于将数据很功能组合在一起。描述的是一类对象所具有的属性和方法。引用类型的值保存在内存中的对象，不允许直接访问内存中的位置。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a;</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">5</span>;</span><br><span class=\"line\">alert(b); <span class=\"comment\">//10;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a;</span><br><span class=\"line\">a[<span class=\"number\">0</span>]= <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b);<span class=\"comment\">//[123,2,3];</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"动态的属性\"><a href=\"#动态的属性\" class=\"headerlink\" title=\"动态的属性\"></a>动态的属性</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">a.age = <span class=\"number\">20</span>;</span><br><span class=\"line\">alert(a.age);    <span class=\"comment\">//20</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">'string'</span>;</span><br><span class=\"line\">a.age = <span class=\"number\">5</span>;</span><br><span class=\"line\">alert(a.age);   <span class=\"comment\">//undefined;</span></span><br></pre></td></tr></table></figure>\n\n<p>上例说明不能给基本类型添加属性，虽然没有报错。只能够给引用类型动态的添加属性。</p>\n<h2 id=\"复制变量值\"><a href=\"#复制变量值\" class=\"headerlink\" title=\"复制变量值\"></a>复制变量值</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a;</span><br><span class=\"line\"><span class=\"comment\">// 这个例子基本类型：a = 10,b=10.但是他们没有关系，不能互相影响。</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">a.age = <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a;</span><br><span class=\"line\">alert(b.age); <span class=\"comment\">//20</span></span><br></pre></td></tr></table></figure>\n\n<p>这里a,b指向同一个对象，当a.age存在的时候，也可以通过b.age来访问。</p>\n<h2 id=\"传递参数\"><a href=\"#传递参数\" class=\"headerlink\" title=\"传递参数\"></a>传递参数</h2><p>访问变量有按值和按引用两种方式，但是参数只能按值传递。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\">b</span>) </span>&#123;</span><br><span class=\"line\">     b = <span class=\"number\">20</span>;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"number\">30</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> d =  a(c);</span><br><span class=\"line\">alert(c); <span class=\"comment\">//30</span></span><br><span class=\"line\">alert(d);  <span class=\"comment\">//20</span></span><br></pre></td></tr></table></figure>\n\n<p>上例可以看出数值等基本类型是按值传递的。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\">b</span>) </span>&#123;</span><br><span class=\"line\">  b.name = <span class=\"string\">'hbb'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">a(c);</span><br><span class=\"line\">alert(c.name);  <span class=\"comment\">//hbb;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>b</code>与<code>c</code>引用的是同一个对象，指向同一个对象。所以通过c也能访问。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\">b</span>) </span>&#123;</span><br><span class=\"line\">  b.name = <span class=\"string\">'hbb'</span>;</span><br><span class=\"line\">  b = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">  b.name = <span class=\"string\">'hb'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">a(c);</span><br><span class=\"line\">alert(c.name);  <span class=\"comment\">//hbb;</span></span><br></pre></td></tr></table></figure>\n\n<p>例中，添加了两行代码，在<code>b.name = &#39;hbb&#39;</code>,基础上重新定义了一个对象，该对象带有一个不同值得<code>name</code>属性。如果对象是按照引用传递的话，<code>c.name = &#39;hb&#39;</code>， 但是实际即便在函数内修改参数的值，原始的引用保持不变，是<code>hbb</code>，所以对象引用类型也是按照值传递的。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a;</span><br><span class=\"line\">a = [<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b); <span class=\"comment\">//123</span></span><br></pre></td></tr></table></figure>\n\n<p>这里变为[1,2,3],因为前面a与b是引用关系，他们共同指向一个空间的内容。（指向同一个栈）而不是<code>b</code>指向<code>a</code>，<code>a</code>在指向数组，<code>b=[1,2,3]</code>。当把[4,5,6]赋值给a的时候，只是对a进行重新赋值，改变a的指向，并没有对a指向空间内容产生变化，所以并不会对b的引用产生影响。</p>\n<p>上述这些语句只是我自己的见解，如有不对，还请见谅，随时留言提醒我。欢迎指正！</p>\n"},{"title":"jQuery中queue的分析","comments":1,"description":"queue() 方法显示或操作在匹配元素上执行的函数队列(动画队列)","date":"2016-08-15T04:35:45.000Z","keywords":"jQuery, js, queue的分析, 函数队列, 动画队列","_content":"\n`queue()` 方法显示或操作在匹配元素上执行的函数队列(动画队列)。\n\n## 动画队列\n\n下面我写了三个队列:\n\n```js\n(function () {\n    var $box = $('#box');\n    $box.animate({\n        width:300,\n        height:300\n },500);\n    $box.css('background','blue');\n    $box.animate({\n        left:100,\n        top:100\n    },500);\n    var n = $box.queue(\"fx\");\n    console.log(n);\n})();\n```\n\n上面的队列的执行顺序。—–>先变`background`然后在`width`，`height`最后才是`left，top`。（`JavaScript`是单线程控制）\n\n## 解决css属性变化不是队列的问题\n\n因为`css`不是队列，是瞬间完成的，所以首先`background`就已经瞬间完成，接着才是`width`，`height`—>`left`，`top`。如果我们想让`css`属性变化在某个队列完成之后才执行，有两种办法：\n\n### 第一个种：在某个队列里面添加回调函数\n\n```js\n(function () {\n     var $box = $('#box');\n     $box.animate({\n           width:300,\n           height:300\n },500,function () {\n        $box.css('background','blue');\n});\n$box.animate({\n        left:100,\n        top:100\n    },500);\n})();\n```\n\n这样达到我们的要求。比如在`width`，`height`变化完后在改变`background`。\n\n### 第二个种：使用.queue()\n\n把这个`css`属性变化过程添加到要求的队列后面。\n\n```js\n(function () {\n     var $box = $('#box');\n     $box.animate({\n          width:300,\n          height:300\n},500);\n$box.queue(function () {\n        $box.css('background','blue');\n });\n $box.animate({\n        left:100,\n        top:100\n    },500);\n})();\n```\n\n其实上面的例子在执行到`background`变化完之后就不会在执行后面的队列。因为没有`.dequeue()`不知道这个队列什么时候执行完，所以要加上`.dequeue()`。\n\n```js\n(function () {\n    var $box = $('#box');\n    $box.animate({\n          width:300,\n          height:300\n    },500);\n    $box.queue(function () {\n          $box.css('background','blue');\n          $box.dequeue();//结束此次队列\n    });\n    $box.animate({\n          left:100,\n          top:100\n    },500);\n})();\n```\n\n## 指定动画执行顺序及阻止某个特定动画队列\n\n关于队列执行顺序的问题：\n\n```js\n(function () {\n  var $box = $('#box');\n  $box.animate({\n    width:300,\n    height:300\n  },500,function () {\n    $box.queue(function () {\n      $box.css('background','blue');\n      $box.dequeue();//结束此次队列\n    });\n  });\n  $box.animate({\n    left:100,\n    top:100\n  },500);\n})();\n```\n\n这个队列执行顺序其实是：先变化`width`，`height`然后是`top`，`left`最后才是`background`。因为`background`所在的队列是`width`所在队列的回调函数，它是后面加上去的。`width`与`top`所在的队列是原先就在的，所以回调函数之后放在原有队列的最后面执行。\n如果我在队列1执行完后不想再执行队列2，该怎么阻止队列2执行呢？可以先给队列2起个名字，再用`.cleartQueue()`来阻止。\n\n```js\n(function () {\n    var $box = $('#box');\n    $box.animate({\n        width:300,\n        height:300\n    },500);\n    $box.queue(function () {\n        $box.css('background','blue');\n        $box.dequeue();  //结束此次队列\n    });\n    $box.animate('hbb',{\n         left:100,\n         top:100\n    },500);\n    $box.clearQueue('hbb');\n})();\n```\n","source":"_posts/js-7.md","raw":"---\ntitle: jQuery中queue的分析\ncomments: true\ndescription: queue() 方法显示或操作在匹配元素上执行的函数队列(动画队列)\ntags: \"jquery\"\ndate: 2016-08-15 12:35:45\ncategories: \"js\"\nkeywords: jQuery, js, queue的分析, 函数队列, 动画队列\n---\n\n`queue()` 方法显示或操作在匹配元素上执行的函数队列(动画队列)。\n\n## 动画队列\n\n下面我写了三个队列:\n\n```js\n(function () {\n    var $box = $('#box');\n    $box.animate({\n        width:300,\n        height:300\n },500);\n    $box.css('background','blue');\n    $box.animate({\n        left:100,\n        top:100\n    },500);\n    var n = $box.queue(\"fx\");\n    console.log(n);\n})();\n```\n\n上面的队列的执行顺序。—–>先变`background`然后在`width`，`height`最后才是`left，top`。（`JavaScript`是单线程控制）\n\n## 解决css属性变化不是队列的问题\n\n因为`css`不是队列，是瞬间完成的，所以首先`background`就已经瞬间完成，接着才是`width`，`height`—>`left`，`top`。如果我们想让`css`属性变化在某个队列完成之后才执行，有两种办法：\n\n### 第一个种：在某个队列里面添加回调函数\n\n```js\n(function () {\n     var $box = $('#box');\n     $box.animate({\n           width:300,\n           height:300\n },500,function () {\n        $box.css('background','blue');\n});\n$box.animate({\n        left:100,\n        top:100\n    },500);\n})();\n```\n\n这样达到我们的要求。比如在`width`，`height`变化完后在改变`background`。\n\n### 第二个种：使用.queue()\n\n把这个`css`属性变化过程添加到要求的队列后面。\n\n```js\n(function () {\n     var $box = $('#box');\n     $box.animate({\n          width:300,\n          height:300\n},500);\n$box.queue(function () {\n        $box.css('background','blue');\n });\n $box.animate({\n        left:100,\n        top:100\n    },500);\n})();\n```\n\n其实上面的例子在执行到`background`变化完之后就不会在执行后面的队列。因为没有`.dequeue()`不知道这个队列什么时候执行完，所以要加上`.dequeue()`。\n\n```js\n(function () {\n    var $box = $('#box');\n    $box.animate({\n          width:300,\n          height:300\n    },500);\n    $box.queue(function () {\n          $box.css('background','blue');\n          $box.dequeue();//结束此次队列\n    });\n    $box.animate({\n          left:100,\n          top:100\n    },500);\n})();\n```\n\n## 指定动画执行顺序及阻止某个特定动画队列\n\n关于队列执行顺序的问题：\n\n```js\n(function () {\n  var $box = $('#box');\n  $box.animate({\n    width:300,\n    height:300\n  },500,function () {\n    $box.queue(function () {\n      $box.css('background','blue');\n      $box.dequeue();//结束此次队列\n    });\n  });\n  $box.animate({\n    left:100,\n    top:100\n  },500);\n})();\n```\n\n这个队列执行顺序其实是：先变化`width`，`height`然后是`top`，`left`最后才是`background`。因为`background`所在的队列是`width`所在队列的回调函数，它是后面加上去的。`width`与`top`所在的队列是原先就在的，所以回调函数之后放在原有队列的最后面执行。\n如果我在队列1执行完后不想再执行队列2，该怎么阻止队列2执行呢？可以先给队列2起个名字，再用`.cleartQueue()`来阻止。\n\n```js\n(function () {\n    var $box = $('#box');\n    $box.animate({\n        width:300,\n        height:300\n    },500);\n    $box.queue(function () {\n        $box.css('background','blue');\n        $box.dequeue();  //结束此次队列\n    });\n    $box.animate('hbb',{\n         left:100,\n         top:100\n    },500);\n    $box.clearQueue('hbb');\n})();\n```\n","slug":"js-7","published":1,"updated":"2019-09-20T01:48:45.100Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2a9001pn0b91qhyzyxu","content":"<p><code>queue()</code> 方法显示或操作在匹配元素上执行的函数队列(动画队列)。</p>\n<h2 id=\"动画队列\"><a href=\"#动画队列\" class=\"headerlink\" title=\"动画队列\"></a>动画队列</h2><p>下面我写了三个队列:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $box = $(<span class=\"string\">'#box'</span>);</span><br><span class=\"line\">    $box.animate(&#123;</span><br><span class=\"line\">        width:<span class=\"number\">300</span>,</span><br><span class=\"line\">        height:<span class=\"number\">300</span></span><br><span class=\"line\"> &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">    $box.css(<span class=\"string\">'background'</span>,<span class=\"string\">'blue'</span>);</span><br><span class=\"line\">    $box.animate(&#123;</span><br><span class=\"line\">        left:<span class=\"number\">100</span>,</span><br><span class=\"line\">        top:<span class=\"number\">100</span></span><br><span class=\"line\">    &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> n = $box.queue(<span class=\"string\">\"fx\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(n);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>上面的队列的执行顺序。—–&gt;先变<code>background</code>然后在<code>width</code>，<code>height</code>最后才是<code>left，top</code>。（<code>JavaScript</code>是单线程控制）</p>\n<h2 id=\"解决css属性变化不是队列的问题\"><a href=\"#解决css属性变化不是队列的问题\" class=\"headerlink\" title=\"解决css属性变化不是队列的问题\"></a>解决css属性变化不是队列的问题</h2><p>因为<code>css</code>不是队列，是瞬间完成的，所以首先<code>background</code>就已经瞬间完成，接着才是<code>width</code>，<code>height</code>—&gt;<code>left</code>，<code>top</code>。如果我们想让<code>css</code>属性变化在某个队列完成之后才执行，有两种办法：</p>\n<h3 id=\"第一个种：在某个队列里面添加回调函数\"><a href=\"#第一个种：在某个队列里面添加回调函数\" class=\"headerlink\" title=\"第一个种：在某个队列里面添加回调函数\"></a>第一个种：在某个队列里面添加回调函数</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> $box = $(<span class=\"string\">'#box'</span>);</span><br><span class=\"line\">     $box.animate(&#123;</span><br><span class=\"line\">           width:<span class=\"number\">300</span>,</span><br><span class=\"line\">           height:<span class=\"number\">300</span></span><br><span class=\"line\"> &#125;,<span class=\"number\">500</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        $box.css(<span class=\"string\">'background'</span>,<span class=\"string\">'blue'</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">$box.animate(&#123;</span><br><span class=\"line\">        left:<span class=\"number\">100</span>,</span><br><span class=\"line\">        top:<span class=\"number\">100</span></span><br><span class=\"line\">    &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>这样达到我们的要求。比如在<code>width</code>，<code>height</code>变化完后在改变<code>background</code>。</p>\n<h3 id=\"第二个种：使用-queue\"><a href=\"#第二个种：使用-queue\" class=\"headerlink\" title=\"第二个种：使用.queue()\"></a>第二个种：使用.queue()</h3><p>把这个<code>css</code>属性变化过程添加到要求的队列后面。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> $box = $(<span class=\"string\">'#box'</span>);</span><br><span class=\"line\">     $box.animate(&#123;</span><br><span class=\"line\">          width:<span class=\"number\">300</span>,</span><br><span class=\"line\">          height:<span class=\"number\">300</span></span><br><span class=\"line\">&#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">$box.queue(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        $box.css(<span class=\"string\">'background'</span>,<span class=\"string\">'blue'</span>);</span><br><span class=\"line\"> &#125;);</span><br><span class=\"line\"> $box.animate(&#123;</span><br><span class=\"line\">        left:<span class=\"number\">100</span>,</span><br><span class=\"line\">        top:<span class=\"number\">100</span></span><br><span class=\"line\">    &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>其实上面的例子在执行到<code>background</code>变化完之后就不会在执行后面的队列。因为没有<code>.dequeue()</code>不知道这个队列什么时候执行完，所以要加上<code>.dequeue()</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $box = $(<span class=\"string\">'#box'</span>);</span><br><span class=\"line\">    $box.animate(&#123;</span><br><span class=\"line\">          width:<span class=\"number\">300</span>,</span><br><span class=\"line\">          height:<span class=\"number\">300</span></span><br><span class=\"line\">    &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">    $box.queue(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">          $box.css(<span class=\"string\">'background'</span>,<span class=\"string\">'blue'</span>);</span><br><span class=\"line\">          $box.dequeue();<span class=\"comment\">//结束此次队列</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    $box.animate(&#123;</span><br><span class=\"line\">          left:<span class=\"number\">100</span>,</span><br><span class=\"line\">          top:<span class=\"number\">100</span></span><br><span class=\"line\">    &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"指定动画执行顺序及阻止某个特定动画队列\"><a href=\"#指定动画执行顺序及阻止某个特定动画队列\" class=\"headerlink\" title=\"指定动画执行顺序及阻止某个特定动画队列\"></a>指定动画执行顺序及阻止某个特定动画队列</h2><p>关于队列执行顺序的问题：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> $box = $(<span class=\"string\">'#box'</span>);</span><br><span class=\"line\">  $box.animate(&#123;</span><br><span class=\"line\">    width:<span class=\"number\">300</span>,</span><br><span class=\"line\">    height:<span class=\"number\">300</span></span><br><span class=\"line\">  &#125;,<span class=\"number\">500</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    $box.queue(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      $box.css(<span class=\"string\">'background'</span>,<span class=\"string\">'blue'</span>);</span><br><span class=\"line\">      $box.dequeue();<span class=\"comment\">//结束此次队列</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  $box.animate(&#123;</span><br><span class=\"line\">    left:<span class=\"number\">100</span>,</span><br><span class=\"line\">    top:<span class=\"number\">100</span></span><br><span class=\"line\">  &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>这个队列执行顺序其实是：先变化<code>width</code>，<code>height</code>然后是<code>top</code>，<code>left</code>最后才是<code>background</code>。因为<code>background</code>所在的队列是<code>width</code>所在队列的回调函数，它是后面加上去的。<code>width</code>与<code>top</code>所在的队列是原先就在的，所以回调函数之后放在原有队列的最后面执行。<br>如果我在队列1执行完后不想再执行队列2，该怎么阻止队列2执行呢？可以先给队列2起个名字，再用<code>.cleartQueue()</code>来阻止。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $box = $(<span class=\"string\">'#box'</span>);</span><br><span class=\"line\">    $box.animate(&#123;</span><br><span class=\"line\">        width:<span class=\"number\">300</span>,</span><br><span class=\"line\">        height:<span class=\"number\">300</span></span><br><span class=\"line\">    &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">    $box.queue(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        $box.css(<span class=\"string\">'background'</span>,<span class=\"string\">'blue'</span>);</span><br><span class=\"line\">        $box.dequeue();  <span class=\"comment\">//结束此次队列</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    $box.animate(<span class=\"string\">'hbb'</span>,&#123;</span><br><span class=\"line\">         left:<span class=\"number\">100</span>,</span><br><span class=\"line\">         top:<span class=\"number\">100</span></span><br><span class=\"line\">    &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">    $box.clearQueue(<span class=\"string\">'hbb'</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<p><code>queue()</code> 方法显示或操作在匹配元素上执行的函数队列(动画队列)。</p>\n<h2 id=\"动画队列\"><a href=\"#动画队列\" class=\"headerlink\" title=\"动画队列\"></a>动画队列</h2><p>下面我写了三个队列:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $box = $(<span class=\"string\">'#box'</span>);</span><br><span class=\"line\">    $box.animate(&#123;</span><br><span class=\"line\">        width:<span class=\"number\">300</span>,</span><br><span class=\"line\">        height:<span class=\"number\">300</span></span><br><span class=\"line\"> &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">    $box.css(<span class=\"string\">'background'</span>,<span class=\"string\">'blue'</span>);</span><br><span class=\"line\">    $box.animate(&#123;</span><br><span class=\"line\">        left:<span class=\"number\">100</span>,</span><br><span class=\"line\">        top:<span class=\"number\">100</span></span><br><span class=\"line\">    &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> n = $box.queue(<span class=\"string\">\"fx\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(n);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>上面的队列的执行顺序。—–&gt;先变<code>background</code>然后在<code>width</code>，<code>height</code>最后才是<code>left，top</code>。（<code>JavaScript</code>是单线程控制）</p>\n<h2 id=\"解决css属性变化不是队列的问题\"><a href=\"#解决css属性变化不是队列的问题\" class=\"headerlink\" title=\"解决css属性变化不是队列的问题\"></a>解决css属性变化不是队列的问题</h2><p>因为<code>css</code>不是队列，是瞬间完成的，所以首先<code>background</code>就已经瞬间完成，接着才是<code>width</code>，<code>height</code>—&gt;<code>left</code>，<code>top</code>。如果我们想让<code>css</code>属性变化在某个队列完成之后才执行，有两种办法：</p>\n<h3 id=\"第一个种：在某个队列里面添加回调函数\"><a href=\"#第一个种：在某个队列里面添加回调函数\" class=\"headerlink\" title=\"第一个种：在某个队列里面添加回调函数\"></a>第一个种：在某个队列里面添加回调函数</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> $box = $(<span class=\"string\">'#box'</span>);</span><br><span class=\"line\">     $box.animate(&#123;</span><br><span class=\"line\">           width:<span class=\"number\">300</span>,</span><br><span class=\"line\">           height:<span class=\"number\">300</span></span><br><span class=\"line\"> &#125;,<span class=\"number\">500</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        $box.css(<span class=\"string\">'background'</span>,<span class=\"string\">'blue'</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">$box.animate(&#123;</span><br><span class=\"line\">        left:<span class=\"number\">100</span>,</span><br><span class=\"line\">        top:<span class=\"number\">100</span></span><br><span class=\"line\">    &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>这样达到我们的要求。比如在<code>width</code>，<code>height</code>变化完后在改变<code>background</code>。</p>\n<h3 id=\"第二个种：使用-queue\"><a href=\"#第二个种：使用-queue\" class=\"headerlink\" title=\"第二个种：使用.queue()\"></a>第二个种：使用.queue()</h3><p>把这个<code>css</code>属性变化过程添加到要求的队列后面。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> $box = $(<span class=\"string\">'#box'</span>);</span><br><span class=\"line\">     $box.animate(&#123;</span><br><span class=\"line\">          width:<span class=\"number\">300</span>,</span><br><span class=\"line\">          height:<span class=\"number\">300</span></span><br><span class=\"line\">&#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">$box.queue(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        $box.css(<span class=\"string\">'background'</span>,<span class=\"string\">'blue'</span>);</span><br><span class=\"line\"> &#125;);</span><br><span class=\"line\"> $box.animate(&#123;</span><br><span class=\"line\">        left:<span class=\"number\">100</span>,</span><br><span class=\"line\">        top:<span class=\"number\">100</span></span><br><span class=\"line\">    &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>其实上面的例子在执行到<code>background</code>变化完之后就不会在执行后面的队列。因为没有<code>.dequeue()</code>不知道这个队列什么时候执行完，所以要加上<code>.dequeue()</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $box = $(<span class=\"string\">'#box'</span>);</span><br><span class=\"line\">    $box.animate(&#123;</span><br><span class=\"line\">          width:<span class=\"number\">300</span>,</span><br><span class=\"line\">          height:<span class=\"number\">300</span></span><br><span class=\"line\">    &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">    $box.queue(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">          $box.css(<span class=\"string\">'background'</span>,<span class=\"string\">'blue'</span>);</span><br><span class=\"line\">          $box.dequeue();<span class=\"comment\">//结束此次队列</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    $box.animate(&#123;</span><br><span class=\"line\">          left:<span class=\"number\">100</span>,</span><br><span class=\"line\">          top:<span class=\"number\">100</span></span><br><span class=\"line\">    &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"指定动画执行顺序及阻止某个特定动画队列\"><a href=\"#指定动画执行顺序及阻止某个特定动画队列\" class=\"headerlink\" title=\"指定动画执行顺序及阻止某个特定动画队列\"></a>指定动画执行顺序及阻止某个特定动画队列</h2><p>关于队列执行顺序的问题：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> $box = $(<span class=\"string\">'#box'</span>);</span><br><span class=\"line\">  $box.animate(&#123;</span><br><span class=\"line\">    width:<span class=\"number\">300</span>,</span><br><span class=\"line\">    height:<span class=\"number\">300</span></span><br><span class=\"line\">  &#125;,<span class=\"number\">500</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    $box.queue(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      $box.css(<span class=\"string\">'background'</span>,<span class=\"string\">'blue'</span>);</span><br><span class=\"line\">      $box.dequeue();<span class=\"comment\">//结束此次队列</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  $box.animate(&#123;</span><br><span class=\"line\">    left:<span class=\"number\">100</span>,</span><br><span class=\"line\">    top:<span class=\"number\">100</span></span><br><span class=\"line\">  &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n<p>这个队列执行顺序其实是：先变化<code>width</code>，<code>height</code>然后是<code>top</code>，<code>left</code>最后才是<code>background</code>。因为<code>background</code>所在的队列是<code>width</code>所在队列的回调函数，它是后面加上去的。<code>width</code>与<code>top</code>所在的队列是原先就在的，所以回调函数之后放在原有队列的最后面执行。<br>如果我在队列1执行完后不想再执行队列2，该怎么阻止队列2执行呢？可以先给队列2起个名字，再用<code>.cleartQueue()</code>来阻止。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> $box = $(<span class=\"string\">'#box'</span>);</span><br><span class=\"line\">    $box.animate(&#123;</span><br><span class=\"line\">        width:<span class=\"number\">300</span>,</span><br><span class=\"line\">        height:<span class=\"number\">300</span></span><br><span class=\"line\">    &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">    $box.queue(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        $box.css(<span class=\"string\">'background'</span>,<span class=\"string\">'blue'</span>);</span><br><span class=\"line\">        $box.dequeue();  <span class=\"comment\">//结束此次队列</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    $box.animate(<span class=\"string\">'hbb'</span>,&#123;</span><br><span class=\"line\">         left:<span class=\"number\">100</span>,</span><br><span class=\"line\">         top:<span class=\"number\">100</span></span><br><span class=\"line\">    &#125;,<span class=\"number\">500</span>);</span><br><span class=\"line\">    $box.clearQueue(<span class=\"string\">'hbb'</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n\n"},{"title":"get与post区别","comments":1,"description":"HTTP适用于从www服务器传输文本到本地浏览器的传输协议，可使浏览器高效，快速的传输，还可以确定传输文档中的哪一部分首先显示。 与服务器交互的四种最基本的方法：GET POST PUT DELETE。","date":"2016-03-15T10:45:10.000Z","keywords":"HTTP, GET, POST, PUT, DELETE","_content":"\n## `get`与`post`概述\n\n说起`get`与`post`我们不得不提起`http`。 首先认识`HTTP`：（`HTTP，HyperText Transfer Protocol`)超文本传输协议，目的是保证客户机与服务器之间的通信。\n\n`HTTP`适用于从`www`服务器传输文本到本地浏览器的传输协议，可使浏览器高效，快速的传输，还可以确定传输文档中的哪一部分首先显示。 与服务器交互的四种最基本的方法：`GET POST PUT DELETE`。\n\n一般在浏览器输入网址访问资源都是通过`get`方式。在`form`中我们也可以通过`method`指定传输方式`get`或者`post`。\n\n## URL\n\n`URL:Uniform Resource Locator`统一定位资源符。 基本`URL`包含模式（或称协议）、服务器名称（或IP地址）、路径和文件名。 如“协议://授权/路径?查询”。 完整的、带有授权部分的普通统一资源标志符语法看上去如下：协议://用户名:密码@子域名.域名.顶级域名:端口号/目录/文件名.文件后缀?参数=值#标志。\n\n`HTTP`中的四种方法就是对应的这个资源的查，改，增，删这四个操作。\n\n## get与post区别\n\n如果你要是认为`get`与`post`的区别是数据在`url`可见，而`post`不可见。那你只是知道了一部分。其实`get`与`post`的区别很多。\n\n**get方法**\n\n1.请求可被缓存 。\n\n2.请求保存在浏览器历史记录当中。\n\n3.请求可被收藏为书签。\n\n4.不应再请求敏感数据时使用。\n\n5.请求有长度限制。\n\n6.get请求只应当用于取回数据，\n\n**post请求**\n\n1.不会被缓存。\n\n2.不会保存在历史记录中。\n\n3.post请求不能收藏为书签。\n\n4.post请求对数据的长度没有限制。\n\n\n`get`相对安全：这里的相对安全指get不会改变服务器里面的数据，而`post`一般会更改里面的数据。\n\n`post`相对安全：这里的相对安全指`post`不会在`url`中显示请求的一些参数，而`get`在`url`可以看到。\n\n \n\n## HTTP方法的幂等性\n\n是指一次和多次请求某一个资源应该具有同样的副作用。\n\n`GET`是获取指定`URL`上的资源，是读操作，重要的一点是不论对某个资源`GET`多少次，它的状态是不会改变的， 所以我们说`GET`是安全的，所以`GET`返回的内容可以被浏览器，`Cache`服务器缓存起来。\n\n而`POST`的语意是对指定资源“追加/添加”数据，所以是不安全的，每次提交的`POST`，参与的代码都会认为这个操作会修改操作对象资源的状态， 缓存服务器不会缓存`POST`请求返回内容。所以是不安全的。\n\n`get`与`post`不同涉及到很广的知识面。在查阅资料的过程中也看到了一篇有意思的文章：http://www.techweb.com.cn/network/system/2016-10-11/2407736.shtml\n\n除了上述列举的不同其实还有以下三点：\n\n`GET`和`POST`本质上就是`TCP`链接。这里可以把`TCP`理解为运输模块。传输的数据太大对浏览器与服务器都是很大的负担。通常会限制url数据大小。\n\n`GET`一个`TCP`数据包，`POST`会产生两个。\n\n对于`GET`方式的请求，浏览器会把`http header`和`data`一并发送出去，服务器响应200(返回数据); 而对于`POST`，浏览器先发送`header`，服务器响应100 `continue`，浏览器再发送`data`，服务器响应200 ok(返回数据)。\n\n## TCP\n`Transmission Control Protocol/Internet Protocol`的简写，中译名为传输控制协议/因特网互联协议， 又名网络通讯协议，是`Internet`最基本的协议、`Internet`国际互联网络的基础，由网络层的`IP`协议和传输层的`TCP`协议组成。 `TCP/IP` 定义了电子设备如何连入因特网，以及数据如何在它们之间传输的标准。协议采用了4层的层级结构，每一层都呼叫它的下一层所提供的协议来完成自己的需求。 通俗而言：`TCP`负责发现传输的问题，一有问题就发出信号，要求重新传输，直到所有数据安全正确地传输到目的地。而`IP`是给因特网的每一台联网设备规定一个地址。\n\n## 总结\n\n我们理解`get`与`post`的区别不能仅仅局限于数据在`url`是否可见，发散思维，在学习过程中多思考，慢慢锻炼自己的思维能力。有思路，问题也就迎刃而解！\n\n博主是自学的，文章也查阅了不少资料，但是因为能力所限，内容难免有些缺陷。\n","source":"_posts/js-6.md","raw":"---\ntitle: get与post区别\ncomments: true\ndescription: HTTP适用于从www服务器传输文本到本地浏览器的传输协议，可使浏览器高效，快速的传输，还可以确定传输文档中的哪一部分首先显示。 与服务器交互的四种最基本的方法：GET POST PUT DELETE。\ntags: \"js\"\ndate: 2016-03-15 18:45:10\ncategories: \"js\"\nkeywords: HTTP, GET, POST, PUT, DELETE\n---\n\n## `get`与`post`概述\n\n说起`get`与`post`我们不得不提起`http`。 首先认识`HTTP`：（`HTTP，HyperText Transfer Protocol`)超文本传输协议，目的是保证客户机与服务器之间的通信。\n\n`HTTP`适用于从`www`服务器传输文本到本地浏览器的传输协议，可使浏览器高效，快速的传输，还可以确定传输文档中的哪一部分首先显示。 与服务器交互的四种最基本的方法：`GET POST PUT DELETE`。\n\n一般在浏览器输入网址访问资源都是通过`get`方式。在`form`中我们也可以通过`method`指定传输方式`get`或者`post`。\n\n## URL\n\n`URL:Uniform Resource Locator`统一定位资源符。 基本`URL`包含模式（或称协议）、服务器名称（或IP地址）、路径和文件名。 如“协议://授权/路径?查询”。 完整的、带有授权部分的普通统一资源标志符语法看上去如下：协议://用户名:密码@子域名.域名.顶级域名:端口号/目录/文件名.文件后缀?参数=值#标志。\n\n`HTTP`中的四种方法就是对应的这个资源的查，改，增，删这四个操作。\n\n## get与post区别\n\n如果你要是认为`get`与`post`的区别是数据在`url`可见，而`post`不可见。那你只是知道了一部分。其实`get`与`post`的区别很多。\n\n**get方法**\n\n1.请求可被缓存 。\n\n2.请求保存在浏览器历史记录当中。\n\n3.请求可被收藏为书签。\n\n4.不应再请求敏感数据时使用。\n\n5.请求有长度限制。\n\n6.get请求只应当用于取回数据，\n\n**post请求**\n\n1.不会被缓存。\n\n2.不会保存在历史记录中。\n\n3.post请求不能收藏为书签。\n\n4.post请求对数据的长度没有限制。\n\n\n`get`相对安全：这里的相对安全指get不会改变服务器里面的数据，而`post`一般会更改里面的数据。\n\n`post`相对安全：这里的相对安全指`post`不会在`url`中显示请求的一些参数，而`get`在`url`可以看到。\n\n \n\n## HTTP方法的幂等性\n\n是指一次和多次请求某一个资源应该具有同样的副作用。\n\n`GET`是获取指定`URL`上的资源，是读操作，重要的一点是不论对某个资源`GET`多少次，它的状态是不会改变的， 所以我们说`GET`是安全的，所以`GET`返回的内容可以被浏览器，`Cache`服务器缓存起来。\n\n而`POST`的语意是对指定资源“追加/添加”数据，所以是不安全的，每次提交的`POST`，参与的代码都会认为这个操作会修改操作对象资源的状态， 缓存服务器不会缓存`POST`请求返回内容。所以是不安全的。\n\n`get`与`post`不同涉及到很广的知识面。在查阅资料的过程中也看到了一篇有意思的文章：http://www.techweb.com.cn/network/system/2016-10-11/2407736.shtml\n\n除了上述列举的不同其实还有以下三点：\n\n`GET`和`POST`本质上就是`TCP`链接。这里可以把`TCP`理解为运输模块。传输的数据太大对浏览器与服务器都是很大的负担。通常会限制url数据大小。\n\n`GET`一个`TCP`数据包，`POST`会产生两个。\n\n对于`GET`方式的请求，浏览器会把`http header`和`data`一并发送出去，服务器响应200(返回数据); 而对于`POST`，浏览器先发送`header`，服务器响应100 `continue`，浏览器再发送`data`，服务器响应200 ok(返回数据)。\n\n## TCP\n`Transmission Control Protocol/Internet Protocol`的简写，中译名为传输控制协议/因特网互联协议， 又名网络通讯协议，是`Internet`最基本的协议、`Internet`国际互联网络的基础，由网络层的`IP`协议和传输层的`TCP`协议组成。 `TCP/IP` 定义了电子设备如何连入因特网，以及数据如何在它们之间传输的标准。协议采用了4层的层级结构，每一层都呼叫它的下一层所提供的协议来完成自己的需求。 通俗而言：`TCP`负责发现传输的问题，一有问题就发出信号，要求重新传输，直到所有数据安全正确地传输到目的地。而`IP`是给因特网的每一台联网设备规定一个地址。\n\n## 总结\n\n我们理解`get`与`post`的区别不能仅仅局限于数据在`url`是否可见，发散思维，在学习过程中多思考，慢慢锻炼自己的思维能力。有思路，问题也就迎刃而解！\n\n博主是自学的，文章也查阅了不少资料，但是因为能力所限，内容难免有些缺陷。\n","slug":"js-6","published":1,"updated":"2019-09-18T01:12:45.884Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2aa001tn0b9l4mp14wz","content":"<h2 id=\"get与post概述\"><a href=\"#get与post概述\" class=\"headerlink\" title=\"get与post概述\"></a><code>get</code>与<code>post</code>概述</h2><p>说起<code>get</code>与<code>post</code>我们不得不提起<code>http</code>。 首先认识<code>HTTP</code>：（<code>HTTP，HyperText Transfer Protocol</code>)超文本传输协议，目的是保证客户机与服务器之间的通信。</p>\n<p><code>HTTP</code>适用于从<code>www</code>服务器传输文本到本地浏览器的传输协议，可使浏览器高效，快速的传输，还可以确定传输文档中的哪一部分首先显示。 与服务器交互的四种最基本的方法：<code>GET POST PUT DELETE</code>。</p>\n<p>一般在浏览器输入网址访问资源都是通过<code>get</code>方式。在<code>form</code>中我们也可以通过<code>method</code>指定传输方式<code>get</code>或者<code>post</code>。</p>\n<h2 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h2><p><code>URL:Uniform Resource Locator</code>统一定位资源符。 基本<code>URL</code>包含模式（或称协议）、服务器名称（或IP地址）、路径和文件名。 如“协议://授权/路径?查询”。 完整的、带有授权部分的普通统一资源标志符语法看上去如下：协议://用户名:密码@子域名.域名.顶级域名:端口号/目录/文件名.文件后缀?参数=值#标志。</p>\n<p><code>HTTP</code>中的四种方法就是对应的这个资源的查，改，增，删这四个操作。</p>\n<h2 id=\"get与post区别\"><a href=\"#get与post区别\" class=\"headerlink\" title=\"get与post区别\"></a>get与post区别</h2><p>如果你要是认为<code>get</code>与<code>post</code>的区别是数据在<code>url</code>可见，而<code>post</code>不可见。那你只是知道了一部分。其实<code>get</code>与<code>post</code>的区别很多。</p>\n<p><strong>get方法</strong></p>\n<p>1.请求可被缓存 。</p>\n<p>2.请求保存在浏览器历史记录当中。</p>\n<p>3.请求可被收藏为书签。</p>\n<p>4.不应再请求敏感数据时使用。</p>\n<p>5.请求有长度限制。</p>\n<p>6.get请求只应当用于取回数据，</p>\n<p><strong>post请求</strong></p>\n<p>1.不会被缓存。</p>\n<p>2.不会保存在历史记录中。</p>\n<p>3.post请求不能收藏为书签。</p>\n<p>4.post请求对数据的长度没有限制。</p>\n<p><code>get</code>相对安全：这里的相对安全指get不会改变服务器里面的数据，而<code>post</code>一般会更改里面的数据。</p>\n<p><code>post</code>相对安全：这里的相对安全指<code>post</code>不会在<code>url</code>中显示请求的一些参数，而<code>get</code>在<code>url</code>可以看到。</p>\n<h2 id=\"HTTP方法的幂等性\"><a href=\"#HTTP方法的幂等性\" class=\"headerlink\" title=\"HTTP方法的幂等性\"></a>HTTP方法的幂等性</h2><p>是指一次和多次请求某一个资源应该具有同样的副作用。</p>\n<p><code>GET</code>是获取指定<code>URL</code>上的资源，是读操作，重要的一点是不论对某个资源<code>GET</code>多少次，它的状态是不会改变的， 所以我们说<code>GET</code>是安全的，所以<code>GET</code>返回的内容可以被浏览器，<code>Cache</code>服务器缓存起来。</p>\n<p>而<code>POST</code>的语意是对指定资源“追加/添加”数据，所以是不安全的，每次提交的<code>POST</code>，参与的代码都会认为这个操作会修改操作对象资源的状态， 缓存服务器不会缓存<code>POST</code>请求返回内容。所以是不安全的。</p>\n<p><code>get</code>与<code>post</code>不同涉及到很广的知识面。在查阅资料的过程中也看到了一篇有意思的文章：<a href=\"http://www.techweb.com.cn/network/system/2016-10-11/2407736.shtml\" target=\"_blank\" rel=\"noopener\">http://www.techweb.com.cn/network/system/2016-10-11/2407736.shtml</a></p>\n<p>除了上述列举的不同其实还有以下三点：</p>\n<p><code>GET</code>和<code>POST</code>本质上就是<code>TCP</code>链接。这里可以把<code>TCP</code>理解为运输模块。传输的数据太大对浏览器与服务器都是很大的负担。通常会限制url数据大小。</p>\n<p><code>GET</code>一个<code>TCP</code>数据包，<code>POST</code>会产生两个。</p>\n<p>对于<code>GET</code>方式的请求，浏览器会把<code>http header</code>和<code>data</code>一并发送出去，服务器响应200(返回数据); 而对于<code>POST</code>，浏览器先发送<code>header</code>，服务器响应100 <code>continue</code>，浏览器再发送<code>data</code>，服务器响应200 ok(返回数据)。</p>\n<h2 id=\"TCP\"><a href=\"#TCP\" class=\"headerlink\" title=\"TCP\"></a>TCP</h2><p><code>Transmission Control Protocol/Internet Protocol</code>的简写，中译名为传输控制协议/因特网互联协议， 又名网络通讯协议，是<code>Internet</code>最基本的协议、<code>Internet</code>国际互联网络的基础，由网络层的<code>IP</code>协议和传输层的<code>TCP</code>协议组成。 <code>TCP/IP</code> 定义了电子设备如何连入因特网，以及数据如何在它们之间传输的标准。协议采用了4层的层级结构，每一层都呼叫它的下一层所提供的协议来完成自己的需求。 通俗而言：<code>TCP</code>负责发现传输的问题，一有问题就发出信号，要求重新传输，直到所有数据安全正确地传输到目的地。而<code>IP</code>是给因特网的每一台联网设备规定一个地址。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>我们理解<code>get</code>与<code>post</code>的区别不能仅仅局限于数据在<code>url</code>是否可见，发散思维，在学习过程中多思考，慢慢锻炼自己的思维能力。有思路，问题也就迎刃而解！</p>\n<p>博主是自学的，文章也查阅了不少资料，但是因为能力所限，内容难免有些缺陷。</p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<h2 id=\"get与post概述\"><a href=\"#get与post概述\" class=\"headerlink\" title=\"get与post概述\"></a><code>get</code>与<code>post</code>概述</h2><p>说起<code>get</code>与<code>post</code>我们不得不提起<code>http</code>。 首先认识<code>HTTP</code>：（<code>HTTP，HyperText Transfer Protocol</code>)超文本传输协议，目的是保证客户机与服务器之间的通信。</p>\n<p><code>HTTP</code>适用于从<code>www</code>服务器传输文本到本地浏览器的传输协议，可使浏览器高效，快速的传输，还可以确定传输文档中的哪一部分首先显示。 与服务器交互的四种最基本的方法：<code>GET POST PUT DELETE</code>。</p>\n<p>一般在浏览器输入网址访问资源都是通过<code>get</code>方式。在<code>form</code>中我们也可以通过<code>method</code>指定传输方式<code>get</code>或者<code>post</code>。</p>\n<h2 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h2><p><code>URL:Uniform Resource Locator</code>统一定位资源符。 基本<code>URL</code>包含模式（或称协议）、服务器名称（或IP地址）、路径和文件名。 如“协议://授权/路径?查询”。 完整的、带有授权部分的普通统一资源标志符语法看上去如下：协议://用户名:密码@子域名.域名.顶级域名:端口号/目录/文件名.文件后缀?参数=值#标志。</p>\n<p><code>HTTP</code>中的四种方法就是对应的这个资源的查，改，增，删这四个操作。</p>\n<h2 id=\"get与post区别\"><a href=\"#get与post区别\" class=\"headerlink\" title=\"get与post区别\"></a>get与post区别</h2><p>如果你要是认为<code>get</code>与<code>post</code>的区别是数据在<code>url</code>可见，而<code>post</code>不可见。那你只是知道了一部分。其实<code>get</code>与<code>post</code>的区别很多。</p>\n<p><strong>get方法</strong></p>\n<p>1.请求可被缓存 。</p>\n<p>2.请求保存在浏览器历史记录当中。</p>\n<p>3.请求可被收藏为书签。</p>\n<p>4.不应再请求敏感数据时使用。</p>\n<p>5.请求有长度限制。</p>\n<p>6.get请求只应当用于取回数据，</p>\n<p><strong>post请求</strong></p>\n<p>1.不会被缓存。</p>\n<p>2.不会保存在历史记录中。</p>\n<p>3.post请求不能收藏为书签。</p>\n<p>4.post请求对数据的长度没有限制。</p>\n<p><code>get</code>相对安全：这里的相对安全指get不会改变服务器里面的数据，而<code>post</code>一般会更改里面的数据。</p>\n<p><code>post</code>相对安全：这里的相对安全指<code>post</code>不会在<code>url</code>中显示请求的一些参数，而<code>get</code>在<code>url</code>可以看到。</p>\n<h2 id=\"HTTP方法的幂等性\"><a href=\"#HTTP方法的幂等性\" class=\"headerlink\" title=\"HTTP方法的幂等性\"></a>HTTP方法的幂等性</h2><p>是指一次和多次请求某一个资源应该具有同样的副作用。</p>\n<p><code>GET</code>是获取指定<code>URL</code>上的资源，是读操作，重要的一点是不论对某个资源<code>GET</code>多少次，它的状态是不会改变的， 所以我们说<code>GET</code>是安全的，所以<code>GET</code>返回的内容可以被浏览器，<code>Cache</code>服务器缓存起来。</p>\n<p>而<code>POST</code>的语意是对指定资源“追加/添加”数据，所以是不安全的，每次提交的<code>POST</code>，参与的代码都会认为这个操作会修改操作对象资源的状态， 缓存服务器不会缓存<code>POST</code>请求返回内容。所以是不安全的。</p>\n<p><code>get</code>与<code>post</code>不同涉及到很广的知识面。在查阅资料的过程中也看到了一篇有意思的文章：<a href=\"http://www.techweb.com.cn/network/system/2016-10-11/2407736.shtml\" target=\"_blank\" rel=\"noopener\">http://www.techweb.com.cn/network/system/2016-10-11/2407736.shtml</a></p>\n<p>除了上述列举的不同其实还有以下三点：</p>\n<p><code>GET</code>和<code>POST</code>本质上就是<code>TCP</code>链接。这里可以把<code>TCP</code>理解为运输模块。传输的数据太大对浏览器与服务器都是很大的负担。通常会限制url数据大小。</p>\n<p><code>GET</code>一个<code>TCP</code>数据包，<code>POST</code>会产生两个。</p>\n<p>对于<code>GET</code>方式的请求，浏览器会把<code>http header</code>和<code>data</code>一并发送出去，服务器响应200(返回数据); 而对于<code>POST</code>，浏览器先发送<code>header</code>，服务器响应100 <code>continue</code>，浏览器再发送<code>data</code>，服务器响应200 ok(返回数据)。</p>\n<h2 id=\"TCP\"><a href=\"#TCP\" class=\"headerlink\" title=\"TCP\"></a>TCP</h2><p><code>Transmission Control Protocol/Internet Protocol</code>的简写，中译名为传输控制协议/因特网互联协议， 又名网络通讯协议，是<code>Internet</code>最基本的协议、<code>Internet</code>国际互联网络的基础，由网络层的<code>IP</code>协议和传输层的<code>TCP</code>协议组成。 <code>TCP/IP</code> 定义了电子设备如何连入因特网，以及数据如何在它们之间传输的标准。协议采用了4层的层级结构，每一层都呼叫它的下一层所提供的协议来完成自己的需求。 通俗而言：<code>TCP</code>负责发现传输的问题，一有问题就发出信号，要求重新传输，直到所有数据安全正确地传输到目的地。而<code>IP</code>是给因特网的每一台联网设备规定一个地址。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>我们理解<code>get</code>与<code>post</code>的区别不能仅仅局限于数据在<code>url</code>是否可见，发散思维，在学习过程中多思考，慢慢锻炼自己的思维能力。有思路，问题也就迎刃而解！</p>\n<p>博主是自学的，文章也查阅了不少资料，但是因为能力所限，内容难免有些缺陷。</p>\n"},{"title":"定时器传递参数问题","comments":1,"description":"定时器传递参数问题","date":"2016-09-10T11:35:50.000Z","keywords":"定时器传递参数问题","_content":"\n## 定时器传参\n\n`setTimeout(a,timer)`/`setInterval(a,timer)`;当 `a`为函数名的时候不能传参数，如果过`a`为字符串的时候可以传参数。\n\n```js\nfunction a() {\n  alert('b')\n};\nsetTimeout(a,3000);  //'b'.\nvar i = 'string';\nfunction a(b) {\n     alert(b);\n};\nsetTimeout(a(i),3000); //立刻执行，弹出‘string’,不是我们想要的3s之后在执行。\n```\n\n## 如何解决a为函数名的情况下传递参数\n\n解决a为函数名的情况下传递参数呢 。\n\n### 函数名采用字符串的形式\n\n```js\nvar i = 'string';\nfunction a(b) {\n    alert(b)\n}\nsetTimeout('a(i)',3000); //给a(i)加上引号就可以了。\n```\n\n### 匿名函数封装\n\n```js\nvar i = 'string';\nfunction a(b) {\n  alert(b)\n}\nsetTimeout(function () {\n  a(i);\n},3000); //这样也是可以再3s之后弹出’string‘的。\n```\n\n### 创建一个新的函数将a函数作为返回值返回\n\n```js\nvar i = 'string';\nfunction a() {\n  alert(i);\n}；\nfunction b(i) {\n  return function(){a(i);}\n}；\nsetTimeout(b(i),3000); //这样也是可以再3s之后弹出'string'的。\n```\n\n### 我认为是最方便的一种方法，把要传的参数放到定时器里面的第三位\n\n```js\nvar i = 'string';\nfunction a(i) {\n alert(i);\n}；\nsetTimeout(a,3000,i);  //这种方法也是可以的\n```\n\n因为`JavaScript`是运行于单线程的环境中的，定时器只是计划在某个时间执行，因为在页面的声明周期中，不同的时间可能有其他代码控制`JavaScript`进程，定时期的执行时间不能保证。\n\n## 定时器工作方式\n\n定时器对队列的工作方式是：在特定的时间过去后将代码插入，把定时器这段代码插入，并不是立刻执行，只能说是会尽快执行，因为定时器代码加入队列后。如果有其他代码需要执行，那么定时器代码执行需要等待，直到，队列内没有其东西，这段代码才会执行。\n\n```js\nvar btn = document.getElementById('btn');\nbtn.onclick = function () {\n  setTimeout(function () {\n      alert(1);\n  },3000);\n  document.getElementById('pic').style.background = 'red';\n};\n```\n\n这里我们设置了一个3s后调用的定时器，点击`btn`之后首先将`onclick`事件添加到队列中，改程序执行后才能设置定时器，再有3s之后，指定的代码才能添加到队列中等待执行。这里指定的事件间隔是表示何时将定时器的代码添加到队列，而不是何时实际执行的代码。\n","source":"_posts/js-8.md","raw":"---\ntitle: 定时器传递参数问题\ncomments: true\ndescription: 定时器传递参数问题\ntags: \"js\"\ndate: 2016-09-10 19:35:50\ncategories: \"js\"\nkeywords: 定时器传递参数问题\n---\n\n## 定时器传参\n\n`setTimeout(a,timer)`/`setInterval(a,timer)`;当 `a`为函数名的时候不能传参数，如果过`a`为字符串的时候可以传参数。\n\n```js\nfunction a() {\n  alert('b')\n};\nsetTimeout(a,3000);  //'b'.\nvar i = 'string';\nfunction a(b) {\n     alert(b);\n};\nsetTimeout(a(i),3000); //立刻执行，弹出‘string’,不是我们想要的3s之后在执行。\n```\n\n## 如何解决a为函数名的情况下传递参数\n\n解决a为函数名的情况下传递参数呢 。\n\n### 函数名采用字符串的形式\n\n```js\nvar i = 'string';\nfunction a(b) {\n    alert(b)\n}\nsetTimeout('a(i)',3000); //给a(i)加上引号就可以了。\n```\n\n### 匿名函数封装\n\n```js\nvar i = 'string';\nfunction a(b) {\n  alert(b)\n}\nsetTimeout(function () {\n  a(i);\n},3000); //这样也是可以再3s之后弹出’string‘的。\n```\n\n### 创建一个新的函数将a函数作为返回值返回\n\n```js\nvar i = 'string';\nfunction a() {\n  alert(i);\n}；\nfunction b(i) {\n  return function(){a(i);}\n}；\nsetTimeout(b(i),3000); //这样也是可以再3s之后弹出'string'的。\n```\n\n### 我认为是最方便的一种方法，把要传的参数放到定时器里面的第三位\n\n```js\nvar i = 'string';\nfunction a(i) {\n alert(i);\n}；\nsetTimeout(a,3000,i);  //这种方法也是可以的\n```\n\n因为`JavaScript`是运行于单线程的环境中的，定时器只是计划在某个时间执行，因为在页面的声明周期中，不同的时间可能有其他代码控制`JavaScript`进程，定时期的执行时间不能保证。\n\n## 定时器工作方式\n\n定时器对队列的工作方式是：在特定的时间过去后将代码插入，把定时器这段代码插入，并不是立刻执行，只能说是会尽快执行，因为定时器代码加入队列后。如果有其他代码需要执行，那么定时器代码执行需要等待，直到，队列内没有其东西，这段代码才会执行。\n\n```js\nvar btn = document.getElementById('btn');\nbtn.onclick = function () {\n  setTimeout(function () {\n      alert(1);\n  },3000);\n  document.getElementById('pic').style.background = 'red';\n};\n```\n\n这里我们设置了一个3s后调用的定时器，点击`btn`之后首先将`onclick`事件添加到队列中，改程序执行后才能设置定时器，再有3s之后，指定的代码才能添加到队列中等待执行。这里指定的事件间隔是表示何时将定时器的代码添加到队列，而不是何时实际执行的代码。\n","slug":"js-8","published":1,"updated":"2019-09-18T01:30:05.688Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2ac001xn0b9mcr0u6s8","content":"<h2 id=\"定时器传参\"><a href=\"#定时器传参\" class=\"headerlink\" title=\"定时器传参\"></a>定时器传参</h2><p><code>setTimeout(a,timer)</code>/<code>setInterval(a,timer)</code>;当 <code>a</code>为函数名的时候不能传参数，如果过<code>a</code>为字符串的时候可以传参数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">'b'</span>)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">setTimeout(a,<span class=\"number\">3000</span>);  <span class=\"comment\">//'b'.</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"string\">'string'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\">b</span>) </span>&#123;</span><br><span class=\"line\">     alert(b);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">setTimeout(a(i),<span class=\"number\">3000</span>); <span class=\"comment\">//立刻执行，弹出‘string’,不是我们想要的3s之后在执行。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"如何解决a为函数名的情况下传递参数\"><a href=\"#如何解决a为函数名的情况下传递参数\" class=\"headerlink\" title=\"如何解决a为函数名的情况下传递参数\"></a>如何解决a为函数名的情况下传递参数</h2><p>解决a为函数名的情况下传递参数呢 。</p>\n<h3 id=\"函数名采用字符串的形式\"><a href=\"#函数名采用字符串的形式\" class=\"headerlink\" title=\"函数名采用字符串的形式\"></a>函数名采用字符串的形式</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"string\">'string'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\">b</span>) </span>&#123;</span><br><span class=\"line\">    alert(b)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">setTimeout(<span class=\"string\">'a(i)'</span>,<span class=\"number\">3000</span>); <span class=\"comment\">//给a(i)加上引号就可以了。</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"匿名函数封装\"><a href=\"#匿名函数封装\" class=\"headerlink\" title=\"匿名函数封装\"></a>匿名函数封装</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"string\">'string'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\">b</span>) </span>&#123;</span><br><span class=\"line\">  alert(b)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  a(i);</span><br><span class=\"line\">&#125;,<span class=\"number\">3000</span>); <span class=\"comment\">//这样也是可以再3s之后弹出’string‘的。</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"创建一个新的函数将a函数作为返回值返回\"><a href=\"#创建一个新的函数将a函数作为返回值返回\" class=\"headerlink\" title=\"创建一个新的函数将a函数作为返回值返回\"></a>创建一个新的函数将a函数作为返回值返回</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"string\">'string'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(i);</span><br><span class=\"line\">&#125;；</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">b</span>(<span class=\"params\">i</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;a(i);&#125;</span><br><span class=\"line\">&#125;；</span><br><span class=\"line\">setTimeout(b(i),<span class=\"number\">3000</span>); <span class=\"comment\">//这样也是可以再3s之后弹出'string'的。</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"我认为是最方便的一种方法，把要传的参数放到定时器里面的第三位\"><a href=\"#我认为是最方便的一种方法，把要传的参数放到定时器里面的第三位\" class=\"headerlink\" title=\"我认为是最方便的一种方法，把要传的参数放到定时器里面的第三位\"></a>我认为是最方便的一种方法，把要传的参数放到定时器里面的第三位</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"string\">'string'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\">i</span>) </span>&#123;</span><br><span class=\"line\"> alert(i);</span><br><span class=\"line\">&#125;；</span><br><span class=\"line\">setTimeout(a,<span class=\"number\">3000</span>,i);  <span class=\"comment\">//这种方法也是可以的</span></span><br></pre></td></tr></table></figure>\n\n<p>因为<code>JavaScript</code>是运行于单线程的环境中的，定时器只是计划在某个时间执行，因为在页面的声明周期中，不同的时间可能有其他代码控制<code>JavaScript</code>进程，定时期的执行时间不能保证。</p>\n<h2 id=\"定时器工作方式\"><a href=\"#定时器工作方式\" class=\"headerlink\" title=\"定时器工作方式\"></a>定时器工作方式</h2><p>定时器对队列的工作方式是：在特定的时间过去后将代码插入，把定时器这段代码插入，并不是立刻执行，只能说是会尽快执行，因为定时器代码加入队列后。如果有其他代码需要执行，那么定时器代码执行需要等待，直到，队列内没有其东西，这段代码才会执行。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'btn'</span>);</span><br><span class=\"line\">btn.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      alert(<span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;,<span class=\"number\">3000</span>);</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'pic'</span>).style.background = <span class=\"string\">'red'</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>这里我们设置了一个3s后调用的定时器，点击<code>btn</code>之后首先将<code>onclick</code>事件添加到队列中，改程序执行后才能设置定时器，再有3s之后，指定的代码才能添加到队列中等待执行。这里指定的事件间隔是表示何时将定时器的代码添加到队列，而不是何时实际执行的代码。</p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<h2 id=\"定时器传参\"><a href=\"#定时器传参\" class=\"headerlink\" title=\"定时器传参\"></a>定时器传参</h2><p><code>setTimeout(a,timer)</code>/<code>setInterval(a,timer)</code>;当 <code>a</code>为函数名的时候不能传参数，如果过<code>a</code>为字符串的时候可以传参数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">'b'</span>)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">setTimeout(a,<span class=\"number\">3000</span>);  <span class=\"comment\">//'b'.</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"string\">'string'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\">b</span>) </span>&#123;</span><br><span class=\"line\">     alert(b);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">setTimeout(a(i),<span class=\"number\">3000</span>); <span class=\"comment\">//立刻执行，弹出‘string’,不是我们想要的3s之后在执行。</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"如何解决a为函数名的情况下传递参数\"><a href=\"#如何解决a为函数名的情况下传递参数\" class=\"headerlink\" title=\"如何解决a为函数名的情况下传递参数\"></a>如何解决a为函数名的情况下传递参数</h2><p>解决a为函数名的情况下传递参数呢 。</p>\n<h3 id=\"函数名采用字符串的形式\"><a href=\"#函数名采用字符串的形式\" class=\"headerlink\" title=\"函数名采用字符串的形式\"></a>函数名采用字符串的形式</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"string\">'string'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\">b</span>) </span>&#123;</span><br><span class=\"line\">    alert(b)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">setTimeout(<span class=\"string\">'a(i)'</span>,<span class=\"number\">3000</span>); <span class=\"comment\">//给a(i)加上引号就可以了。</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"匿名函数封装\"><a href=\"#匿名函数封装\" class=\"headerlink\" title=\"匿名函数封装\"></a>匿名函数封装</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"string\">'string'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\">b</span>) </span>&#123;</span><br><span class=\"line\">  alert(b)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  a(i);</span><br><span class=\"line\">&#125;,<span class=\"number\">3000</span>); <span class=\"comment\">//这样也是可以再3s之后弹出’string‘的。</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"创建一个新的函数将a函数作为返回值返回\"><a href=\"#创建一个新的函数将a函数作为返回值返回\" class=\"headerlink\" title=\"创建一个新的函数将a函数作为返回值返回\"></a>创建一个新的函数将a函数作为返回值返回</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"string\">'string'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(i);</span><br><span class=\"line\">&#125;；</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">b</span>(<span class=\"params\">i</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;a(i);&#125;</span><br><span class=\"line\">&#125;；</span><br><span class=\"line\">setTimeout(b(i),<span class=\"number\">3000</span>); <span class=\"comment\">//这样也是可以再3s之后弹出'string'的。</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"我认为是最方便的一种方法，把要传的参数放到定时器里面的第三位\"><a href=\"#我认为是最方便的一种方法，把要传的参数放到定时器里面的第三位\" class=\"headerlink\" title=\"我认为是最方便的一种方法，把要传的参数放到定时器里面的第三位\"></a>我认为是最方便的一种方法，把要传的参数放到定时器里面的第三位</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> i = <span class=\"string\">'string'</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\">i</span>) </span>&#123;</span><br><span class=\"line\"> alert(i);</span><br><span class=\"line\">&#125;；</span><br><span class=\"line\">setTimeout(a,<span class=\"number\">3000</span>,i);  <span class=\"comment\">//这种方法也是可以的</span></span><br></pre></td></tr></table></figure>\n\n<p>因为<code>JavaScript</code>是运行于单线程的环境中的，定时器只是计划在某个时间执行，因为在页面的声明周期中，不同的时间可能有其他代码控制<code>JavaScript</code>进程，定时期的执行时间不能保证。</p>\n<h2 id=\"定时器工作方式\"><a href=\"#定时器工作方式\" class=\"headerlink\" title=\"定时器工作方式\"></a>定时器工作方式</h2><p>定时器对队列的工作方式是：在特定的时间过去后将代码插入，把定时器这段代码插入，并不是立刻执行，只能说是会尽快执行，因为定时器代码加入队列后。如果有其他代码需要执行，那么定时器代码执行需要等待，直到，队列内没有其东西，这段代码才会执行。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'btn'</span>);</span><br><span class=\"line\">btn.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      alert(<span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;,<span class=\"number\">3000</span>);</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'pic'</span>).style.background = <span class=\"string\">'red'</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>这里我们设置了一个3s后调用的定时器，点击<code>btn</code>之后首先将<code>onclick</code>事件添加到队列中，改程序执行后才能设置定时器，再有3s之后，指定的代码才能添加到队列中等待执行。这里指定的事件间隔是表示何时将定时器的代码添加到队列，而不是何时实际执行的代码。</p>\n"},{"title":"事件冒泡及捕获","comments":1,"description":"IE的事件流叫做事件冒泡，即事件开始由最具体的元素(文档中嵌套层次最深的节点）接收，然后逐级向上传播到对象层次的最顶层(由里向外触发同类事件)。恰恰相反，是从不太具体的节点早接收事件，最具体的节点最后接收事件，目的就在于时间到达预定目标之前捕获它（由外向内触发同类事件）。","date":"2016-09-10T11:35:50.000Z","keywords":"事件冒泡, 捕获","_content":"\n## 事件冒泡与事件捕获\n\n### 事件冒泡\n\nIE的事件流叫做事件冒泡，即事件开始由最具体的元素(文档中嵌套层次最深的节点）接收，然后逐级向上传播到对象层次的最顶层(由里向外触发同类事件)。\n\n### 事件捕获\n\n恰恰相反，是从不太具体的节点早接收事件，最具体的节点最后接收事件，目的就在于时间到达预定目标之前捕获它（由外向内触发同类事件）。\n\n### 事件冒泡及捕获\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/m1.jpg)\n\n下面来看个示例：\n\n```html\n<div id = 'box'>\n  <p>111</p>\n</div>\n```\n\n在`div`中插入以下`p`标签，`p`与`div`都有点击事件，当点击`p`的时候那个先执行呢？\n\n```js\nvar oBox = document.getElementById('box'),\n    oP = oBox.children[0];\n    oBox.onclick = function () {\n      alert('box先触发')\n    };\n    oP.onclick = function (e) {\n      e = e ||window.event;\n      //e.cancelBubble = true;\n      alert('p先触发')\n    }\n```\n\n点击`p`，`p`先触发，然后`box`再触发。我们如果不需要`box`触发，可以阻至冒泡。（冒泡是从内到外，捕获是从外到内）\n\n可以再`p`点击内加上`e.cancelBubble = true`; 这样`box`点击事件就不会触发(阻止冒泡)。\n\n使用`addEventListener`来写也可以\n\n```js\noBox.addEventListener('click',function () {\n  alert('box先触发')\n},false);\noP.addEventListener('click',function () {\n    alert('p先触发')\n},false);\n```\n\n如果默认false为冒泡；如果要事件捕获可以把`box`中的false改为true。\n\n## 事件委托\n我找到一个比较流行的例子：取快递事件。\n\n有30个同事预计会在周一收到快递。为签收快递，有两种办法：一是30个人在公司门口等快递；二是委托给前台MM代为签收。现实当中，我们大都采用委托的方案（公司也不会容忍那么多员工站在门口就为了等快递）。前台MM收到快递后，她会判断收件人是谁，然后按照收件人的要求签收，甚至代为付款。这种方案还有一个优势，那就是即使公司里来了新员工（不管多少），前台MM也会在收到寄给新员工的快递后核实并代为签收。\n\n这里其实还有2层意思的：\n\n第一，现在委托前台的同事是可以代为签收的，即程序中的现有的`dom`节点是有事件的；\n\n第二，新员工也是可以被前台MM代为签收的，即程序中新添加的`dom`节点也是有事件的。\n\n在`js`中，事件程序的处理数量直接关系到页面的整体运行，因为需要不断的与`DOM`节点进行交互，访问DOM节点次数越多，就会延长浏览器的交互时间。减少DOM操作优化性能的重要手段，可以利用事件委托来处理。//\n比如有10个或者更多个li，我们点击li就会弹出相应的内容，相信我们大多数都会用到`for`去遍历:\n\n```js\n  var aLi = document.querySelectorAll(\"#box ul li\");\n  for (var i = 0,length = aLi.length; i < length; i++) {\n    aLi[i].onclick = function () {\n      alert(this.innerHTML);\n    }\n  }\n```\n每一次点击都会去访问`li`节点，毫无疑问增加了访问DOM的次数，如果更多数量这样的就会影响性能。\n\n上面情况适合采用事件委托：\n\n```js\nvar oBox = document.getElementById('box');\noBox.onclick = function (e) {\n  e = e || window.event;\n  if (e.target.nodeName === 'LI'){\n    alert(e.target.innerHTML);\n  }\n};\n```\n\n这样委托用`oBox`点击去管理所有的`li`点击，比上面遍历li要好一些。\n\n```js\n<ul>\n  <li>11</li>\n  <li>22</li>\n  <li>33</li>\n  <li>44</li>\n  <li>55</li>\n  <li>66</li>\n  <li>77</li>\n  <li>88</li>\n  <li>99</li>\n  <li>10</li>\n</ul>\n<button id=“btn”>生成</button>\n```\n\n刚生成的`li`有没有点击事件呢？\n\n```js\nvar oBox = document.getElementById('box');\nvar oUl = oBox.children[0];\nvar btn = document.getElementById('btn');\n var aLi = document.querySelectorAll(\"#box ul li\");\n for (var i = 0,length = aLi.length; i < length; i++) {\n    aLi[i].onclick = function () {\n    alert(this.innerHTML);\n  }\n}\n//生成li\nbtn.onclick = function() {\n  var li = document.createElement('li');\n  li.innerHTML = '1111';\n  oUl.appendChild(li);\n  click();\n};\n```\n\n这样生成的`li`没有点击事件的.\n\n采用事件委托方法可以。\n\n```js\nvar oBox = document.getElementById('box');\nvar btn = document.getElementById('btn');\nvar oUl = oBox.children[0];\nvar aLi = document.querySelectorAll(\"#box ul li\");\noBox.onclick = function (e) {\n  e = e || window.event;\n  if (e.target.nodeName === 'LI'){\n    alert(e.target.innerHTML);\n  }\n};\nbtn.addEventListener('click',function () {\n //生成li\n  var li = document.createElement('li');\n  li.innerHTML = '1111';\n  oUl.appendChild(li);\n});\n```\n\n## jQuery中的delegate\n\n`jquery`中的`delegate`也可以。`delegate()` 方法为指定的元素（属于被选元素的子元素）添加一个或多个事件处理程序，并规定当这些事件发生时运行的函数。\n\n使用 `delegate()` 方法的事件处理程序适用于当前或未来的元素（比如由脚本创建的新元素）。//`jQuery`中`live/die`也有这样的功能。\n\n```js\n//生成li\nvar $box = $('#box'),\n       $btn = $('#btn'),\n       i = 1;\n$box.delegate('li','click',function () {\n      $(this).slideToggle();\n});\n$btn.click(function (i) {\n      $('<li>i</li>').insertAfter('button');\n      i++;\n});\n```\n这样生成的`li`有点击事件的。\n\n事件冒泡，捕获与委托现实中经常遇到，主要就是能清楚概念，我在刚开始解除时候也是晕，理解它就好了，用的时候也有针对性。\n","source":"_posts/js-9.md","raw":"---\ntitle: 事件冒泡及捕获\ncomments: true\ndescription: IE的事件流叫做事件冒泡，即事件开始由最具体的元素(文档中嵌套层次最深的节点）接收，然后逐级向上传播到对象层次的最顶层(由里向外触发同类事件)。恰恰相反，是从不太具体的节点早接收事件，最具体的节点最后接收事件，目的就在于时间到达预定目标之前捕获它（由外向内触发同类事件）。\ntags: \"js\"\ndate: 2016-09-10 19:35:50\ncategories: \"js\"\nkeywords: 事件冒泡, 捕获\n---\n\n## 事件冒泡与事件捕获\n\n### 事件冒泡\n\nIE的事件流叫做事件冒泡，即事件开始由最具体的元素(文档中嵌套层次最深的节点）接收，然后逐级向上传播到对象层次的最顶层(由里向外触发同类事件)。\n\n### 事件捕获\n\n恰恰相反，是从不太具体的节点早接收事件，最具体的节点最后接收事件，目的就在于时间到达预定目标之前捕获它（由外向内触发同类事件）。\n\n### 事件冒泡及捕获\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/m1.jpg)\n\n下面来看个示例：\n\n```html\n<div id = 'box'>\n  <p>111</p>\n</div>\n```\n\n在`div`中插入以下`p`标签，`p`与`div`都有点击事件，当点击`p`的时候那个先执行呢？\n\n```js\nvar oBox = document.getElementById('box'),\n    oP = oBox.children[0];\n    oBox.onclick = function () {\n      alert('box先触发')\n    };\n    oP.onclick = function (e) {\n      e = e ||window.event;\n      //e.cancelBubble = true;\n      alert('p先触发')\n    }\n```\n\n点击`p`，`p`先触发，然后`box`再触发。我们如果不需要`box`触发，可以阻至冒泡。（冒泡是从内到外，捕获是从外到内）\n\n可以再`p`点击内加上`e.cancelBubble = true`; 这样`box`点击事件就不会触发(阻止冒泡)。\n\n使用`addEventListener`来写也可以\n\n```js\noBox.addEventListener('click',function () {\n  alert('box先触发')\n},false);\noP.addEventListener('click',function () {\n    alert('p先触发')\n},false);\n```\n\n如果默认false为冒泡；如果要事件捕获可以把`box`中的false改为true。\n\n## 事件委托\n我找到一个比较流行的例子：取快递事件。\n\n有30个同事预计会在周一收到快递。为签收快递，有两种办法：一是30个人在公司门口等快递；二是委托给前台MM代为签收。现实当中，我们大都采用委托的方案（公司也不会容忍那么多员工站在门口就为了等快递）。前台MM收到快递后，她会判断收件人是谁，然后按照收件人的要求签收，甚至代为付款。这种方案还有一个优势，那就是即使公司里来了新员工（不管多少），前台MM也会在收到寄给新员工的快递后核实并代为签收。\n\n这里其实还有2层意思的：\n\n第一，现在委托前台的同事是可以代为签收的，即程序中的现有的`dom`节点是有事件的；\n\n第二，新员工也是可以被前台MM代为签收的，即程序中新添加的`dom`节点也是有事件的。\n\n在`js`中，事件程序的处理数量直接关系到页面的整体运行，因为需要不断的与`DOM`节点进行交互，访问DOM节点次数越多，就会延长浏览器的交互时间。减少DOM操作优化性能的重要手段，可以利用事件委托来处理。//\n比如有10个或者更多个li，我们点击li就会弹出相应的内容，相信我们大多数都会用到`for`去遍历:\n\n```js\n  var aLi = document.querySelectorAll(\"#box ul li\");\n  for (var i = 0,length = aLi.length; i < length; i++) {\n    aLi[i].onclick = function () {\n      alert(this.innerHTML);\n    }\n  }\n```\n每一次点击都会去访问`li`节点，毫无疑问增加了访问DOM的次数，如果更多数量这样的就会影响性能。\n\n上面情况适合采用事件委托：\n\n```js\nvar oBox = document.getElementById('box');\noBox.onclick = function (e) {\n  e = e || window.event;\n  if (e.target.nodeName === 'LI'){\n    alert(e.target.innerHTML);\n  }\n};\n```\n\n这样委托用`oBox`点击去管理所有的`li`点击，比上面遍历li要好一些。\n\n```js\n<ul>\n  <li>11</li>\n  <li>22</li>\n  <li>33</li>\n  <li>44</li>\n  <li>55</li>\n  <li>66</li>\n  <li>77</li>\n  <li>88</li>\n  <li>99</li>\n  <li>10</li>\n</ul>\n<button id=“btn”>生成</button>\n```\n\n刚生成的`li`有没有点击事件呢？\n\n```js\nvar oBox = document.getElementById('box');\nvar oUl = oBox.children[0];\nvar btn = document.getElementById('btn');\n var aLi = document.querySelectorAll(\"#box ul li\");\n for (var i = 0,length = aLi.length; i < length; i++) {\n    aLi[i].onclick = function () {\n    alert(this.innerHTML);\n  }\n}\n//生成li\nbtn.onclick = function() {\n  var li = document.createElement('li');\n  li.innerHTML = '1111';\n  oUl.appendChild(li);\n  click();\n};\n```\n\n这样生成的`li`没有点击事件的.\n\n采用事件委托方法可以。\n\n```js\nvar oBox = document.getElementById('box');\nvar btn = document.getElementById('btn');\nvar oUl = oBox.children[0];\nvar aLi = document.querySelectorAll(\"#box ul li\");\noBox.onclick = function (e) {\n  e = e || window.event;\n  if (e.target.nodeName === 'LI'){\n    alert(e.target.innerHTML);\n  }\n};\nbtn.addEventListener('click',function () {\n //生成li\n  var li = document.createElement('li');\n  li.innerHTML = '1111';\n  oUl.appendChild(li);\n});\n```\n\n## jQuery中的delegate\n\n`jquery`中的`delegate`也可以。`delegate()` 方法为指定的元素（属于被选元素的子元素）添加一个或多个事件处理程序，并规定当这些事件发生时运行的函数。\n\n使用 `delegate()` 方法的事件处理程序适用于当前或未来的元素（比如由脚本创建的新元素）。//`jQuery`中`live/die`也有这样的功能。\n\n```js\n//生成li\nvar $box = $('#box'),\n       $btn = $('#btn'),\n       i = 1;\n$box.delegate('li','click',function () {\n      $(this).slideToggle();\n});\n$btn.click(function (i) {\n      $('<li>i</li>').insertAfter('button');\n      i++;\n});\n```\n这样生成的`li`有点击事件的。\n\n事件冒泡，捕获与委托现实中经常遇到，主要就是能清楚概念，我在刚开始解除时候也是晕，理解它就好了，用的时候也有针对性。\n","slug":"js-9","published":1,"updated":"2019-09-18T01:41:37.138Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2ad0021n0b9qbicsadw","content":"<h2 id=\"事件冒泡与事件捕获\"><a href=\"#事件冒泡与事件捕获\" class=\"headerlink\" title=\"事件冒泡与事件捕获\"></a>事件冒泡与事件捕获</h2><h3 id=\"事件冒泡\"><a href=\"#事件冒泡\" class=\"headerlink\" title=\"事件冒泡\"></a>事件冒泡</h3><p>IE的事件流叫做事件冒泡，即事件开始由最具体的元素(文档中嵌套层次最深的节点）接收，然后逐级向上传播到对象层次的最顶层(由里向外触发同类事件)。</p>\n<h3 id=\"事件捕获\"><a href=\"#事件捕获\" class=\"headerlink\" title=\"事件捕获\"></a>事件捕获</h3><p>恰恰相反，是从不太具体的节点早接收事件，最具体的节点最后接收事件，目的就在于时间到达预定目标之前捕获它（由外向内触发同类事件）。</p>\n<h3 id=\"事件冒泡及捕获\"><a href=\"#事件冒泡及捕获\" class=\"headerlink\" title=\"事件冒泡及捕获\"></a>事件冒泡及捕获</h3><p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/m1.jpg\" class=\"lozad\"></p>\n<p>下面来看个示例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span> = <span class=\"string\">'box'</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>111<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在<code>div</code>中插入以下<code>p</code>标签，<code>p</code>与<code>div</code>都有点击事件，当点击<code>p</code>的时候那个先执行呢？</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> oBox = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'box'</span>),</span><br><span class=\"line\">    oP = oBox.children[<span class=\"number\">0</span>];</span><br><span class=\"line\">    oBox.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      alert(<span class=\"string\">'box先触发'</span>)</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    oP.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">      e = e ||<span class=\"built_in\">window</span>.event;</span><br><span class=\"line\">      <span class=\"comment\">//e.cancelBubble = true;</span></span><br><span class=\"line\">      alert(<span class=\"string\">'p先触发'</span>)</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>点击<code>p</code>，<code>p</code>先触发，然后<code>box</code>再触发。我们如果不需要<code>box</code>触发，可以阻至冒泡。（冒泡是从内到外，捕获是从外到内）</p>\n<p>可以再<code>p</code>点击内加上<code>e.cancelBubble = true</code>; 这样<code>box</code>点击事件就不会触发(阻止冒泡)。</p>\n<p>使用<code>addEventListener</code>来写也可以</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">oBox.addEventListener(<span class=\"string\">'click'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">'box先触发'</span>)</span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br><span class=\"line\">oP.addEventListener(<span class=\"string\">'click'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'p先触发'</span>)</span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n\n<p>如果默认false为冒泡；如果要事件捕获可以把<code>box</code>中的false改为true。</p>\n<h2 id=\"事件委托\"><a href=\"#事件委托\" class=\"headerlink\" title=\"事件委托\"></a>事件委托</h2><p>我找到一个比较流行的例子：取快递事件。</p>\n<p>有30个同事预计会在周一收到快递。为签收快递，有两种办法：一是30个人在公司门口等快递；二是委托给前台MM代为签收。现实当中，我们大都采用委托的方案（公司也不会容忍那么多员工站在门口就为了等快递）。前台MM收到快递后，她会判断收件人是谁，然后按照收件人的要求签收，甚至代为付款。这种方案还有一个优势，那就是即使公司里来了新员工（不管多少），前台MM也会在收到寄给新员工的快递后核实并代为签收。</p>\n<p>这里其实还有2层意思的：</p>\n<p>第一，现在委托前台的同事是可以代为签收的，即程序中的现有的<code>dom</code>节点是有事件的；</p>\n<p>第二，新员工也是可以被前台MM代为签收的，即程序中新添加的<code>dom</code>节点也是有事件的。</p>\n<p>在<code>js</code>中，事件程序的处理数量直接关系到页面的整体运行，因为需要不断的与<code>DOM</code>节点进行交互，访问DOM节点次数越多，就会延长浏览器的交互时间。减少DOM操作优化性能的重要手段，可以利用事件委托来处理。//<br>比如有10个或者更多个li，我们点击li就会弹出相应的内容，相信我们大多数都会用到<code>for</code>去遍历:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> aLi = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\"#box ul li\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,length = aLi.length; i &lt; length; i++) &#123;</span><br><span class=\"line\">  aLi[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"keyword\">this</span>.innerHTML);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>每一次点击都会去访问<code>li</code>节点，毫无疑问增加了访问DOM的次数，如果更多数量这样的就会影响性能。</p>\n<p>上面情况适合采用事件委托：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> oBox = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'box'</span>);</span><br><span class=\"line\">oBox.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  e = e || <span class=\"built_in\">window</span>.event;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (e.target.nodeName === <span class=\"string\">'LI'</span>)&#123;</span><br><span class=\"line\">    alert(e.target.innerHTML);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>这样委托用<code>oBox</code>点击去管理所有的<code>li</code>点击，比上面遍历li要好一些。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">11</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;li&gt;22&lt;/</span>li&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">33</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;li&gt;44&lt;/</span>li&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">55</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;li&gt;66&lt;/</span>li&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">77</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;li&gt;88&lt;/</span>li&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">99</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;li&gt;10&lt;/</span>li&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/ul&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;button id=“btn”&gt;生成&lt;/</span>button&gt;</span><br></pre></td></tr></table></figure>\n\n<p>刚生成的<code>li</code>有没有点击事件呢？</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> oBox = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'box'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> oUl = oBox.children[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'btn'</span>);</span><br><span class=\"line\"> <span class=\"keyword\">var</span> aLi = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\"#box ul li\"</span>);</span><br><span class=\"line\"> <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,length = aLi.length; i &lt; length; i++) &#123;</span><br><span class=\"line\">    aLi[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"keyword\">this</span>.innerHTML);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//生成li</span></span><br><span class=\"line\">btn.onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> li = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'li'</span>);</span><br><span class=\"line\">  li.innerHTML = <span class=\"string\">'1111'</span>;</span><br><span class=\"line\">  oUl.appendChild(li);</span><br><span class=\"line\">  click();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>这样生成的<code>li</code>没有点击事件的.</p>\n<p>采用事件委托方法可以。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> oBox = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'box'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'btn'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> oUl = oBox.children[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> aLi = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\"#box ul li\"</span>);</span><br><span class=\"line\">oBox.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  e = e || <span class=\"built_in\">window</span>.event;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (e.target.nodeName === <span class=\"string\">'LI'</span>)&#123;</span><br><span class=\"line\">    alert(e.target.innerHTML);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">btn.addEventListener(<span class=\"string\">'click'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"> <span class=\"comment\">//生成li</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> li = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'li'</span>);</span><br><span class=\"line\">  li.innerHTML = <span class=\"string\">'1111'</span>;</span><br><span class=\"line\">  oUl.appendChild(li);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"jQuery中的delegate\"><a href=\"#jQuery中的delegate\" class=\"headerlink\" title=\"jQuery中的delegate\"></a>jQuery中的delegate</h2><p><code>jquery</code>中的<code>delegate</code>也可以。<code>delegate()</code> 方法为指定的元素（属于被选元素的子元素）添加一个或多个事件处理程序，并规定当这些事件发生时运行的函数。</p>\n<p>使用 <code>delegate()</code> 方法的事件处理程序适用于当前或未来的元素（比如由脚本创建的新元素）。//<code>jQuery</code>中<code>live/die</code>也有这样的功能。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//生成li</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> $box = $(<span class=\"string\">'#box'</span>),</span><br><span class=\"line\">       $btn = $(<span class=\"string\">'#btn'</span>),</span><br><span class=\"line\">       i = <span class=\"number\">1</span>;</span><br><span class=\"line\">$box.delegate(<span class=\"string\">'li'</span>,<span class=\"string\">'click'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      $(<span class=\"keyword\">this</span>).slideToggle();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">$btn.click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i</span>) </span>&#123;</span><br><span class=\"line\">      $(<span class=\"string\">'&lt;li&gt;i&lt;/li&gt;'</span>).insertAfter(<span class=\"string\">'button'</span>);</span><br><span class=\"line\">      i++;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>这样生成的<code>li</code>有点击事件的。</p>\n<p>事件冒泡，捕获与委托现实中经常遇到，主要就是能清楚概念，我在刚开始解除时候也是晕，理解它就好了，用的时候也有针对性。</p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<h2 id=\"事件冒泡与事件捕获\"><a href=\"#事件冒泡与事件捕获\" class=\"headerlink\" title=\"事件冒泡与事件捕获\"></a>事件冒泡与事件捕获</h2><h3 id=\"事件冒泡\"><a href=\"#事件冒泡\" class=\"headerlink\" title=\"事件冒泡\"></a>事件冒泡</h3><p>IE的事件流叫做事件冒泡，即事件开始由最具体的元素(文档中嵌套层次最深的节点）接收，然后逐级向上传播到对象层次的最顶层(由里向外触发同类事件)。</p>\n<h3 id=\"事件捕获\"><a href=\"#事件捕获\" class=\"headerlink\" title=\"事件捕获\"></a>事件捕获</h3><p>恰恰相反，是从不太具体的节点早接收事件，最具体的节点最后接收事件，目的就在于时间到达预定目标之前捕获它（由外向内触发同类事件）。</p>\n<h3 id=\"事件冒泡及捕获\"><a href=\"#事件冒泡及捕获\" class=\"headerlink\" title=\"事件冒泡及捕获\"></a>事件冒泡及捕获</h3><p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/m1.jpg\" alt></p>\n<p>下面来看个示例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span> = <span class=\"string\">'box'</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>111<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在<code>div</code>中插入以下<code>p</code>标签，<code>p</code>与<code>div</code>都有点击事件，当点击<code>p</code>的时候那个先执行呢？</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> oBox = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'box'</span>),</span><br><span class=\"line\">    oP = oBox.children[<span class=\"number\">0</span>];</span><br><span class=\"line\">    oBox.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      alert(<span class=\"string\">'box先触发'</span>)</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    oP.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">      e = e ||<span class=\"built_in\">window</span>.event;</span><br><span class=\"line\">      <span class=\"comment\">//e.cancelBubble = true;</span></span><br><span class=\"line\">      alert(<span class=\"string\">'p先触发'</span>)</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>点击<code>p</code>，<code>p</code>先触发，然后<code>box</code>再触发。我们如果不需要<code>box</code>触发，可以阻至冒泡。（冒泡是从内到外，捕获是从外到内）</p>\n<p>可以再<code>p</code>点击内加上<code>e.cancelBubble = true</code>; 这样<code>box</code>点击事件就不会触发(阻止冒泡)。</p>\n<p>使用<code>addEventListener</code>来写也可以</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">oBox.addEventListener(<span class=\"string\">'click'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">'box先触发'</span>)</span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br><span class=\"line\">oP.addEventListener(<span class=\"string\">'click'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">'p先触发'</span>)</span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n\n<p>如果默认false为冒泡；如果要事件捕获可以把<code>box</code>中的false改为true。</p>\n<h2 id=\"事件委托\"><a href=\"#事件委托\" class=\"headerlink\" title=\"事件委托\"></a>事件委托</h2><p>我找到一个比较流行的例子：取快递事件。</p>\n<p>有30个同事预计会在周一收到快递。为签收快递，有两种办法：一是30个人在公司门口等快递；二是委托给前台MM代为签收。现实当中，我们大都采用委托的方案（公司也不会容忍那么多员工站在门口就为了等快递）。前台MM收到快递后，她会判断收件人是谁，然后按照收件人的要求签收，甚至代为付款。这种方案还有一个优势，那就是即使公司里来了新员工（不管多少），前台MM也会在收到寄给新员工的快递后核实并代为签收。</p>\n<p>这里其实还有2层意思的：</p>\n<p>第一，现在委托前台的同事是可以代为签收的，即程序中的现有的<code>dom</code>节点是有事件的；</p>\n<p>第二，新员工也是可以被前台MM代为签收的，即程序中新添加的<code>dom</code>节点也是有事件的。</p>\n<p>在<code>js</code>中，事件程序的处理数量直接关系到页面的整体运行，因为需要不断的与<code>DOM</code>节点进行交互，访问DOM节点次数越多，就会延长浏览器的交互时间。减少DOM操作优化性能的重要手段，可以利用事件委托来处理。//<br>比如有10个或者更多个li，我们点击li就会弹出相应的内容，相信我们大多数都会用到<code>for</code>去遍历:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> aLi = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\"#box ul li\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,length = aLi.length; i &lt; length; i++) &#123;</span><br><span class=\"line\">  aLi[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"keyword\">this</span>.innerHTML);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>每一次点击都会去访问<code>li</code>节点，毫无疑问增加了访问DOM的次数，如果更多数量这样的就会影响性能。</p>\n<p>上面情况适合采用事件委托：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> oBox = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'box'</span>);</span><br><span class=\"line\">oBox.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  e = e || <span class=\"built_in\">window</span>.event;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (e.target.nodeName === <span class=\"string\">'LI'</span>)&#123;</span><br><span class=\"line\">    alert(e.target.innerHTML);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>这样委托用<code>oBox</code>点击去管理所有的<code>li</code>点击，比上面遍历li要好一些。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">11</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;li&gt;22&lt;/</span>li&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">33</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;li&gt;44&lt;/</span>li&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">55</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;li&gt;66&lt;/</span>li&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">77</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;li&gt;88&lt;/</span>li&gt;</span><br><span class=\"line\">  &lt;li&gt;<span class=\"number\">99</span>&lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;li&gt;10&lt;/</span>li&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/ul&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;button id=“btn”&gt;生成&lt;/</span>button&gt;</span><br></pre></td></tr></table></figure>\n\n<p>刚生成的<code>li</code>有没有点击事件呢？</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> oBox = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'box'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> oUl = oBox.children[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'btn'</span>);</span><br><span class=\"line\"> <span class=\"keyword\">var</span> aLi = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\"#box ul li\"</span>);</span><br><span class=\"line\"> <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>,length = aLi.length; i &lt; length; i++) &#123;</span><br><span class=\"line\">    aLi[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"keyword\">this</span>.innerHTML);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//生成li</span></span><br><span class=\"line\">btn.onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> li = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'li'</span>);</span><br><span class=\"line\">  li.innerHTML = <span class=\"string\">'1111'</span>;</span><br><span class=\"line\">  oUl.appendChild(li);</span><br><span class=\"line\">  click();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>这样生成的<code>li</code>没有点击事件的.</p>\n<p>采用事件委托方法可以。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> oBox = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'box'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'btn'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> oUl = oBox.children[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> aLi = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\"#box ul li\"</span>);</span><br><span class=\"line\">oBox.onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  e = e || <span class=\"built_in\">window</span>.event;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (e.target.nodeName === <span class=\"string\">'LI'</span>)&#123;</span><br><span class=\"line\">    alert(e.target.innerHTML);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">btn.addEventListener(<span class=\"string\">'click'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"> <span class=\"comment\">//生成li</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> li = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'li'</span>);</span><br><span class=\"line\">  li.innerHTML = <span class=\"string\">'1111'</span>;</span><br><span class=\"line\">  oUl.appendChild(li);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"jQuery中的delegate\"><a href=\"#jQuery中的delegate\" class=\"headerlink\" title=\"jQuery中的delegate\"></a>jQuery中的delegate</h2><p><code>jquery</code>中的<code>delegate</code>也可以。<code>delegate()</code> 方法为指定的元素（属于被选元素的子元素）添加一个或多个事件处理程序，并规定当这些事件发生时运行的函数。</p>\n<p>使用 <code>delegate()</code> 方法的事件处理程序适用于当前或未来的元素（比如由脚本创建的新元素）。//<code>jQuery</code>中<code>live/die</code>也有这样的功能。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//生成li</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> $box = $(<span class=\"string\">'#box'</span>),</span><br><span class=\"line\">       $btn = $(<span class=\"string\">'#btn'</span>),</span><br><span class=\"line\">       i = <span class=\"number\">1</span>;</span><br><span class=\"line\">$box.delegate(<span class=\"string\">'li'</span>,<span class=\"string\">'click'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      $(<span class=\"keyword\">this</span>).slideToggle();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">$btn.click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">i</span>) </span>&#123;</span><br><span class=\"line\">      $(<span class=\"string\">'&lt;li&gt;i&lt;/li&gt;'</span>).insertAfter(<span class=\"string\">'button'</span>);</span><br><span class=\"line\">      i++;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>这样生成的<code>li</code>有点击事件的。</p>\n<p>事件冒泡，捕获与委托现实中经常遇到，主要就是能清楚概念，我在刚开始解除时候也是晕，理解它就好了，用的时候也有针对性。</p>\n"},{"title":"Vue.js环境的搭建","comments":1,"description":"在windows系统搭建Vue.js开发环境","keywords":"vue, Vue.js","date":"2017-06-29T04:00:00.000Z","_content":"\n\n在windows系统搭建Vue.js开发环境\n\n## 第一步\n\n`node.js`的官网下载`node.js`最新版本。[网址](http://nodejs.cn/)\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v1.png 'hbb')\n\n下载自己所需的就可以了。\n\n## 第二步\n\n检测安装是否成功。在命令行内输入：`node -v`，`npm -v`查看安装的版本。\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v2.png)\n\n## 第三步\n附加的步骤，因为某些原因会导致`npm`安装时候失败，所以还需要`npm`镜像。可以使用淘宝的镜像：`http://registry.npm.taobao.org`\n\n在命令行内输入：\n\n```sh\nnpm install -g cnpm --registry=http://registry.npm.taobao.org\n```\n\n## 第四步\n\n安装`vue-cli`脚手架构建工具，在命令行内输入：\n\n```sh\nnpm install -g vue-cli\n```\n\n## 第五步\n\n在桌面新建一个文件夹，名字自己看着起。打开，按住`shift+右键`，点击在此处打开命令窗口，输入：\n\n```sh\nvue init webpack testVue\n```\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v4.png)\n\n这次会让你输入，项目名称，描述，作者等，如果想更简单的话，可以Entenr键一直按下去就可以。\n\n会在新建的文件夹里下载一些文件,如下：\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v5.png)\n\n项目的信息，以及我们主要使用的在 `package.json`这个文件内。\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v6.png)\n\n## 第六步\n在新建文件夹里面（我自己建的文件夹）打开`testVue`文件夹，按住`shift+右键`，进入命令行，\n\n输入`npm install`。下载完后会在`testVue`这个文件夹里面生成`node_modules`文件年夹。\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v7.png)\n\n## 第七步\n可以运行整个项目了在命令行内输入：\n\n```sh\nnpm run dev\n```\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v8.png)\n\n出现错误：是因为80端口被占用，在`testVue`文件夹里面找到`config`文件夹打开，找到`index.js`打开把8080改为8088，重新输入`npm run dev`即可。\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v10.png)\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v12.png)\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v11.png)\n\n之后进行我们的项目，热加载在修改完代码后不用手动刷新浏览器就能实时看到修改后的效果。\n\n","source":"_posts/vue-2.md","raw":"---\ntitle: Vue.js环境的搭建\ncomments: true\ndescription: 在windows系统搭建Vue.js开发环境\ntags: \"Vue\"\ncategories: \"Vue\"\nkeywords: vue, Vue.js \ndate: 2017-06-29 12:00:00\n---\n\n\n在windows系统搭建Vue.js开发环境\n\n## 第一步\n\n`node.js`的官网下载`node.js`最新版本。[网址](http://nodejs.cn/)\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v1.png 'hbb')\n\n下载自己所需的就可以了。\n\n## 第二步\n\n检测安装是否成功。在命令行内输入：`node -v`，`npm -v`查看安装的版本。\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v2.png)\n\n## 第三步\n附加的步骤，因为某些原因会导致`npm`安装时候失败，所以还需要`npm`镜像。可以使用淘宝的镜像：`http://registry.npm.taobao.org`\n\n在命令行内输入：\n\n```sh\nnpm install -g cnpm --registry=http://registry.npm.taobao.org\n```\n\n## 第四步\n\n安装`vue-cli`脚手架构建工具，在命令行内输入：\n\n```sh\nnpm install -g vue-cli\n```\n\n## 第五步\n\n在桌面新建一个文件夹，名字自己看着起。打开，按住`shift+右键`，点击在此处打开命令窗口，输入：\n\n```sh\nvue init webpack testVue\n```\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v4.png)\n\n这次会让你输入，项目名称，描述，作者等，如果想更简单的话，可以Entenr键一直按下去就可以。\n\n会在新建的文件夹里下载一些文件,如下：\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v5.png)\n\n项目的信息，以及我们主要使用的在 `package.json`这个文件内。\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v6.png)\n\n## 第六步\n在新建文件夹里面（我自己建的文件夹）打开`testVue`文件夹，按住`shift+右键`，进入命令行，\n\n输入`npm install`。下载完后会在`testVue`这个文件夹里面生成`node_modules`文件年夹。\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v7.png)\n\n## 第七步\n可以运行整个项目了在命令行内输入：\n\n```sh\nnpm run dev\n```\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v8.png)\n\n出现错误：是因为80端口被占用，在`testVue`文件夹里面找到`config`文件夹打开，找到`index.js`打开把8080改为8088，重新输入`npm run dev`即可。\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v10.png)\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v12.png)\n\n![](http://www.hbbaly.com/wp-content/uploads/2017/09/v11.png)\n\n之后进行我们的项目，热加载在修改完代码后不用手动刷新浏览器就能实时看到修改后的效果。\n\n","slug":"vue-2","published":1,"updated":"2019-10-12T16:33:39.740Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2af0025n0b9loxl4kfo","content":"<p>在windows系统搭建Vue.js开发环境</p>\n<h2 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h2><p><code>node.js</code>的官网下载<code>node.js</code>最新版本。<a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"noopener\">网址</a></p>\n<p><img alt title=\"hbb\" data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v1.png\" class=\"lozad\"></p>\n<p>下载自己所需的就可以了。</p>\n<h2 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h2><p>检测安装是否成功。在命令行内输入：<code>node -v</code>，<code>npm -v</code>查看安装的版本。</p>\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v2.png\" class=\"lozad\"></p>\n<h2 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h2><p>附加的步骤，因为某些原因会导致<code>npm</code>安装时候失败，所以还需要<code>npm</code>镜像。可以使用淘宝的镜像：<code>http://registry.npm.taobao.org</code></p>\n<p>在命令行内输入：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第四步\"><a href=\"#第四步\" class=\"headerlink\" title=\"第四步\"></a>第四步</h2><p>安装<code>vue-cli</code>脚手架构建工具，在命令行内输入：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g vue-cli</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第五步\"><a href=\"#第五步\" class=\"headerlink\" title=\"第五步\"></a>第五步</h2><p>在桌面新建一个文件夹，名字自己看着起。打开，按住<code>shift+右键</code>，点击在此处打开命令窗口，输入：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack testVue</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v4.png\" class=\"lozad\"></p>\n<p>这次会让你输入，项目名称，描述，作者等，如果想更简单的话，可以Entenr键一直按下去就可以。</p>\n<p>会在新建的文件夹里下载一些文件,如下：</p>\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v5.png\" class=\"lozad\"></p>\n<p>项目的信息，以及我们主要使用的在 <code>package.json</code>这个文件内。</p>\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v6.png\" class=\"lozad\"></p>\n<h2 id=\"第六步\"><a href=\"#第六步\" class=\"headerlink\" title=\"第六步\"></a>第六步</h2><p>在新建文件夹里面（我自己建的文件夹）打开<code>testVue</code>文件夹，按住<code>shift+右键</code>，进入命令行，</p>\n<p>输入<code>npm install</code>。下载完后会在<code>testVue</code>这个文件夹里面生成<code>node_modules</code>文件年夹。</p>\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v7.png\" class=\"lozad\"></p>\n<h2 id=\"第七步\"><a href=\"#第七步\" class=\"headerlink\" title=\"第七步\"></a>第七步</h2><p>可以运行整个项目了在命令行内输入：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v8.png\" class=\"lozad\"></p>\n<p>出现错误：是因为80端口被占用，在<code>testVue</code>文件夹里面找到<code>config</code>文件夹打开，找到<code>index.js</code>打开把8080改为8088，重新输入<code>npm run dev</code>即可。</p>\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v10.png\" class=\"lozad\"></p>\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v12.png\" class=\"lozad\"></p>\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v11.png\" class=\"lozad\"></p>\n<p>之后进行我们的项目，热加载在修改完代码后不用手动刷新浏览器就能实时看到修改后的效果。</p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<p>在windows系统搭建Vue.js开发环境</p>\n<h2 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h2><p><code>node.js</code>的官网下载<code>node.js</code>最新版本。<a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"noopener\">网址</a></p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v1.png\" alt title=\"hbb\"></p>\n<p>下载自己所需的就可以了。</p>\n<h2 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h2><p>检测安装是否成功。在命令行内输入：<code>node -v</code>，<code>npm -v</code>查看安装的版本。</p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v2.png\" alt></p>\n<h2 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h2><p>附加的步骤，因为某些原因会导致<code>npm</code>安装时候失败，所以还需要<code>npm</code>镜像。可以使用淘宝的镜像：<code>http://registry.npm.taobao.org</code></p>\n<p>在命令行内输入：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第四步\"><a href=\"#第四步\" class=\"headerlink\" title=\"第四步\"></a>第四步</h2><p>安装<code>vue-cli</code>脚手架构建工具，在命令行内输入：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g vue-cli</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第五步\"><a href=\"#第五步\" class=\"headerlink\" title=\"第五步\"></a>第五步</h2><p>在桌面新建一个文件夹，名字自己看着起。打开，按住<code>shift+右键</code>，点击在此处打开命令窗口，输入：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack testVue</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v4.png\" alt></p>\n<p>这次会让你输入，项目名称，描述，作者等，如果想更简单的话，可以Entenr键一直按下去就可以。</p>\n<p>会在新建的文件夹里下载一些文件,如下：</p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v5.png\" alt></p>\n<p>项目的信息，以及我们主要使用的在 <code>package.json</code>这个文件内。</p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v6.png\" alt></p>\n<h2 id=\"第六步\"><a href=\"#第六步\" class=\"headerlink\" title=\"第六步\"></a>第六步</h2><p>在新建文件夹里面（我自己建的文件夹）打开<code>testVue</code>文件夹，按住<code>shift+右键</code>，进入命令行，</p>\n<p>输入<code>npm install</code>。下载完后会在<code>testVue</code>这个文件夹里面生成<code>node_modules</code>文件年夹。</p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v7.png\" alt></p>\n<h2 id=\"第七步\"><a href=\"#第七步\" class=\"headerlink\" title=\"第七步\"></a>第七步</h2><p>可以运行整个项目了在命令行内输入：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v8.png\" alt></p>\n<p>出现错误：是因为80端口被占用，在<code>testVue</code>文件夹里面找到<code>config</code>文件夹打开，找到<code>index.js</code>打开把8080改为8088，重新输入<code>npm run dev</code>即可。</p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v10.png\" alt></p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v12.png\" alt></p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2017/09/v11.png\" alt></p>\n<p>之后进行我们的项目，热加载在修改完代码后不用手动刷新浏览器就能实时看到修改后的效果。</p>\n"},{"title":"Vue项目代码规范","comments":1,"description":"实际项目中Vue代码规范","keywords":"vue, Vue.js","date":"2018-03-28T16:00:00.000Z","_content":"\n# `Vue项目代码规范`\n\n## 文件命名\n-\t **目录名**: 小驼峰\n-\t **js文件名**: 全小写(可用.,-)\n-\t **组件名**: 大驼峰(页面也算组件)\n-\t **路由**: 全小写\n-\t **公共组件**: XXX-XXX\n## 文件夹命名规则\n\n- **由名词组成**\n- **单词只能有一个**\n- **命名采用小写**\n\n## 文件名称规则\n\n- **vue文件代表着页面的名字**\n- **放在页面文件夹之下**\n- **文件名尽量是名词**\n- **以大写开头的驼峰命名，开头的单词是模块的名字，例: OrderDetail,OrderList**\n- **常用结尾词有（Detail、Edit、List、Info、Report）**\n- **以View结尾的代表是页面或页面子组件 （CarListView,CarInfoView）**\n  \n## Vue页面结构\n\n```html\n  <template>\n    <div>\n\n      <!--必须在div中编写页面-->\n\n    </div>\n  </template>\n  <script>\n    export default {\n      components : {\n      },\n      data () {\n        return {\n        }\n      },\n\t    mounted() {\n      },\n      methods: {\n      },\n    }\n  </script>\n  <!--声明语言，并且组件内必须添加scoped-->\n  <style lang=\"less\" scoped>\n  </style>\n```\n  ## **方法声明顺序**\n  `components`\n\n  - name    首字母大写，大驼峰命名规则\n  - props\n  - components\n  - data\n  - filter\n  - computed\n  - watch\n  - created\n  - activited\n  - mounted\n  - beforeRouterEnter\n  - beforeRouteUpdate\n  - beforeRouterLeave\n  - methods\n\n  ## **页面**\n\n  ```html\n    <div class=\"page page-XXX\">\n\t    <header class=\"header\">\n\t    </header>\n\t    <div class=\"container\">\n\t    </div>\n\t    <footer class=\"footer\"></footer>\n    </div>\n\n  ```\n  每个页面最外层都会有一个`page、page-XXX`类名\n  每个页面结构类似\n\n\n  |部分|代码|\n  |---|:--:|\n  |头部|`<header class=\"header\"></header>`|\n  |身体 |`<div class=\"container\"></div>`|\n  |底部 |`<footer class=\"footer\"></footer>`|\n\n  ## **组件**\n  ```html\n    <div class=\"module-name\">\n\t    <div class=\"__hd\">\n\t    </div>\n\t    <div class=\"__bd\">\n\t    </div>\n\t    <div class=\"__ft\">\n\t    </div>\n    </div>\n  ```\n\n  每个组件结构类似\n\n\n  |部分|代码|\n  |---|:--:|\n  |头部|`<div class=\"__hd\"></div>`|\n  |身体 |`<div class=\"__bd\"></div>`|\n  |底部 |`<div class=\"__ft\"></div>`|\n\n ## **组件分类**\n  - 系统级组件\n  \n    这类组件俱备不同项目之间通用，通常包括一些基础级通用形组件。\n  - 页面级组件\n\n    通常只在一个项目中实现通用，不具备项目级的移植性。\n  \n  - 普通功能级组件\n    某个页面功能模块，不具备复用性，但是通过他可以实现业务功能的分离，降低耦合，以降低维护和分治目的。\n\n## **创建组件注意事项**\n\n  - 组件保证功能单一，不要一个组件兼顾多个功能(避免后期调整时候冗杂，增加代码耦合度)\n  - 通用组件传值，尽可能单个传递,多传几个。\n  - 每个组件尽可能预留一个slot，为后期拓展预留。\n\n## `vue`组件命名\n\n- 系统级、页面级通用组件放置于 `src` 下 `components` 目录。\n\n- 局部功能组件，存放于页面 `vue` 页面同级目录下的 `components` 目录下\n\n`view`文件夹下是由以页面为单位的文件夹或模块文件夹组成，放在 `src` 目录下，与`components` 和 `assets` 同级。\n\n**组件命名采用 大驼峰**\n\n## 方法命名规则\n\n**采用动宾短语格式命名，例如：**\n```md\ngood：\n jumpPage、openCarInfoDialog\n\nbad：\n go、nextPage、show、open、login\n```\n\n**数据操作方法以get、post开头，以 data 结尾**\n\n```md\ngood：\n getListData、postFormData\n\nbad：\n takeData、confirmData、getList、postForm\n```\n\n**事件方法以 on 开头，inital,refresh,render除外**\n\n```\n例如，onChange,onUserInput\n```\n\n**尽量使用常用单词开头 （set、get、open、close、jump）命名规则使用驼峰命名**\n\n\n**不在 `created` 和 `mouted` 之类的方法写逻辑，取 `ajax` 数据，**\n\n## data-props\n\n**`data props` 规则**\n\n使用 `data` 里的变量时请先在 `data` 里初始化\n\n`props` **指定类型**\n\n不命名多余数据，\n\n`ajax` 请求数据，统一声明 `isLoading`,`isError` 变量记录状态\n\n","source":"_posts/vue-1.md","raw":"---\ntitle: Vue项目代码规范\ncomments: true\ndescription: 实际项目中Vue代码规范\ntags: \"Vue\"\ncategories: \"Vue\"\nkeywords: vue, Vue.js \ndate: 2018-03-29 00:00:00\n---\n\n# `Vue项目代码规范`\n\n## 文件命名\n-\t **目录名**: 小驼峰\n-\t **js文件名**: 全小写(可用.,-)\n-\t **组件名**: 大驼峰(页面也算组件)\n-\t **路由**: 全小写\n-\t **公共组件**: XXX-XXX\n## 文件夹命名规则\n\n- **由名词组成**\n- **单词只能有一个**\n- **命名采用小写**\n\n## 文件名称规则\n\n- **vue文件代表着页面的名字**\n- **放在页面文件夹之下**\n- **文件名尽量是名词**\n- **以大写开头的驼峰命名，开头的单词是模块的名字，例: OrderDetail,OrderList**\n- **常用结尾词有（Detail、Edit、List、Info、Report）**\n- **以View结尾的代表是页面或页面子组件 （CarListView,CarInfoView）**\n  \n## Vue页面结构\n\n```html\n  <template>\n    <div>\n\n      <!--必须在div中编写页面-->\n\n    </div>\n  </template>\n  <script>\n    export default {\n      components : {\n      },\n      data () {\n        return {\n        }\n      },\n\t    mounted() {\n      },\n      methods: {\n      },\n    }\n  </script>\n  <!--声明语言，并且组件内必须添加scoped-->\n  <style lang=\"less\" scoped>\n  </style>\n```\n  ## **方法声明顺序**\n  `components`\n\n  - name    首字母大写，大驼峰命名规则\n  - props\n  - components\n  - data\n  - filter\n  - computed\n  - watch\n  - created\n  - activited\n  - mounted\n  - beforeRouterEnter\n  - beforeRouteUpdate\n  - beforeRouterLeave\n  - methods\n\n  ## **页面**\n\n  ```html\n    <div class=\"page page-XXX\">\n\t    <header class=\"header\">\n\t    </header>\n\t    <div class=\"container\">\n\t    </div>\n\t    <footer class=\"footer\"></footer>\n    </div>\n\n  ```\n  每个页面最外层都会有一个`page、page-XXX`类名\n  每个页面结构类似\n\n\n  |部分|代码|\n  |---|:--:|\n  |头部|`<header class=\"header\"></header>`|\n  |身体 |`<div class=\"container\"></div>`|\n  |底部 |`<footer class=\"footer\"></footer>`|\n\n  ## **组件**\n  ```html\n    <div class=\"module-name\">\n\t    <div class=\"__hd\">\n\t    </div>\n\t    <div class=\"__bd\">\n\t    </div>\n\t    <div class=\"__ft\">\n\t    </div>\n    </div>\n  ```\n\n  每个组件结构类似\n\n\n  |部分|代码|\n  |---|:--:|\n  |头部|`<div class=\"__hd\"></div>`|\n  |身体 |`<div class=\"__bd\"></div>`|\n  |底部 |`<div class=\"__ft\"></div>`|\n\n ## **组件分类**\n  - 系统级组件\n  \n    这类组件俱备不同项目之间通用，通常包括一些基础级通用形组件。\n  - 页面级组件\n\n    通常只在一个项目中实现通用，不具备项目级的移植性。\n  \n  - 普通功能级组件\n    某个页面功能模块，不具备复用性，但是通过他可以实现业务功能的分离，降低耦合，以降低维护和分治目的。\n\n## **创建组件注意事项**\n\n  - 组件保证功能单一，不要一个组件兼顾多个功能(避免后期调整时候冗杂，增加代码耦合度)\n  - 通用组件传值，尽可能单个传递,多传几个。\n  - 每个组件尽可能预留一个slot，为后期拓展预留。\n\n## `vue`组件命名\n\n- 系统级、页面级通用组件放置于 `src` 下 `components` 目录。\n\n- 局部功能组件，存放于页面 `vue` 页面同级目录下的 `components` 目录下\n\n`view`文件夹下是由以页面为单位的文件夹或模块文件夹组成，放在 `src` 目录下，与`components` 和 `assets` 同级。\n\n**组件命名采用 大驼峰**\n\n## 方法命名规则\n\n**采用动宾短语格式命名，例如：**\n```md\ngood：\n jumpPage、openCarInfoDialog\n\nbad：\n go、nextPage、show、open、login\n```\n\n**数据操作方法以get、post开头，以 data 结尾**\n\n```md\ngood：\n getListData、postFormData\n\nbad：\n takeData、confirmData、getList、postForm\n```\n\n**事件方法以 on 开头，inital,refresh,render除外**\n\n```\n例如，onChange,onUserInput\n```\n\n**尽量使用常用单词开头 （set、get、open、close、jump）命名规则使用驼峰命名**\n\n\n**不在 `created` 和 `mouted` 之类的方法写逻辑，取 `ajax` 数据，**\n\n## data-props\n\n**`data props` 规则**\n\n使用 `data` 里的变量时请先在 `data` 里初始化\n\n`props` **指定类型**\n\n不命名多余数据，\n\n`ajax` 请求数据，统一声明 `isLoading`,`isError` 变量记录状态\n\n","slug":"vue-1","published":1,"updated":"2019-09-16T13:46:06.687Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2ag0028n0b9jhdjd1p9","content":"<h1 id=\"Vue项目代码规范\"><a href=\"#Vue项目代码规范\" class=\"headerlink\" title=\"Vue项目代码规范\"></a><code>Vue项目代码规范</code></h1><h2 id=\"文件命名\"><a href=\"#文件命名\" class=\"headerlink\" title=\"文件命名\"></a>文件命名</h2><ul>\n<li><p><strong>目录名</strong>: 小驼峰</p>\n</li>\n<li><p><strong>js文件名</strong>: 全小写(可用.,-)</p>\n</li>\n<li><p><strong>组件名</strong>: 大驼峰(页面也算组件)</p>\n</li>\n<li><p><strong>路由</strong>: 全小写</p>\n</li>\n<li><p><strong>公共组件</strong>: XXX-XXX</p>\n<h2 id=\"文件夹命名规则\"><a href=\"#文件夹命名规则\" class=\"headerlink\" title=\"文件夹命名规则\"></a>文件夹命名规则</h2></li>\n<li><p><strong>由名词组成</strong></p>\n</li>\n<li><p><strong>单词只能有一个</strong></p>\n</li>\n<li><p><strong>命名采用小写</strong></p>\n</li>\n</ul>\n<h2 id=\"文件名称规则\"><a href=\"#文件名称规则\" class=\"headerlink\" title=\"文件名称规则\"></a>文件名称规则</h2><ul>\n<li><strong>vue文件代表着页面的名字</strong></li>\n<li><strong>放在页面文件夹之下</strong></li>\n<li><strong>文件名尽量是名词</strong></li>\n<li><strong>以大写开头的驼峰命名，开头的单词是模块的名字，例: OrderDetail,OrderList</strong></li>\n<li><strong>常用结尾词有（Detail、Edit、List、Info、Report）</strong></li>\n<li><strong>以View结尾的代表是页面或页面子组件 （CarListView,CarInfoView）</strong></li>\n</ul>\n<h2 id=\"Vue页面结构\"><a href=\"#Vue页面结构\" class=\"headerlink\" title=\"Vue页面结构\"></a>Vue页面结构</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--必须在div中编写页面--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\">    components : &#123;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    data () &#123;</span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">   mounted() &#123;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--声明语言，并且组件内必须添加scoped--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"less\"</span> <span class=\"attr\">scoped</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"方法声明顺序\"><a href=\"#方法声明顺序\" class=\"headerlink\" title=\"方法声明顺序\"></a><strong>方法声明顺序</strong></h2><p>  <code>components</code></p>\n<ul>\n<li><p>name    首字母大写，大驼峰命名规则</p>\n</li>\n<li><p>props</p>\n</li>\n<li><p>components</p>\n</li>\n<li><p>data</p>\n</li>\n<li><p>filter</p>\n</li>\n<li><p>computed</p>\n</li>\n<li><p>watch</p>\n</li>\n<li><p>created</p>\n</li>\n<li><p>activited</p>\n</li>\n<li><p>mounted</p>\n</li>\n<li><p>beforeRouterEnter</p>\n</li>\n<li><p>beforeRouteUpdate</p>\n</li>\n<li><p>beforeRouterLeave</p>\n</li>\n<li><p>methods</p>\n<h2 id=\"页面\"><a href=\"#页面\" class=\"headerlink\" title=\"页面\"></a><strong>页面</strong></h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"page page-XXX\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">header</span> <span class=\"attr\">class</span>=<span class=\"string\">\"header\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">footer</span> <span class=\"attr\">class</span>=<span class=\"string\">\"footer\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">footer</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>每个页面最外层都会有一个<code>page、page-XXX</code>类名<br>每个页面结构类似</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>部分</th>\n<th align=\"center\">代码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>头部</td>\n<td align=\"center\"><code>&lt;header class=&quot;header&quot;&gt;&lt;/header&gt;</code></td>\n</tr>\n<tr>\n<td>身体</td>\n<td align=\"center\"><code>&lt;div class=&quot;container&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td>底部</td>\n<td align=\"center\"><code>&lt;footer class=&quot;footer&quot;&gt;&lt;/footer&gt;</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a><strong>组件</strong></h2>  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"module-name\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"__hd\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"__bd\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"__ft\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>  每个组件结构类似</p>\n<table>\n<thead>\n<tr>\n<th>部分</th>\n<th align=\"center\">代码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>头部</td>\n<td align=\"center\"><code>&lt;div class=&quot;__hd&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td>身体</td>\n<td align=\"center\"><code>&lt;div class=&quot;__bd&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td>底部</td>\n<td align=\"center\"><code>&lt;div class=&quot;__ft&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"组件分类\"><a href=\"#组件分类\" class=\"headerlink\" title=\"组件分类\"></a><strong>组件分类</strong></h2><ul>\n<li><p>系统级组件</p>\n<p>这类组件俱备不同项目之间通用，通常包括一些基础级通用形组件。</p>\n</li>\n<li><p>页面级组件</p>\n<p>通常只在一个项目中实现通用，不具备项目级的移植性。</p>\n</li>\n<li><p>普通功能级组件<br>某个页面功能模块，不具备复用性，但是通过他可以实现业务功能的分离，降低耦合，以降低维护和分治目的。</p>\n</li>\n</ul>\n<h2 id=\"创建组件注意事项\"><a href=\"#创建组件注意事项\" class=\"headerlink\" title=\"创建组件注意事项\"></a><strong>创建组件注意事项</strong></h2><ul>\n<li>组件保证功能单一，不要一个组件兼顾多个功能(避免后期调整时候冗杂，增加代码耦合度)</li>\n<li>通用组件传值，尽可能单个传递,多传几个。</li>\n<li>每个组件尽可能预留一个slot，为后期拓展预留。</li>\n</ul>\n<h2 id=\"vue组件命名\"><a href=\"#vue组件命名\" class=\"headerlink\" title=\"vue组件命名\"></a><code>vue</code>组件命名</h2><ul>\n<li><p>系统级、页面级通用组件放置于 <code>src</code> 下 <code>components</code> 目录。</p>\n</li>\n<li><p>局部功能组件，存放于页面 <code>vue</code> 页面同级目录下的 <code>components</code> 目录下</p>\n</li>\n</ul>\n<p><code>view</code>文件夹下是由以页面为单位的文件夹或模块文件夹组成，放在 <code>src</code> 目录下，与<code>components</code> 和 <code>assets</code> 同级。</p>\n<p><strong>组件命名采用 大驼峰</strong></p>\n<h2 id=\"方法命名规则\"><a href=\"#方法命名规则\" class=\"headerlink\" title=\"方法命名规则\"></a>方法命名规则</h2><p><strong>采用动宾短语格式命名，例如：</strong></p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">good：</span><br><span class=\"line\"> jumpPage、openCarInfoDialog</span><br><span class=\"line\"></span><br><span class=\"line\">bad：</span><br><span class=\"line\"> go、nextPage、show、open、login</span><br></pre></td></tr></table></figure>\n\n<p><strong>数据操作方法以get、post开头，以 data 结尾</strong></p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">good：</span><br><span class=\"line\"> getListData、postFormData</span><br><span class=\"line\"></span><br><span class=\"line\">bad：</span><br><span class=\"line\"> takeData、confirmData、getList、postForm</span><br></pre></td></tr></table></figure>\n\n<p><strong>事件方法以 on 开头，inital,refresh,render除外</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如，onChange,onUserInput</span><br></pre></td></tr></table></figure>\n\n<p><strong>尽量使用常用单词开头 （set、get、open、close、jump）命名规则使用驼峰命名</strong></p>\n<p><strong>不在 <code>created</code> 和 <code>mouted</code> 之类的方法写逻辑，取 <code>ajax</code> 数据，</strong></p>\n<h2 id=\"data-props\"><a href=\"#data-props\" class=\"headerlink\" title=\"data-props\"></a>data-props</h2><p><strong><code>data props</code> 规则</strong></p>\n<p>使用 <code>data</code> 里的变量时请先在 <code>data</code> 里初始化</p>\n<p><code>props</code> <strong>指定类型</strong></p>\n<p>不命名多余数据，</p>\n<p><code>ajax</code> 请求数据，统一声明 <code>isLoading</code>,<code>isError</code> 变量记录状态</p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<h1 id=\"Vue项目代码规范\"><a href=\"#Vue项目代码规范\" class=\"headerlink\" title=\"Vue项目代码规范\"></a><code>Vue项目代码规范</code></h1><h2 id=\"文件命名\"><a href=\"#文件命名\" class=\"headerlink\" title=\"文件命名\"></a>文件命名</h2><ul>\n<li><p><strong>目录名</strong>: 小驼峰</p>\n</li>\n<li><p><strong>js文件名</strong>: 全小写(可用.,-)</p>\n</li>\n<li><p><strong>组件名</strong>: 大驼峰(页面也算组件)</p>\n</li>\n<li><p><strong>路由</strong>: 全小写</p>\n</li>\n<li><p><strong>公共组件</strong>: XXX-XXX</p>\n<h2 id=\"文件夹命名规则\"><a href=\"#文件夹命名规则\" class=\"headerlink\" title=\"文件夹命名规则\"></a>文件夹命名规则</h2></li>\n<li><p><strong>由名词组成</strong></p>\n</li>\n<li><p><strong>单词只能有一个</strong></p>\n</li>\n<li><p><strong>命名采用小写</strong></p>\n</li>\n</ul>\n<h2 id=\"文件名称规则\"><a href=\"#文件名称规则\" class=\"headerlink\" title=\"文件名称规则\"></a>文件名称规则</h2><ul>\n<li><strong>vue文件代表着页面的名字</strong></li>\n<li><strong>放在页面文件夹之下</strong></li>\n<li><strong>文件名尽量是名词</strong></li>\n<li><strong>以大写开头的驼峰命名，开头的单词是模块的名字，例: OrderDetail,OrderList</strong></li>\n<li><strong>常用结尾词有（Detail、Edit、List、Info、Report）</strong></li>\n<li><strong>以View结尾的代表是页面或页面子组件 （CarListView,CarInfoView）</strong></li>\n</ul>\n<h2 id=\"Vue页面结构\"><a href=\"#Vue页面结构\" class=\"headerlink\" title=\"Vue页面结构\"></a>Vue页面结构</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--必须在div中编写页面--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\">    components : &#123;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    data () &#123;</span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">   mounted() &#123;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--声明语言，并且组件内必须添加scoped--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"less\"</span> <span class=\"attr\">scoped</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"方法声明顺序\"><a href=\"#方法声明顺序\" class=\"headerlink\" title=\"方法声明顺序\"></a><strong>方法声明顺序</strong></h2><p>  <code>components</code></p>\n<ul>\n<li><p>name    首字母大写，大驼峰命名规则</p>\n</li>\n<li><p>props</p>\n</li>\n<li><p>components</p>\n</li>\n<li><p>data</p>\n</li>\n<li><p>filter</p>\n</li>\n<li><p>computed</p>\n</li>\n<li><p>watch</p>\n</li>\n<li><p>created</p>\n</li>\n<li><p>activited</p>\n</li>\n<li><p>mounted</p>\n</li>\n<li><p>beforeRouterEnter</p>\n</li>\n<li><p>beforeRouteUpdate</p>\n</li>\n<li><p>beforeRouterLeave</p>\n</li>\n<li><p>methods</p>\n<h2 id=\"页面\"><a href=\"#页面\" class=\"headerlink\" title=\"页面\"></a><strong>页面</strong></h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"page page-XXX\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">header</span> <span class=\"attr\">class</span>=<span class=\"string\">\"header\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">footer</span> <span class=\"attr\">class</span>=<span class=\"string\">\"footer\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">footer</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>每个页面最外层都会有一个<code>page、page-XXX</code>类名<br>每个页面结构类似</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>部分</th>\n<th align=\"center\">代码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>头部</td>\n<td align=\"center\"><code>&lt;header class=&quot;header&quot;&gt;&lt;/header&gt;</code></td>\n</tr>\n<tr>\n<td>身体</td>\n<td align=\"center\"><code>&lt;div class=&quot;container&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td>底部</td>\n<td align=\"center\"><code>&lt;footer class=&quot;footer&quot;&gt;&lt;/footer&gt;</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a><strong>组件</strong></h2>  <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"module-name\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"__hd\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"__bd\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"__ft\"</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>  每个组件结构类似</p>\n<table>\n<thead>\n<tr>\n<th>部分</th>\n<th align=\"center\">代码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>头部</td>\n<td align=\"center\"><code>&lt;div class=&quot;__hd&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td>身体</td>\n<td align=\"center\"><code>&lt;div class=&quot;__bd&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n<tr>\n<td>底部</td>\n<td align=\"center\"><code>&lt;div class=&quot;__ft&quot;&gt;&lt;/div&gt;</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"组件分类\"><a href=\"#组件分类\" class=\"headerlink\" title=\"组件分类\"></a><strong>组件分类</strong></h2><ul>\n<li><p>系统级组件</p>\n<p>这类组件俱备不同项目之间通用，通常包括一些基础级通用形组件。</p>\n</li>\n<li><p>页面级组件</p>\n<p>通常只在一个项目中实现通用，不具备项目级的移植性。</p>\n</li>\n<li><p>普通功能级组件<br>某个页面功能模块，不具备复用性，但是通过他可以实现业务功能的分离，降低耦合，以降低维护和分治目的。</p>\n</li>\n</ul>\n<h2 id=\"创建组件注意事项\"><a href=\"#创建组件注意事项\" class=\"headerlink\" title=\"创建组件注意事项\"></a><strong>创建组件注意事项</strong></h2><ul>\n<li>组件保证功能单一，不要一个组件兼顾多个功能(避免后期调整时候冗杂，增加代码耦合度)</li>\n<li>通用组件传值，尽可能单个传递,多传几个。</li>\n<li>每个组件尽可能预留一个slot，为后期拓展预留。</li>\n</ul>\n<h2 id=\"vue组件命名\"><a href=\"#vue组件命名\" class=\"headerlink\" title=\"vue组件命名\"></a><code>vue</code>组件命名</h2><ul>\n<li><p>系统级、页面级通用组件放置于 <code>src</code> 下 <code>components</code> 目录。</p>\n</li>\n<li><p>局部功能组件，存放于页面 <code>vue</code> 页面同级目录下的 <code>components</code> 目录下</p>\n</li>\n</ul>\n<p><code>view</code>文件夹下是由以页面为单位的文件夹或模块文件夹组成，放在 <code>src</code> 目录下，与<code>components</code> 和 <code>assets</code> 同级。</p>\n<p><strong>组件命名采用 大驼峰</strong></p>\n<h2 id=\"方法命名规则\"><a href=\"#方法命名规则\" class=\"headerlink\" title=\"方法命名规则\"></a>方法命名规则</h2><p><strong>采用动宾短语格式命名，例如：</strong></p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">good：</span><br><span class=\"line\"> jumpPage、openCarInfoDialog</span><br><span class=\"line\"></span><br><span class=\"line\">bad：</span><br><span class=\"line\"> go、nextPage、show、open、login</span><br></pre></td></tr></table></figure>\n\n<p><strong>数据操作方法以get、post开头，以 data 结尾</strong></p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">good：</span><br><span class=\"line\"> getListData、postFormData</span><br><span class=\"line\"></span><br><span class=\"line\">bad：</span><br><span class=\"line\"> takeData、confirmData、getList、postForm</span><br></pre></td></tr></table></figure>\n\n<p><strong>事件方法以 on 开头，inital,refresh,render除外</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如，onChange,onUserInput</span><br></pre></td></tr></table></figure>\n\n<p><strong>尽量使用常用单词开头 （set、get、open、close、jump）命名规则使用驼峰命名</strong></p>\n<p><strong>不在 <code>created</code> 和 <code>mouted</code> 之类的方法写逻辑，取 <code>ajax</code> 数据，</strong></p>\n<h2 id=\"data-props\"><a href=\"#data-props\" class=\"headerlink\" title=\"data-props\"></a>data-props</h2><p><strong><code>data props</code> 规则</strong></p>\n<p>使用 <code>data</code> 里的变量时请先在 <code>data</code> 里初始化</p>\n<p><code>props</code> <strong>指定类型</strong></p>\n<p>不命名多余数据，</p>\n<p><code>ajax</code> 请求数据，统一声明 <code>isLoading</code>,<code>isError</code> 变量记录状态</p>\n"},{"title":"Vue.js基础知识","comments":1,"description":"Vue.js基础知识","keywords":"vue, Vue.js","date":"2017-06-29T08:23:10.000Z","_content":"\n\n## 数据的绑定\n\n```js\nvar data = {\n    name:\"hbb\",\n    age:\"<p>25</p>\"\n};\nvar box = new Vue({\n    el:\"#box\",  //绑定box\n    data:data\n});\n```\n\n`el`相当于在`js`中的`document.getElementById(\"\")`;可以试验以下：\n\n```js\nconsole.log(box.$el===document.getElementById(\"box\")) // 为true\n```\n\n\n代码可以看看到`data`加入了创建的`vue`中，这是我们打印\n\n```js\nconsole.log(box.name===data.anme) //为true\n```\n\n如果想让`data`里面的数据在`box`内显示,`{{name}}`,可以在`box`中显示`name`的值。\n\n## 监听数据的变化\n\n`$watch()`可以传两个参数，\n\n第一个：监听什么。\n\n第二个回调函数：1.变化之后的值，2.变化之前的值。\n\n上面两个为必选，还可以传`{deep:true }`及`{immediate = true}`。\n\n```js\nbox.$watch('name',function (str ,hbb){\n    alert(name);\n    },{\n      immediate: true //立刻执行\n//        deep:true\n});\n```\n\n## v-once\n\n(只绑定一次，在进行修改的时候不会改变)\n\n在浏览器下面：`data.age = \"123\"`,不加`v-once`的时候，`box`内容跟着改变为`“123”`，加上之后，不会改变。\n\n```html\n<div id=\"box\" v-once>{{age}}</div>\n```\n\n## v-html\n\n```js\nvar data = {\n    name:\"hbb\",\n    age:\"<p>25</p>\"\n};\n```\n\n## v-bind\n\n进行元素属性绑定，可以简写成 `：` 。\n\n```html\n<div id=\"box1\">\n    <a v-bind:href=\"a\" :class=\"red\" class=\"yellow\">点击进入</a>\n    <br>\n    <a href=\"\" :class='[red, yellow]' class=\"green\">class类名实例</a>\n    <br>\n    <a href=\"\" :class='{red,yellow}' class=\"green\">第三种方法</a>\n    <br>\n    <img v-bind:src=\"b\" alt=\"\" >\n    <input type=\"text\" v-model=\"a\">\n</div>\n```\n\n```css\n.red{\n    color:red;\n}\n.green{\n    background: green;\n}\n.yellow{\n    border:5px solid yellow;\n}\na,input,img{\n    display: block;\n}\n```\n\n```js\nvar box1 = new Vue({\n    el:\"#box1\",\n    data:{\n        a:\"http://www.hbbaly.com\",\n        b:\"http://www.hbbaly.com/wp-content/themes/blog/timthumb.php?src=http://www.hbbaly.com//wp-content/themes/blog/case/img/rubber.jpg&w=280&h=210&zc=1\",\n        red:\"red\",\n        green:\"green\",\n        yellow:\"yellow\"\n    }\n});\n```\n\n## v-model\n\n双向绑定表单元素：\n\n在`input`框内改变地址为百度链接，点击a标签不会跳转到我的`blog`而是到百度去了。在`input`框内我改变的a标签的`href`，a标签的链接地址也就随之改变。\n\n## class绑定的三种方法\n\n\n代码`v-bind`应用下面的代码。\n\n1. v-bind\n如下可以看到a标签内的字变红了，添加上了`red`类名,与原来a标签自己的`class`类名不冲突，只是在后面添加，但是这一中方法只能添加一个，多个会报错。\n\n2. :class=\"[]\"来绑定类名：\n可以添加多个用逗号隔开，与原来a标签自己的`class`类名不冲突。\n\n3. {}形式绑定,用法与[]类似。\n\n\n## v-if\n如果符合插入标签，不符合就移除标签与`v-show`不同，`v-show`使用`display`：来控制标签的显示与隐藏\n\n\n```html\n<div id=\"box3\">\n    <div v-if=\"str=='1'\">\n        <a href=\"\">登录</a>\n    </div>\n    <div v-else-if=\"str=='2'\">\n        <a href=\"\">密码</a>\n    </div>\n    <div v-else>什么都不是</div>\n</div>\n<div v-show=\"show\" >这里演示show</div>\n\nvar box3 = new Vue({\n    el:\"#box3\",\n    data:{\n        str:\"1\",\n        show:true\n    }\n});\n```\n\n## v-on\n\n用来绑定事件,可以传参数。简写 ：`@+事件名`\n\n```html\n<div id=\"box4\"  v-on:click=\"fn(5)\" >点击</div>\n```\n\n```js\nvar box4 = new Vue({\n    el:\"#box4\",\n    data:{\n        str:\"1\",\n        show:\"true\"\n    },\n    methods:{\n        fn(a){\n            alert(a);\n        }\n    }\n});\n```\n\n## 过滤:filters\n\n```html\n<div id=\"box5\">\n        {{inp|fn(\"元\")}}\n    <input type=\"text\" v-model=\"inp\">\n</div>\n```\n\nfn可以传参数，第一个默认为inp，第二个是自定义如：```{{inp|fn(\"元\")}}```。如果想要实现自动添加后缀为元的功能，fn内必须`return`。\n\n## computed\n\n实时计算，数据发生变化的时候执行\n\n```html\n<div id=\"box6\">\n    <p>总金额：{{fn}}</p>\n    <input type=\"text\" v-model=\"inp\">\n    <input type=\"number\" v-model=\"inp1\">\n</div>\n```\n\n```js\nvar box6= new Vue({\n    el:\"#box6\",\n    data:{\n        inp:\"\",\n        inp1:\"\"\n    },\n    methods:{},\n    computed:{\n        fn(){\n          return this.inp*this.inp1;\n        }\n    }\n});\n```\n\n## v-for:循环\n\n```html\n<div id=\"box7\">\n    <ul>\n        <li v-for=\"i in json\">{{ i }}</li>\n    </ul>\n</div>\n```\n\n```js\nvar box7= new Vue({\n    el:\"#box7\",\n    data:{\n        json:[1,2,3,4]  //使用json与arr都行\n    },\n    methods:{\n        fn(){\n            var arr = [];\n            for(var i =0;i<10;i++){\n                arr.push(i)\n            }\n            return arr;\n        }\n    }\n})\n```","source":"_posts/vue-3.md","raw":"---\ntitle: Vue.js基础知识\ncomments: true\ndescription: Vue.js基础知识\ntags: \"Vue\"\ncategories: \"Vue\"\nkeywords: vue, Vue.js \ndate: 2017-06-29 16:23:10\n---\n\n\n## 数据的绑定\n\n```js\nvar data = {\n    name:\"hbb\",\n    age:\"<p>25</p>\"\n};\nvar box = new Vue({\n    el:\"#box\",  //绑定box\n    data:data\n});\n```\n\n`el`相当于在`js`中的`document.getElementById(\"\")`;可以试验以下：\n\n```js\nconsole.log(box.$el===document.getElementById(\"box\")) // 为true\n```\n\n\n代码可以看看到`data`加入了创建的`vue`中，这是我们打印\n\n```js\nconsole.log(box.name===data.anme) //为true\n```\n\n如果想让`data`里面的数据在`box`内显示,`{{name}}`,可以在`box`中显示`name`的值。\n\n## 监听数据的变化\n\n`$watch()`可以传两个参数，\n\n第一个：监听什么。\n\n第二个回调函数：1.变化之后的值，2.变化之前的值。\n\n上面两个为必选，还可以传`{deep:true }`及`{immediate = true}`。\n\n```js\nbox.$watch('name',function (str ,hbb){\n    alert(name);\n    },{\n      immediate: true //立刻执行\n//        deep:true\n});\n```\n\n## v-once\n\n(只绑定一次，在进行修改的时候不会改变)\n\n在浏览器下面：`data.age = \"123\"`,不加`v-once`的时候，`box`内容跟着改变为`“123”`，加上之后，不会改变。\n\n```html\n<div id=\"box\" v-once>{{age}}</div>\n```\n\n## v-html\n\n```js\nvar data = {\n    name:\"hbb\",\n    age:\"<p>25</p>\"\n};\n```\n\n## v-bind\n\n进行元素属性绑定，可以简写成 `：` 。\n\n```html\n<div id=\"box1\">\n    <a v-bind:href=\"a\" :class=\"red\" class=\"yellow\">点击进入</a>\n    <br>\n    <a href=\"\" :class='[red, yellow]' class=\"green\">class类名实例</a>\n    <br>\n    <a href=\"\" :class='{red,yellow}' class=\"green\">第三种方法</a>\n    <br>\n    <img v-bind:src=\"b\" alt=\"\" >\n    <input type=\"text\" v-model=\"a\">\n</div>\n```\n\n```css\n.red{\n    color:red;\n}\n.green{\n    background: green;\n}\n.yellow{\n    border:5px solid yellow;\n}\na,input,img{\n    display: block;\n}\n```\n\n```js\nvar box1 = new Vue({\n    el:\"#box1\",\n    data:{\n        a:\"http://www.hbbaly.com\",\n        b:\"http://www.hbbaly.com/wp-content/themes/blog/timthumb.php?src=http://www.hbbaly.com//wp-content/themes/blog/case/img/rubber.jpg&w=280&h=210&zc=1\",\n        red:\"red\",\n        green:\"green\",\n        yellow:\"yellow\"\n    }\n});\n```\n\n## v-model\n\n双向绑定表单元素：\n\n在`input`框内改变地址为百度链接，点击a标签不会跳转到我的`blog`而是到百度去了。在`input`框内我改变的a标签的`href`，a标签的链接地址也就随之改变。\n\n## class绑定的三种方法\n\n\n代码`v-bind`应用下面的代码。\n\n1. v-bind\n如下可以看到a标签内的字变红了，添加上了`red`类名,与原来a标签自己的`class`类名不冲突，只是在后面添加，但是这一中方法只能添加一个，多个会报错。\n\n2. :class=\"[]\"来绑定类名：\n可以添加多个用逗号隔开，与原来a标签自己的`class`类名不冲突。\n\n3. {}形式绑定,用法与[]类似。\n\n\n## v-if\n如果符合插入标签，不符合就移除标签与`v-show`不同，`v-show`使用`display`：来控制标签的显示与隐藏\n\n\n```html\n<div id=\"box3\">\n    <div v-if=\"str=='1'\">\n        <a href=\"\">登录</a>\n    </div>\n    <div v-else-if=\"str=='2'\">\n        <a href=\"\">密码</a>\n    </div>\n    <div v-else>什么都不是</div>\n</div>\n<div v-show=\"show\" >这里演示show</div>\n\nvar box3 = new Vue({\n    el:\"#box3\",\n    data:{\n        str:\"1\",\n        show:true\n    }\n});\n```\n\n## v-on\n\n用来绑定事件,可以传参数。简写 ：`@+事件名`\n\n```html\n<div id=\"box4\"  v-on:click=\"fn(5)\" >点击</div>\n```\n\n```js\nvar box4 = new Vue({\n    el:\"#box4\",\n    data:{\n        str:\"1\",\n        show:\"true\"\n    },\n    methods:{\n        fn(a){\n            alert(a);\n        }\n    }\n});\n```\n\n## 过滤:filters\n\n```html\n<div id=\"box5\">\n        {{inp|fn(\"元\")}}\n    <input type=\"text\" v-model=\"inp\">\n</div>\n```\n\nfn可以传参数，第一个默认为inp，第二个是自定义如：```{{inp|fn(\"元\")}}```。如果想要实现自动添加后缀为元的功能，fn内必须`return`。\n\n## computed\n\n实时计算，数据发生变化的时候执行\n\n```html\n<div id=\"box6\">\n    <p>总金额：{{fn}}</p>\n    <input type=\"text\" v-model=\"inp\">\n    <input type=\"number\" v-model=\"inp1\">\n</div>\n```\n\n```js\nvar box6= new Vue({\n    el:\"#box6\",\n    data:{\n        inp:\"\",\n        inp1:\"\"\n    },\n    methods:{},\n    computed:{\n        fn(){\n          return this.inp*this.inp1;\n        }\n    }\n});\n```\n\n## v-for:循环\n\n```html\n<div id=\"box7\">\n    <ul>\n        <li v-for=\"i in json\">{{ i }}</li>\n    </ul>\n</div>\n```\n\n```js\nvar box7= new Vue({\n    el:\"#box7\",\n    data:{\n        json:[1,2,3,4]  //使用json与arr都行\n    },\n    methods:{\n        fn(){\n            var arr = [];\n            for(var i =0;i<10;i++){\n                arr.push(i)\n            }\n            return arr;\n        }\n    }\n})\n```","slug":"vue-3","published":1,"updated":"2019-10-12T17:14:00.611Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2ah002dn0b989gagowi","content":"<h2 id=\"数据的绑定\"><a href=\"#数据的绑定\" class=\"headerlink\" title=\"数据的绑定\"></a>数据的绑定</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">\"hbb\"</span>,</span><br><span class=\"line\">    age:<span class=\"string\">\"&lt;p&gt;25&lt;/p&gt;\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> box = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box\"</span>,  <span class=\"comment\">//绑定box</span></span><br><span class=\"line\">    data:data</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><code>el</code>相当于在<code>js</code>中的<code>document.getElementById(&quot;&quot;)</code>;可以试验以下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(box.$el===<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"box\"</span>)) <span class=\"comment\">// 为true</span></span><br></pre></td></tr></table></figure>\n\n<p>代码可以看看到<code>data</code>加入了创建的<code>vue</code>中，这是我们打印</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(box.name===data.anme) <span class=\"comment\">//为true</span></span><br></pre></td></tr></table></figure>\n\n<p>如果想让<code>data</code>里面的数据在<code>box</code>内显示,<code></code>,可以在<code>box</code>中显示<code>name</code>的值。</p>\n<h2 id=\"监听数据的变化\"><a href=\"#监听数据的变化\" class=\"headerlink\" title=\"监听数据的变化\"></a>监听数据的变化</h2><p><code>$watch()</code>可以传两个参数，</p>\n<p>第一个：监听什么。</p>\n<p>第二个回调函数：1.变化之后的值，2.变化之前的值。</p>\n<p>上面两个为必选，还可以传<code>{deep:true }</code>及<code>{immediate = true}</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">box.$watch(<span class=\"string\">'name'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str ,hbb</span>)</span>&#123;</span><br><span class=\"line\">    alert(name);</span><br><span class=\"line\">    &#125;,&#123;</span><br><span class=\"line\">      immediate: <span class=\"literal\">true</span> <span class=\"comment\">//立刻执行</span></span><br><span class=\"line\"><span class=\"comment\">//        deep:true</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-once\"><a href=\"#v-once\" class=\"headerlink\" title=\"v-once\"></a>v-once</h2><p>(只绑定一次，在进行修改的时候不会改变)</p>\n<p>在浏览器下面：<code>data.age = &quot;123&quot;</code>,不加<code>v-once</code>的时候，<code>box</code>内容跟着改变为<code>“123”</code>，加上之后，不会改变。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box\"</span> <span class=\"attr\">v-once</span>&gt;</span>&#123;&#123;age&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-html\"><a href=\"#v-html\" class=\"headerlink\" title=\"v-html\"></a>v-html</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">\"hbb\"</span>,</span><br><span class=\"line\">    age:<span class=\"string\">\"&lt;p&gt;25&lt;/p&gt;\"</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-bind\"><a href=\"#v-bind\" class=\"headerlink\" title=\"v-bind\"></a>v-bind</h2><p>进行元素属性绑定，可以简写成 <code>：</code> 。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box1\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-bind:href</span>=<span class=\"string\">\"a\"</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"red\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"yellow\"</span>&gt;</span>点击进入<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">:class</span>=<span class=\"string\">'[red, yellow]'</span> <span class=\"attr\">class</span>=<span class=\"string\">\"green\"</span>&gt;</span>class类名实例<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">:class</span>=<span class=\"string\">'&#123;red,yellow&#125;'</span> <span class=\"attr\">class</span>=<span class=\"string\">\"green\"</span>&gt;</span>第三种方法<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">v-bind:src</span>=<span class=\"string\">\"b\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"a\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.red</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.green</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: green;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.yellow</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">5px</span> solid yellow;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">a</span>,<span class=\"selector-tag\">input</span>,<span class=\"selector-tag\">img</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box1 = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box1\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        a:<span class=\"string\">\"http://www.hbbaly.com\"</span>,</span><br><span class=\"line\">        b:<span class=\"string\">\"http://www.hbbaly.com/wp-content/themes/blog/timthumb.php?src=http://www.hbbaly.com//wp-content/themes/blog/case/img/rubber.jpg&amp;w=280&amp;h=210&amp;zc=1\"</span>,</span><br><span class=\"line\">        red:<span class=\"string\">\"red\"</span>,</span><br><span class=\"line\">        green:<span class=\"string\">\"green\"</span>,</span><br><span class=\"line\">        yellow:<span class=\"string\">\"yellow\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-model\"><a href=\"#v-model\" class=\"headerlink\" title=\"v-model\"></a>v-model</h2><p>双向绑定表单元素：</p>\n<p>在<code>input</code>框内改变地址为百度链接，点击a标签不会跳转到我的<code>blog</code>而是到百度去了。在<code>input</code>框内我改变的a标签的<code>href</code>，a标签的链接地址也就随之改变。</p>\n<h2 id=\"class绑定的三种方法\"><a href=\"#class绑定的三种方法\" class=\"headerlink\" title=\"class绑定的三种方法\"></a>class绑定的三种方法</h2><p>代码<code>v-bind</code>应用下面的代码。</p>\n<ol>\n<li><p>v-bind<br>如下可以看到a标签内的字变红了，添加上了<code>red</code>类名,与原来a标签自己的<code>class</code>类名不冲突，只是在后面添加，但是这一中方法只能添加一个，多个会报错。</p>\n</li>\n<li><p>:class=”[]”来绑定类名：<br>可以添加多个用逗号隔开，与原来a标签自己的<code>class</code>类名不冲突。</p>\n</li>\n<li><p>{}形式绑定,用法与[]类似。</p>\n</li>\n</ol>\n<h2 id=\"v-if\"><a href=\"#v-if\" class=\"headerlink\" title=\"v-if\"></a>v-if</h2><p>如果符合插入标签，不符合就移除标签与<code>v-show</code>不同，<code>v-show</code>使用<code>display</code>：来控制标签的显示与隐藏</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box3\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"str=='1'\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">\"str=='2'\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>密码<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else</span>&gt;</span>什么都不是<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"show\"</span> &gt;</span>这里演示show<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">var box3 = new Vue(&#123;</span><br><span class=\"line\">    el:\"#box3\",</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        str:\"1\",</span><br><span class=\"line\">        show:true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-on\"><a href=\"#v-on\" class=\"headerlink\" title=\"v-on\"></a>v-on</h2><p>用来绑定事件,可以传参数。简写 ：<code>@+事件名</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box4\"</span>  <span class=\"attr\">v-on:click</span>=<span class=\"string\">\"fn(5)\"</span> &gt;</span>点击<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box4 = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box4\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        str:<span class=\"string\">\"1\"</span>,</span><br><span class=\"line\">        show:<span class=\"string\">\"true\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods:&#123;</span><br><span class=\"line\">        fn(a)&#123;</span><br><span class=\"line\">            alert(a);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"过滤-filters\"><a href=\"#过滤-filters\" class=\"headerlink\" title=\"过滤:filters\"></a>过滤:filters</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box5\"</span>&gt;</span></span><br><span class=\"line\">        &#123;&#123;inp|fn(\"元\")&#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"inp\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>fn可以传参数，第一个默认为inp，第二个是自定义如：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## computed</span><br><span class=\"line\"></span><br><span class=\"line\">实时计算，数据发生变化的时候执行</span><br><span class=\"line\"></span><br><span class=\"line\">```html</span><br><span class=\"line\">&lt;div id=&quot;box6&quot;&gt;</span><br><span class=\"line\">    &lt;p&gt;总金额：&#123;&#123;fn&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">    &lt;input type=&quot;text&quot; v-model=&quot;inp&quot;&gt;</span><br><span class=\"line\">    &lt;input type=&quot;number&quot; v-model=&quot;inp1&quot;&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box6= <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box6\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        inp:<span class=\"string\">\"\"</span>,</span><br><span class=\"line\">        inp1:<span class=\"string\">\"\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods:&#123;&#125;,</span><br><span class=\"line\">    computed:&#123;</span><br><span class=\"line\">        fn()&#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.inp*<span class=\"keyword\">this</span>.inp1;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-for-循环\"><a href=\"#v-for-循环\" class=\"headerlink\" title=\"v-for:循环\"></a>v-for:循环</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box7\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"i in json\"</span>&gt;</span>&#123;&#123; i &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box7= <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box7\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        json:[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]  <span class=\"comment\">//使用json与arr都行</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods:&#123;</span><br><span class=\"line\">        fn()&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i =<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">                arr.push(i)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<h2 id=\"数据的绑定\"><a href=\"#数据的绑定\" class=\"headerlink\" title=\"数据的绑定\"></a>数据的绑定</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">\"hbb\"</span>,</span><br><span class=\"line\">    age:<span class=\"string\">\"&lt;p&gt;25&lt;/p&gt;\"</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> box = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box\"</span>,  <span class=\"comment\">//绑定box</span></span><br><span class=\"line\">    data:data</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><code>el</code>相当于在<code>js</code>中的<code>document.getElementById(&quot;&quot;)</code>;可以试验以下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(box.$el===<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"box\"</span>)) <span class=\"comment\">// 为true</span></span><br></pre></td></tr></table></figure>\n\n<p>代码可以看看到<code>data</code>加入了创建的<code>vue</code>中，这是我们打印</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(box.name===data.anme) <span class=\"comment\">//为true</span></span><br></pre></td></tr></table></figure>\n\n<p>如果想让<code>data</code>里面的数据在<code>box</code>内显示,<code></code>,可以在<code>box</code>中显示<code>name</code>的值。</p>\n<h2 id=\"监听数据的变化\"><a href=\"#监听数据的变化\" class=\"headerlink\" title=\"监听数据的变化\"></a>监听数据的变化</h2><p><code>$watch()</code>可以传两个参数，</p>\n<p>第一个：监听什么。</p>\n<p>第二个回调函数：1.变化之后的值，2.变化之前的值。</p>\n<p>上面两个为必选，还可以传<code>{deep:true }</code>及<code>{immediate = true}</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">box.$watch(<span class=\"string\">'name'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str ,hbb</span>)</span>&#123;</span><br><span class=\"line\">    alert(name);</span><br><span class=\"line\">    &#125;,&#123;</span><br><span class=\"line\">      immediate: <span class=\"literal\">true</span> <span class=\"comment\">//立刻执行</span></span><br><span class=\"line\"><span class=\"comment\">//        deep:true</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-once\"><a href=\"#v-once\" class=\"headerlink\" title=\"v-once\"></a>v-once</h2><p>(只绑定一次，在进行修改的时候不会改变)</p>\n<p>在浏览器下面：<code>data.age = &quot;123&quot;</code>,不加<code>v-once</code>的时候，<code>box</code>内容跟着改变为<code>“123”</code>，加上之后，不会改变。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box\"</span> <span class=\"attr\">v-once</span>&gt;</span>&#123;&#123;age&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-html\"><a href=\"#v-html\" class=\"headerlink\" title=\"v-html\"></a>v-html</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> data = &#123;</span><br><span class=\"line\">    name:<span class=\"string\">\"hbb\"</span>,</span><br><span class=\"line\">    age:<span class=\"string\">\"&lt;p&gt;25&lt;/p&gt;\"</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-bind\"><a href=\"#v-bind\" class=\"headerlink\" title=\"v-bind\"></a>v-bind</h2><p>进行元素属性绑定，可以简写成 <code>：</code> 。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box1\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-bind:href</span>=<span class=\"string\">\"a\"</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"red\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"yellow\"</span>&gt;</span>点击进入<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">:class</span>=<span class=\"string\">'[red, yellow]'</span> <span class=\"attr\">class</span>=<span class=\"string\">\"green\"</span>&gt;</span>class类名实例<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">:class</span>=<span class=\"string\">'&#123;red,yellow&#125;'</span> <span class=\"attr\">class</span>=<span class=\"string\">\"green\"</span>&gt;</span>第三种方法<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">v-bind:src</span>=<span class=\"string\">\"b\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span> &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"a\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.red</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.green</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: green;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.yellow</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>:<span class=\"number\">5px</span> solid yellow;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">a</span>,<span class=\"selector-tag\">input</span>,<span class=\"selector-tag\">img</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box1 = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box1\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        a:<span class=\"string\">\"http://www.hbbaly.com\"</span>,</span><br><span class=\"line\">        b:<span class=\"string\">\"http://www.hbbaly.com/wp-content/themes/blog/timthumb.php?src=http://www.hbbaly.com//wp-content/themes/blog/case/img/rubber.jpg&amp;w=280&amp;h=210&amp;zc=1\"</span>,</span><br><span class=\"line\">        red:<span class=\"string\">\"red\"</span>,</span><br><span class=\"line\">        green:<span class=\"string\">\"green\"</span>,</span><br><span class=\"line\">        yellow:<span class=\"string\">\"yellow\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-model\"><a href=\"#v-model\" class=\"headerlink\" title=\"v-model\"></a>v-model</h2><p>双向绑定表单元素：</p>\n<p>在<code>input</code>框内改变地址为百度链接，点击a标签不会跳转到我的<code>blog</code>而是到百度去了。在<code>input</code>框内我改变的a标签的<code>href</code>，a标签的链接地址也就随之改变。</p>\n<h2 id=\"class绑定的三种方法\"><a href=\"#class绑定的三种方法\" class=\"headerlink\" title=\"class绑定的三种方法\"></a>class绑定的三种方法</h2><p>代码<code>v-bind</code>应用下面的代码。</p>\n<ol>\n<li><p>v-bind<br>如下可以看到a标签内的字变红了，添加上了<code>red</code>类名,与原来a标签自己的<code>class</code>类名不冲突，只是在后面添加，但是这一中方法只能添加一个，多个会报错。</p>\n</li>\n<li><p>:class=”[]”来绑定类名：<br>可以添加多个用逗号隔开，与原来a标签自己的<code>class</code>类名不冲突。</p>\n</li>\n<li><p>{}形式绑定,用法与[]类似。</p>\n</li>\n</ol>\n<h2 id=\"v-if\"><a href=\"#v-if\" class=\"headerlink\" title=\"v-if\"></a>v-if</h2><p>如果符合插入标签，不符合就移除标签与<code>v-show</code>不同，<code>v-show</code>使用<code>display</code>：来控制标签的显示与隐藏</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box3\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"str=='1'\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else-if</span>=<span class=\"string\">\"str=='2'\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>密码<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-else</span>&gt;</span>什么都不是<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"show\"</span> &gt;</span>这里演示show<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">var box3 = new Vue(&#123;</span><br><span class=\"line\">    el:\"#box3\",</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        str:\"1\",</span><br><span class=\"line\">        show:true</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-on\"><a href=\"#v-on\" class=\"headerlink\" title=\"v-on\"></a>v-on</h2><p>用来绑定事件,可以传参数。简写 ：<code>@+事件名</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box4\"</span>  <span class=\"attr\">v-on:click</span>=<span class=\"string\">\"fn(5)\"</span> &gt;</span>点击<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box4 = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box4\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        str:<span class=\"string\">\"1\"</span>,</span><br><span class=\"line\">        show:<span class=\"string\">\"true\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods:&#123;</span><br><span class=\"line\">        fn(a)&#123;</span><br><span class=\"line\">            alert(a);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"过滤-filters\"><a href=\"#过滤-filters\" class=\"headerlink\" title=\"过滤:filters\"></a>过滤:filters</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box5\"</span>&gt;</span></span><br><span class=\"line\">        &#123;&#123;inp|fn(\"元\")&#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"inp\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>fn可以传参数，第一个默认为inp，第二个是自定义如：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## computed</span><br><span class=\"line\"></span><br><span class=\"line\">实时计算，数据发生变化的时候执行</span><br><span class=\"line\"></span><br><span class=\"line\">```html</span><br><span class=\"line\">&lt;div id=&quot;box6&quot;&gt;</span><br><span class=\"line\">    &lt;p&gt;总金额：&#123;&#123;fn&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">    &lt;input type=&quot;text&quot; v-model=&quot;inp&quot;&gt;</span><br><span class=\"line\">    &lt;input type=&quot;number&quot; v-model=&quot;inp1&quot;&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box6= <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box6\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        inp:<span class=\"string\">\"\"</span>,</span><br><span class=\"line\">        inp1:<span class=\"string\">\"\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods:&#123;&#125;,</span><br><span class=\"line\">    computed:&#123;</span><br><span class=\"line\">        fn()&#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.inp*<span class=\"keyword\">this</span>.inp1;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"v-for-循环\"><a href=\"#v-for-循环\" class=\"headerlink\" title=\"v-for:循环\"></a>v-for:循环</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box7\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"i in json\"</span>&gt;</span>&#123;&#123; i &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box7= <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box7\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        json:[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]  <span class=\"comment\">//使用json与arr都行</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods:&#123;</span><br><span class=\"line\">        fn()&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i =<span class=\"number\">0</span>;i&lt;<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">                arr.push(i)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>"},{"title":"vue中跨域代理","comments":1,"description":"vue中跨域代理","keywords":"vue, Vue.js","date":"2017-07-29T03:58:40.000Z","_content":"\nvue中有的时候会遇到跨域问题，我们可以打开`config/index.js`\n\nvue中跨域代理\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/config-1.png)\n\n\n在`index.js`中`proxyTable{}`添加你要代理的域名即可：\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/TVJ4DHLC8SO9K2NN91X80U.png)\n\nvue中跨域代理\n\n\n之后重新`npm run dev`跨域配置就生效了\n\n在组件中怎么使用\n\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/IV_OL70G0F_SCGMFI.png)","source":"_posts/vue-6.md","raw":"---\ntitle: vue中跨域代理\ncomments: true\ndescription: vue中跨域代理\ntags: \"Vue\"\ncategories: \"Vue\"\nkeywords: vue, Vue.js \ndate: 2017-07-29 11:58:40\n---\n\nvue中有的时候会遇到跨域问题，我们可以打开`config/index.js`\n\nvue中跨域代理\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/config-1.png)\n\n\n在`index.js`中`proxyTable{}`添加你要代理的域名即可：\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/TVJ4DHLC8SO9K2NN91X80U.png)\n\nvue中跨域代理\n\n\n之后重新`npm run dev`跨域配置就生效了\n\n在组件中怎么使用\n\n\n![](http://www.hbbaly.com/wp-content/uploads/2018/04/IV_OL70G0F_SCGMFI.png)","slug":"vue-6","published":1,"updated":"2019-10-13T14:23:09.944Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2ai002gn0b977c5qy9c","content":"<p>vue中有的时候会遇到跨域问题，我们可以打开<code>config/index.js</code></p>\n<p>vue中跨域代理</p>\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/config-1.png\" class=\"lozad\"></p>\n<p>在<code>index.js</code>中<code>proxyTable{}</code>添加你要代理的域名即可：</p>\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/TVJ4DHLC8SO9K2NN91X80U.png\" class=\"lozad\"></p>\n<p>vue中跨域代理</p>\n<p>之后重新<code>npm run dev</code>跨域配置就生效了</p>\n<p>在组件中怎么使用</p>\n<p><img alt data-src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/IV_OL70G0F_SCGMFI.png\" class=\"lozad\"></p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<p>vue中有的时候会遇到跨域问题，我们可以打开<code>config/index.js</code></p>\n<p>vue中跨域代理</p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/config-1.png\" alt></p>\n<p>在<code>index.js</code>中<code>proxyTable{}</code>添加你要代理的域名即可：</p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/TVJ4DHLC8SO9K2NN91X80U.png\" alt></p>\n<p>vue中跨域代理</p>\n<p>之后重新<code>npm run dev</code>跨域配置就生效了</p>\n<p>在组件中怎么使用</p>\n<p><img src=\"http://www.hbbaly.com/wp-content/uploads/2018/04/IV_OL70G0F_SCGMFI.png\" alt></p>\n"},{"title":"Vue.js进阶","comments":1,"description":"Vue.js基础知识","keywords":"vue, Vue.js","date":"2017-07-20T04:23:10.000Z","_content":"\n## v-for把一个数组对应为一组元素\n\nv-for指令需要使用`item in items`。`items`是源数据组，`item`是数组元素迭代的别名。 `item in items`中的`in`可以换成`of`。\n\n```html\n<ul id=\"box1\">\n    <li v-for=\"item in items\">{{item}}</li>\n</ul>\n```\n\n```js\nvar box1 = new Vue({\n    el:\"#box1\",\n    data:{\n        items:[\n            {电脑:\"10000\"},\n            {手机:\"5000\"},\n            {自行车:\"20000\"}\n        ]\n    }\n});\n```\n\n渲染结果\n\n{ \"电脑\": \"10000\" }\n{ \"手机\": \"5000\" }\n{ \"自行车\": \"20000\" }\n\nv-for还支持第二个参数作为当前项的索引。\n\n```html\nul id=\"box2\">\n    <li v-for=\"(item,index) of items\">{{item}}----{{index}}</li>\n</ul>\n```\n\n```js\nvar box2 = new Vue({\n    el:\"#box2\",\n    data:{\n        items:[\n            {电脑:\"10000\"},\n            {手机:\"5000\"},\n            {自行车:\"2000\"}\n        ]\n    }\n});\n```\n\n{ \"电脑\": \"10000\" }----0\n{ \"手机\": \"5000\" }----1\n{ \"自行车\": \"2000\" }----2\n \n\n## 一个对象的v-for\n\n```html\n<ul id=\"box3\">\n    <li v-for=\"item in items\">{{item}}</li>\n</ul>\n```\n\n```js\nvar box3 = new Vue({\n    el:\"#box3\",\n    data:{\n        items:{\n            电脑:\"10000\",\n            手机:\"5000\",\n            自行车:\"2000\"\n        }\n    }\n});\n```\n\n10000\n5000\n2000\n \n第二个参数为参数的键名。\n\n```html\n<ul id=\"box4\">\n    <li v-for=\"(item,key) in items\">{{key}}---{{item}}</li>\n</ul>\n```\n\n```js\nvar box4 = new Vue({\n    el:\"#box4\",\n    data:{\n        items:{\n            电脑:\"10000\",\n            手机:\"5000\",\n            自行车:\"2000\"\n        }\n    }\n});\n```\n\n电脑---10000\n手机---5000\n自行车---2000\n \n\n第三个参数为索引值：\n\n```html\n<ul id=\"box5\">\n    <li v-for=\"(item,key,index) in items\" :key=\"item.id\">{{index}}---{{key}}---{{item}}</li>\n</ul>\n```\n\n```js\nvar box5 = new Vue({\n    el:\"#box5\",\n    data:{\n        items:{\n            电脑:\"10000\",\n            手机:\"5000\",\n            自行车:\"2000\"\n        }\n    }\n});\n```\n\n0---电脑---10000\n1---手机---5000\n2---自行车---2000\n \n\n## 数组更新检测\n\nVue包含一组观察数组变异的方法，所以他们也将会触发视图更新。\n\n```\npush()\npop()\nshift()\nunshift()\nsplice()\nsort()\nreverse()\n```\n\n\n### 替换数组\n\n变异方法 (mutation method)，会改变被这些方法调用的原始数组。相比之下，也有非变异 (non-mutating method) 方法， 例如：`filter()`, `concat()` 和 `slice()` 。这些不会改变原始数组，但总是返回一个新数组。当使用非变异方法时，可以用新数组替换旧数组。\n\n### 注意事项\n\nVue不能检测以下变动的数组。\n\n1.利用索引值设置一个项的时候，例如：\n\n`box1.items[indexOfItem] = newValue `\n\n解决的办法：\n\n`Vue.set(box1.items, indexOfItem, newValue)`\n\n或者是`box1.items.splice(indexOfItem,\n\nnewValue)`；这两种方法都可以。\n\n2.修改数组的长度`box1.items.length = newLength`\n\n`box1.items.splice(newLength)`;即可解决。\n\n## 对象更改检测注意事项\n\nVue不能检测对象的属性的添加与删减。\n\n```js\nvar box = new Vue({\n    data:{\n        a:1 //是响应式\n    }\n})\n\nbox1.b = 2; //不是响应式\n```\n\n对于已经创建实例Vue不能动态的添加根级别的响应式属性。但是可以通过 `Vue.set(obj,key,value)`方法向对象添加响应式属性。\n\n```js\nvar vm = new Vue({\n    data:{\n        userProfile:{\n            name:\"hbb\"\n        }\n    }\n})\n```\n\n可以向里面添加age属性镶嵌到userProfile对象:\n\n`Vue.set(vm.userProfile,'age',27)`;\n\n\n`vm.$set` 实例方法，它只是全局 `Vue.set` 的别名；\n\n`this.$set(vm.userProfile,'age',27)`;\n\n```html\n<ul id=\"vm\">\n    <li v-for=\"item in userProfile\" :key=\"item.id\">{{item}}</li>\n</ul>\n```\n\n```js\nvar vm = new Vue({\n    el:\"#vm\",\n    data:{\n        userProfile:{\n            name:\"hbb\"\n        }\n    }\n});\nVue.set(vm.userProfile,'age','27');\n```\n\nhbb\n27\n\n如果想要对已有的对象赋予多个属性，比如使用`Object.assign()`或者`_.extend()`。\n\n```js\nthis.userProfile = Object.assign({},this.userProfile ,{ leg:\"long\", eye:\"big\" })；\n```\n\n## 显示过滤或排序的效果\n\n有时候我们想要显示一个数组的过滤或者排序的副本 而不改变原数据，可以使用methods方法。\n\n```html\n<ul id=\"box7\">\n    <li v-for=\"n in even(num)\" :key=\"n.id\">{{n}}</li>\n</ul>\n```\n\n```js\nvar box7 = new Vue({\n    el:\"#box7\",\n    data:{\n        num:[1,2,3,4,5,6,7,8,9]\n    },\n    methods:{\n        even:(num)=>{\n            return num.filter(function (num) {\n                  return num%2===0;\n            })\n        }\n    }\n});\n```\n\n2\n4\n6\n8\n \n\n## 一段取值范围的v-for\n\n```html\n<ul id=\"box8\">\n    <li v-for=\"n in 10\" :key=\"n.id\">{{n}}</li>\n</ul>\n```\n\nvar box8 = new Vue({\n    el:\"#box8\",\n    data:{\n    },\n});\n```\n\n```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n \n\n## 一个组件的v-for\n\n```html\n<div id=\"todo-list\">\n    <input type=\"text\" placeholder=\"Add a todo\" v-model=\"newTodoText\" v-on:keyup.enter=\"addNewTodo\">\n    <ul>\n        <li is=\"todo-item\" v-for=\"(todo,index) in todos\" v-bind:key=\"todo.id\" v-bind:title=\"todo.title\" v-on:remove=\"todos.splice(index,1)\"></li>\n    </ul>\n</div>\n```\n\n```js\nVue.component(\"todo-item\",{\n        template:'<li>{{title}}<button v-on:click=\"$emit(\\'remove\\')\">X</button></li>',\n        props:[\"title\"]\n    });\nnew Vue({\n    el:\"#todo-list\",\n    data:{\n        newTodoText:'',\n        todos:[\n            {\n                id:1,\n                title:\"Do the dishes\"\n            },\n            {\n                id:2,\n                title:\"Take out the trash\"\n            },\n            {\n                id:3,\n                title:\"Mow the lawn\"\n            }\n        ],\n        nextTodoId:4\n    },\n    methods:{\n        addNewTodo(){\n            this.todos.push({\n                id:this.nextTodoId++,\n                title:this.newTodoText\n            });\n            this.newTodoText = \"\"\n        }\n    }\n})\n```\n\n备忘录\n\nAdd a todo\n\n[点击查看](http://www.hbbaly.com/wp-content/themes/blog/case/memo.html)\n\n","source":"_posts/vue-4.md","raw":"---\ntitle: Vue.js进阶\ncomments: true\ndescription: Vue.js基础知识\ntags: \"Vue\"\ncategories: \"Vue\"\nkeywords: vue, Vue.js \ndate: 2017-07-20 12:23:10\n---\n\n## v-for把一个数组对应为一组元素\n\nv-for指令需要使用`item in items`。`items`是源数据组，`item`是数组元素迭代的别名。 `item in items`中的`in`可以换成`of`。\n\n```html\n<ul id=\"box1\">\n    <li v-for=\"item in items\">{{item}}</li>\n</ul>\n```\n\n```js\nvar box1 = new Vue({\n    el:\"#box1\",\n    data:{\n        items:[\n            {电脑:\"10000\"},\n            {手机:\"5000\"},\n            {自行车:\"20000\"}\n        ]\n    }\n});\n```\n\n渲染结果\n\n{ \"电脑\": \"10000\" }\n{ \"手机\": \"5000\" }\n{ \"自行车\": \"20000\" }\n\nv-for还支持第二个参数作为当前项的索引。\n\n```html\nul id=\"box2\">\n    <li v-for=\"(item,index) of items\">{{item}}----{{index}}</li>\n</ul>\n```\n\n```js\nvar box2 = new Vue({\n    el:\"#box2\",\n    data:{\n        items:[\n            {电脑:\"10000\"},\n            {手机:\"5000\"},\n            {自行车:\"2000\"}\n        ]\n    }\n});\n```\n\n{ \"电脑\": \"10000\" }----0\n{ \"手机\": \"5000\" }----1\n{ \"自行车\": \"2000\" }----2\n \n\n## 一个对象的v-for\n\n```html\n<ul id=\"box3\">\n    <li v-for=\"item in items\">{{item}}</li>\n</ul>\n```\n\n```js\nvar box3 = new Vue({\n    el:\"#box3\",\n    data:{\n        items:{\n            电脑:\"10000\",\n            手机:\"5000\",\n            自行车:\"2000\"\n        }\n    }\n});\n```\n\n10000\n5000\n2000\n \n第二个参数为参数的键名。\n\n```html\n<ul id=\"box4\">\n    <li v-for=\"(item,key) in items\">{{key}}---{{item}}</li>\n</ul>\n```\n\n```js\nvar box4 = new Vue({\n    el:\"#box4\",\n    data:{\n        items:{\n            电脑:\"10000\",\n            手机:\"5000\",\n            自行车:\"2000\"\n        }\n    }\n});\n```\n\n电脑---10000\n手机---5000\n自行车---2000\n \n\n第三个参数为索引值：\n\n```html\n<ul id=\"box5\">\n    <li v-for=\"(item,key,index) in items\" :key=\"item.id\">{{index}}---{{key}}---{{item}}</li>\n</ul>\n```\n\n```js\nvar box5 = new Vue({\n    el:\"#box5\",\n    data:{\n        items:{\n            电脑:\"10000\",\n            手机:\"5000\",\n            自行车:\"2000\"\n        }\n    }\n});\n```\n\n0---电脑---10000\n1---手机---5000\n2---自行车---2000\n \n\n## 数组更新检测\n\nVue包含一组观察数组变异的方法，所以他们也将会触发视图更新。\n\n```\npush()\npop()\nshift()\nunshift()\nsplice()\nsort()\nreverse()\n```\n\n\n### 替换数组\n\n变异方法 (mutation method)，会改变被这些方法调用的原始数组。相比之下，也有非变异 (non-mutating method) 方法， 例如：`filter()`, `concat()` 和 `slice()` 。这些不会改变原始数组，但总是返回一个新数组。当使用非变异方法时，可以用新数组替换旧数组。\n\n### 注意事项\n\nVue不能检测以下变动的数组。\n\n1.利用索引值设置一个项的时候，例如：\n\n`box1.items[indexOfItem] = newValue `\n\n解决的办法：\n\n`Vue.set(box1.items, indexOfItem, newValue)`\n\n或者是`box1.items.splice(indexOfItem,\n\nnewValue)`；这两种方法都可以。\n\n2.修改数组的长度`box1.items.length = newLength`\n\n`box1.items.splice(newLength)`;即可解决。\n\n## 对象更改检测注意事项\n\nVue不能检测对象的属性的添加与删减。\n\n```js\nvar box = new Vue({\n    data:{\n        a:1 //是响应式\n    }\n})\n\nbox1.b = 2; //不是响应式\n```\n\n对于已经创建实例Vue不能动态的添加根级别的响应式属性。但是可以通过 `Vue.set(obj,key,value)`方法向对象添加响应式属性。\n\n```js\nvar vm = new Vue({\n    data:{\n        userProfile:{\n            name:\"hbb\"\n        }\n    }\n})\n```\n\n可以向里面添加age属性镶嵌到userProfile对象:\n\n`Vue.set(vm.userProfile,'age',27)`;\n\n\n`vm.$set` 实例方法，它只是全局 `Vue.set` 的别名；\n\n`this.$set(vm.userProfile,'age',27)`;\n\n```html\n<ul id=\"vm\">\n    <li v-for=\"item in userProfile\" :key=\"item.id\">{{item}}</li>\n</ul>\n```\n\n```js\nvar vm = new Vue({\n    el:\"#vm\",\n    data:{\n        userProfile:{\n            name:\"hbb\"\n        }\n    }\n});\nVue.set(vm.userProfile,'age','27');\n```\n\nhbb\n27\n\n如果想要对已有的对象赋予多个属性，比如使用`Object.assign()`或者`_.extend()`。\n\n```js\nthis.userProfile = Object.assign({},this.userProfile ,{ leg:\"long\", eye:\"big\" })；\n```\n\n## 显示过滤或排序的效果\n\n有时候我们想要显示一个数组的过滤或者排序的副本 而不改变原数据，可以使用methods方法。\n\n```html\n<ul id=\"box7\">\n    <li v-for=\"n in even(num)\" :key=\"n.id\">{{n}}</li>\n</ul>\n```\n\n```js\nvar box7 = new Vue({\n    el:\"#box7\",\n    data:{\n        num:[1,2,3,4,5,6,7,8,9]\n    },\n    methods:{\n        even:(num)=>{\n            return num.filter(function (num) {\n                  return num%2===0;\n            })\n        }\n    }\n});\n```\n\n2\n4\n6\n8\n \n\n## 一段取值范围的v-for\n\n```html\n<ul id=\"box8\">\n    <li v-for=\"n in 10\" :key=\"n.id\">{{n}}</li>\n</ul>\n```\n\nvar box8 = new Vue({\n    el:\"#box8\",\n    data:{\n    },\n});\n```\n\n```\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n \n\n## 一个组件的v-for\n\n```html\n<div id=\"todo-list\">\n    <input type=\"text\" placeholder=\"Add a todo\" v-model=\"newTodoText\" v-on:keyup.enter=\"addNewTodo\">\n    <ul>\n        <li is=\"todo-item\" v-for=\"(todo,index) in todos\" v-bind:key=\"todo.id\" v-bind:title=\"todo.title\" v-on:remove=\"todos.splice(index,1)\"></li>\n    </ul>\n</div>\n```\n\n```js\nVue.component(\"todo-item\",{\n        template:'<li>{{title}}<button v-on:click=\"$emit(\\'remove\\')\">X</button></li>',\n        props:[\"title\"]\n    });\nnew Vue({\n    el:\"#todo-list\",\n    data:{\n        newTodoText:'',\n        todos:[\n            {\n                id:1,\n                title:\"Do the dishes\"\n            },\n            {\n                id:2,\n                title:\"Take out the trash\"\n            },\n            {\n                id:3,\n                title:\"Mow the lawn\"\n            }\n        ],\n        nextTodoId:4\n    },\n    methods:{\n        addNewTodo(){\n            this.todos.push({\n                id:this.nextTodoId++,\n                title:this.newTodoText\n            });\n            this.newTodoText = \"\"\n        }\n    }\n})\n```\n\n备忘录\n\nAdd a todo\n\n[点击查看](http://www.hbbaly.com/wp-content/themes/blog/case/memo.html)\n\n","slug":"vue-4","published":1,"updated":"2019-10-13T14:03:00.385Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2ak002kn0b9mbr8zxqm","content":"<h2 id=\"v-for把一个数组对应为一组元素\"><a href=\"#v-for把一个数组对应为一组元素\" class=\"headerlink\" title=\"v-for把一个数组对应为一组元素\"></a>v-for把一个数组对应为一组元素</h2><p>v-for指令需要使用<code>item in items</code>。<code>items</code>是源数据组，<code>item</code>是数组元素迭代的别名。 <code>item in items</code>中的<code>in</code>可以换成<code>of</code>。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box1\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in items\"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box1 = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box1\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        items:[</span><br><span class=\"line\">            &#123;电脑:<span class=\"string\">\"10000\"</span>&#125;,</span><br><span class=\"line\">            &#123;手机:<span class=\"string\">\"5000\"</span>&#125;,</span><br><span class=\"line\">            &#123;自行车:<span class=\"string\">\"20000\"</span>&#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>渲染结果</p>\n<p>{ “电脑”: “10000” }<br>{ “手机”: “5000” }<br>{ “自行车”: “20000” }</p>\n<p>v-for还支持第二个参数作为当前项的索引。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ul id=\"box2\"&gt;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item,index) of items\"</span>&gt;</span>&#123;&#123;item&#125;&#125;----&#123;&#123;index&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box2 = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box2\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        items:[</span><br><span class=\"line\">            &#123;电脑:<span class=\"string\">\"10000\"</span>&#125;,</span><br><span class=\"line\">            &#123;手机:<span class=\"string\">\"5000\"</span>&#125;,</span><br><span class=\"line\">            &#123;自行车:<span class=\"string\">\"2000\"</span>&#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>{ “电脑”: “10000” }—-0<br>{ “手机”: “5000” }—-1<br>{ “自行车”: “2000” }—-2</p>\n<h2 id=\"一个对象的v-for\"><a href=\"#一个对象的v-for\" class=\"headerlink\" title=\"一个对象的v-for\"></a>一个对象的v-for</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box3\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in items\"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box3 = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box3\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        items:&#123;</span><br><span class=\"line\">            电脑:<span class=\"string\">\"10000\"</span>,</span><br><span class=\"line\">            手机:<span class=\"string\">\"5000\"</span>,</span><br><span class=\"line\">            自行车:<span class=\"string\">\"2000\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>10000<br>5000<br>2000</p>\n<p>第二个参数为参数的键名。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box4\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item,key) in items\"</span>&gt;</span>&#123;&#123;key&#125;&#125;---&#123;&#123;item&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box4 = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box4\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        items:&#123;</span><br><span class=\"line\">            电脑:<span class=\"string\">\"10000\"</span>,</span><br><span class=\"line\">            手机:<span class=\"string\">\"5000\"</span>,</span><br><span class=\"line\">            自行车:<span class=\"string\">\"2000\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>电脑—10000<br>手机—5000<br>自行车—2000</p>\n<p>第三个参数为索引值：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box5\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item,key,index) in items\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"item.id\"</span>&gt;</span>&#123;&#123;index&#125;&#125;---&#123;&#123;key&#125;&#125;---&#123;&#123;item&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box5 = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box5\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        items:&#123;</span><br><span class=\"line\">            电脑:<span class=\"string\">\"10000\"</span>,</span><br><span class=\"line\">            手机:<span class=\"string\">\"5000\"</span>,</span><br><span class=\"line\">            自行车:<span class=\"string\">\"2000\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>0—电脑—10000<br>1—手机—5000<br>2—自行车—2000</p>\n<h2 id=\"数组更新检测\"><a href=\"#数组更新检测\" class=\"headerlink\" title=\"数组更新检测\"></a>数组更新检测</h2><p>Vue包含一组观察数组变异的方法，所以他们也将会触发视图更新。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">push()</span><br><span class=\"line\">pop()</span><br><span class=\"line\">shift()</span><br><span class=\"line\">unshift()</span><br><span class=\"line\">splice()</span><br><span class=\"line\">sort()</span><br><span class=\"line\">reverse()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"替换数组\"><a href=\"#替换数组\" class=\"headerlink\" title=\"替换数组\"></a>替换数组</h3><p>变异方法 (mutation method)，会改变被这些方法调用的原始数组。相比之下，也有非变异 (non-mutating method) 方法， 例如：<code>filter()</code>, <code>concat()</code> 和 <code>slice()</code> 。这些不会改变原始数组，但总是返回一个新数组。当使用非变异方法时，可以用新数组替换旧数组。</p>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>Vue不能检测以下变动的数组。</p>\n<p>1.利用索引值设置一个项的时候，例如：</p>\n<p><code>box1.items[indexOfItem] = newValue</code></p>\n<p>解决的办法：</p>\n<p><code>Vue.set(box1.items, indexOfItem, newValue)</code></p>\n<p>或者是`box1.items.splice(indexOfItem,</p>\n<p>newValue)`；这两种方法都可以。</p>\n<p>2.修改数组的长度<code>box1.items.length = newLength</code></p>\n<p><code>box1.items.splice(newLength)</code>;即可解决。</p>\n<h2 id=\"对象更改检测注意事项\"><a href=\"#对象更改检测注意事项\" class=\"headerlink\" title=\"对象更改检测注意事项\"></a>对象更改检测注意事项</h2><p>Vue不能检测对象的属性的添加与删减。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        a:<span class=\"number\">1</span> <span class=\"comment\">//是响应式</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">box1.b = <span class=\"number\">2</span>; <span class=\"comment\">//不是响应式</span></span><br></pre></td></tr></table></figure>\n\n<p>对于已经创建实例Vue不能动态的添加根级别的响应式属性。但是可以通过 <code>Vue.set(obj,key,value)</code>方法向对象添加响应式属性。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        userProfile:&#123;</span><br><span class=\"line\">            name:<span class=\"string\">\"hbb\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>可以向里面添加age属性镶嵌到userProfile对象:</p>\n<p><code>Vue.set(vm.userProfile,&#39;age&#39;,27)</code>;</p>\n<p><code>vm.$set</code> 实例方法，它只是全局 <code>Vue.set</code> 的别名；</p>\n<p><code>this.$set(vm.userProfile,&#39;age&#39;,27)</code>;</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"vm\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in userProfile\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"item.id\"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#vm\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        userProfile:&#123;</span><br><span class=\"line\">            name:<span class=\"string\">\"hbb\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">Vue.set(vm.userProfile,<span class=\"string\">'age'</span>,<span class=\"string\">'27'</span>);</span><br></pre></td></tr></table></figure>\n\n<p>hbb<br>27</p>\n<p>如果想要对已有的对象赋予多个属性，比如使用<code>Object.assign()</code>或者<code>_.extend()</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.userProfile = <span class=\"built_in\">Object</span>.assign(&#123;&#125;,<span class=\"keyword\">this</span>.userProfile ,&#123; <span class=\"attr\">leg</span>:<span class=\"string\">\"long\"</span>, <span class=\"attr\">eye</span>:<span class=\"string\">\"big\"</span> &#125;)；</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"显示过滤或排序的效果\"><a href=\"#显示过滤或排序的效果\" class=\"headerlink\" title=\"显示过滤或排序的效果\"></a>显示过滤或排序的效果</h2><p>有时候我们想要显示一个数组的过滤或者排序的副本 而不改变原数据，可以使用methods方法。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box7\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"n in even(num)\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"n.id\"</span>&gt;</span>&#123;&#123;n&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box7 = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box7\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        num:[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods:&#123;</span><br><span class=\"line\">        even:<span class=\"function\">(<span class=\"params\">num</span>)=&gt;</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> num.filter(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">num</span>) </span>&#123;</span><br><span class=\"line\">                  <span class=\"keyword\">return</span> num%<span class=\"number\">2</span>===<span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>2<br>4<br>6<br>8</p>\n<h2 id=\"一段取值范围的v-for\"><a href=\"#一段取值范围的v-for\" class=\"headerlink\" title=\"一段取值范围的v-for\"></a>一段取值范围的v-for</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"n in 10\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"n.id\"</span>&gt;</span>&#123;&#123;n&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>var box8 = new Vue({<br>    el:”#box8”,<br>    data:{<br>    },<br>});</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10</p>\n<h2 id=\"一个组件的v-for\"><a href=\"#一个组件的v-for\" class=\"headerlink\" title=\"一个组件的v-for\"></a>一个组件的v-for</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"todo-list\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Add a todo\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"newTodoText\"</span> <span class=\"attr\">v-on:keyup.enter</span>=<span class=\"string\">\"addNewTodo\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">is</span>=<span class=\"string\">\"todo-item\"</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(todo,index) in todos\"</span> <span class=\"attr\">v-bind:key</span>=<span class=\"string\">\"todo.id\"</span> <span class=\"attr\">v-bind:title</span>=<span class=\"string\">\"todo.title\"</span> <span class=\"attr\">v-on:remove</span>=<span class=\"string\">\"todos.splice(index,1)\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">\"todo-item\"</span>,&#123;</span><br><span class=\"line\">        template:<span class=\"string\">'&lt;li&gt;&#123;&#123;title&#125;&#125;&lt;button v-on:click=\"$emit(\\'remove\\')\"&gt;X&lt;/button&gt;&lt;/li&gt;'</span>,</span><br><span class=\"line\">        props:[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#todo-list\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        newTodoText:<span class=\"string\">''</span>,</span><br><span class=\"line\">        todos:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                id:<span class=\"number\">1</span>,</span><br><span class=\"line\">                title:<span class=\"string\">\"Do the dishes\"</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                id:<span class=\"number\">2</span>,</span><br><span class=\"line\">                title:<span class=\"string\">\"Take out the trash\"</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                id:<span class=\"number\">3</span>,</span><br><span class=\"line\">                title:<span class=\"string\">\"Mow the lawn\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        nextTodoId:<span class=\"number\">4</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods:&#123;</span><br><span class=\"line\">        addNewTodo()&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.todos.push(&#123;</span><br><span class=\"line\">                id:<span class=\"keyword\">this</span>.nextTodoId++,</span><br><span class=\"line\">                title:<span class=\"keyword\">this</span>.newTodoText</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.newTodoText = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>备忘录</p>\n<p>Add a todo</p>\n<p><a href=\"http://www.hbbaly.com/wp-content/themes/blog/case/memo.html\" target=\"_blank\" rel=\"noopener\">点击查看</a></p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<h2 id=\"v-for把一个数组对应为一组元素\"><a href=\"#v-for把一个数组对应为一组元素\" class=\"headerlink\" title=\"v-for把一个数组对应为一组元素\"></a>v-for把一个数组对应为一组元素</h2><p>v-for指令需要使用<code>item in items</code>。<code>items</code>是源数据组，<code>item</code>是数组元素迭代的别名。 <code>item in items</code>中的<code>in</code>可以换成<code>of</code>。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box1\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in items\"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box1 = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box1\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        items:[</span><br><span class=\"line\">            &#123;电脑:<span class=\"string\">\"10000\"</span>&#125;,</span><br><span class=\"line\">            &#123;手机:<span class=\"string\">\"5000\"</span>&#125;,</span><br><span class=\"line\">            &#123;自行车:<span class=\"string\">\"20000\"</span>&#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>渲染结果</p>\n<p>{ “电脑”: “10000” }<br>{ “手机”: “5000” }<br>{ “自行车”: “20000” }</p>\n<p>v-for还支持第二个参数作为当前项的索引。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ul id=\"box2\"&gt;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item,index) of items\"</span>&gt;</span>&#123;&#123;item&#125;&#125;----&#123;&#123;index&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box2 = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box2\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        items:[</span><br><span class=\"line\">            &#123;电脑:<span class=\"string\">\"10000\"</span>&#125;,</span><br><span class=\"line\">            &#123;手机:<span class=\"string\">\"5000\"</span>&#125;,</span><br><span class=\"line\">            &#123;自行车:<span class=\"string\">\"2000\"</span>&#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>{ “电脑”: “10000” }—-0<br>{ “手机”: “5000” }—-1<br>{ “自行车”: “2000” }—-2</p>\n<h2 id=\"一个对象的v-for\"><a href=\"#一个对象的v-for\" class=\"headerlink\" title=\"一个对象的v-for\"></a>一个对象的v-for</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box3\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in items\"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box3 = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box3\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        items:&#123;</span><br><span class=\"line\">            电脑:<span class=\"string\">\"10000\"</span>,</span><br><span class=\"line\">            手机:<span class=\"string\">\"5000\"</span>,</span><br><span class=\"line\">            自行车:<span class=\"string\">\"2000\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>10000<br>5000<br>2000</p>\n<p>第二个参数为参数的键名。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box4\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item,key) in items\"</span>&gt;</span>&#123;&#123;key&#125;&#125;---&#123;&#123;item&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box4 = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box4\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        items:&#123;</span><br><span class=\"line\">            电脑:<span class=\"string\">\"10000\"</span>,</span><br><span class=\"line\">            手机:<span class=\"string\">\"5000\"</span>,</span><br><span class=\"line\">            自行车:<span class=\"string\">\"2000\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>电脑—10000<br>手机—5000<br>自行车—2000</p>\n<p>第三个参数为索引值：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box5\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(item,key,index) in items\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"item.id\"</span>&gt;</span>&#123;&#123;index&#125;&#125;---&#123;&#123;key&#125;&#125;---&#123;&#123;item&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box5 = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box5\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        items:&#123;</span><br><span class=\"line\">            电脑:<span class=\"string\">\"10000\"</span>,</span><br><span class=\"line\">            手机:<span class=\"string\">\"5000\"</span>,</span><br><span class=\"line\">            自行车:<span class=\"string\">\"2000\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>0—电脑—10000<br>1—手机—5000<br>2—自行车—2000</p>\n<h2 id=\"数组更新检测\"><a href=\"#数组更新检测\" class=\"headerlink\" title=\"数组更新检测\"></a>数组更新检测</h2><p>Vue包含一组观察数组变异的方法，所以他们也将会触发视图更新。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">push()</span><br><span class=\"line\">pop()</span><br><span class=\"line\">shift()</span><br><span class=\"line\">unshift()</span><br><span class=\"line\">splice()</span><br><span class=\"line\">sort()</span><br><span class=\"line\">reverse()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"替换数组\"><a href=\"#替换数组\" class=\"headerlink\" title=\"替换数组\"></a>替换数组</h3><p>变异方法 (mutation method)，会改变被这些方法调用的原始数组。相比之下，也有非变异 (non-mutating method) 方法， 例如：<code>filter()</code>, <code>concat()</code> 和 <code>slice()</code> 。这些不会改变原始数组，但总是返回一个新数组。当使用非变异方法时，可以用新数组替换旧数组。</p>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>Vue不能检测以下变动的数组。</p>\n<p>1.利用索引值设置一个项的时候，例如：</p>\n<p><code>box1.items[indexOfItem] = newValue</code></p>\n<p>解决的办法：</p>\n<p><code>Vue.set(box1.items, indexOfItem, newValue)</code></p>\n<p>或者是`box1.items.splice(indexOfItem,</p>\n<p>newValue)`；这两种方法都可以。</p>\n<p>2.修改数组的长度<code>box1.items.length = newLength</code></p>\n<p><code>box1.items.splice(newLength)</code>;即可解决。</p>\n<h2 id=\"对象更改检测注意事项\"><a href=\"#对象更改检测注意事项\" class=\"headerlink\" title=\"对象更改检测注意事项\"></a>对象更改检测注意事项</h2><p>Vue不能检测对象的属性的添加与删减。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        a:<span class=\"number\">1</span> <span class=\"comment\">//是响应式</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">box1.b = <span class=\"number\">2</span>; <span class=\"comment\">//不是响应式</span></span><br></pre></td></tr></table></figure>\n\n<p>对于已经创建实例Vue不能动态的添加根级别的响应式属性。但是可以通过 <code>Vue.set(obj,key,value)</code>方法向对象添加响应式属性。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        userProfile:&#123;</span><br><span class=\"line\">            name:<span class=\"string\">\"hbb\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>可以向里面添加age属性镶嵌到userProfile对象:</p>\n<p><code>Vue.set(vm.userProfile,&#39;age&#39;,27)</code>;</p>\n<p><code>vm.$set</code> 实例方法，它只是全局 <code>Vue.set</code> 的别名；</p>\n<p><code>this.$set(vm.userProfile,&#39;age&#39;,27)</code>;</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"vm\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"item in userProfile\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"item.id\"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#vm\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        userProfile:&#123;</span><br><span class=\"line\">            name:<span class=\"string\">\"hbb\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">Vue.set(vm.userProfile,<span class=\"string\">'age'</span>,<span class=\"string\">'27'</span>);</span><br></pre></td></tr></table></figure>\n\n<p>hbb<br>27</p>\n<p>如果想要对已有的对象赋予多个属性，比如使用<code>Object.assign()</code>或者<code>_.extend()</code>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.userProfile = <span class=\"built_in\">Object</span>.assign(&#123;&#125;,<span class=\"keyword\">this</span>.userProfile ,&#123; <span class=\"attr\">leg</span>:<span class=\"string\">\"long\"</span>, <span class=\"attr\">eye</span>:<span class=\"string\">\"big\"</span> &#125;)；</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"显示过滤或排序的效果\"><a href=\"#显示过滤或排序的效果\" class=\"headerlink\" title=\"显示过滤或排序的效果\"></a>显示过滤或排序的效果</h2><p>有时候我们想要显示一个数组的过滤或者排序的副本 而不改变原数据，可以使用methods方法。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box7\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"n in even(num)\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"n.id\"</span>&gt;</span>&#123;&#123;n&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> box7 = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#box7\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        num:[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods:&#123;</span><br><span class=\"line\">        even:<span class=\"function\">(<span class=\"params\">num</span>)=&gt;</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> num.filter(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">num</span>) </span>&#123;</span><br><span class=\"line\">                  <span class=\"keyword\">return</span> num%<span class=\"number\">2</span>===<span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>2<br>4<br>6<br>8</p>\n<h2 id=\"一段取值范围的v-for\"><a href=\"#一段取值范围的v-for\" class=\"headerlink\" title=\"一段取值范围的v-for\"></a>一段取值范围的v-for</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"n in 10\"</span> <span class=\"attr\">:key</span>=<span class=\"string\">\"n.id\"</span>&gt;</span>&#123;&#123;n&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>var box8 = new Vue({<br>    el:”#box8”,<br>    data:{<br>    },<br>});</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10</p>\n<h2 id=\"一个组件的v-for\"><a href=\"#一个组件的v-for\" class=\"headerlink\" title=\"一个组件的v-for\"></a>一个组件的v-for</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"todo-list\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Add a todo\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"newTodoText\"</span> <span class=\"attr\">v-on:keyup.enter</span>=<span class=\"string\">\"addNewTodo\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">is</span>=<span class=\"string\">\"todo-item\"</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(todo,index) in todos\"</span> <span class=\"attr\">v-bind:key</span>=<span class=\"string\">\"todo.id\"</span> <span class=\"attr\">v-bind:title</span>=<span class=\"string\">\"todo.title\"</span> <span class=\"attr\">v-on:remove</span>=<span class=\"string\">\"todos.splice(index,1)\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">\"todo-item\"</span>,&#123;</span><br><span class=\"line\">        template:<span class=\"string\">'&lt;li&gt;&#123;&#123;title&#125;&#125;&lt;button v-on:click=\"$emit(\\'remove\\')\"&gt;X&lt;/button&gt;&lt;/li&gt;'</span>,</span><br><span class=\"line\">        props:[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">    el:<span class=\"string\">\"#todo-list\"</span>,</span><br><span class=\"line\">    data:&#123;</span><br><span class=\"line\">        newTodoText:<span class=\"string\">''</span>,</span><br><span class=\"line\">        todos:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                id:<span class=\"number\">1</span>,</span><br><span class=\"line\">                title:<span class=\"string\">\"Do the dishes\"</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                id:<span class=\"number\">2</span>,</span><br><span class=\"line\">                title:<span class=\"string\">\"Take out the trash\"</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                id:<span class=\"number\">3</span>,</span><br><span class=\"line\">                title:<span class=\"string\">\"Mow the lawn\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        nextTodoId:<span class=\"number\">4</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods:&#123;</span><br><span class=\"line\">        addNewTodo()&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.todos.push(&#123;</span><br><span class=\"line\">                id:<span class=\"keyword\">this</span>.nextTodoId++,</span><br><span class=\"line\">                title:<span class=\"keyword\">this</span>.newTodoText</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.newTodoText = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>备忘录</p>\n<p>Add a todo</p>\n<p><a href=\"http://www.hbbaly.com/wp-content/themes/blog/case/memo.html\" target=\"_blank\" rel=\"noopener\">点击查看</a></p>\n"},{"title":"父组件与子组件的通信","comments":1,"description":"Vue.js基础知识","keywords":"vue, Vue.js","date":"2017-07-25T01:58:40.000Z","_content":"\n## 父组件向子组件传递参数\n\n### 配置路由\n\n首先在`components`文件夹内创建一个`child.vue`文件,并且修改`router`文件夹内的`index.js`文件：\n\n首先引入`child.vue`组件，之后配置路由\n\n```js\nimport Vue from 'vue'\nimport Router from 'vue-router'\nimport HelloWorld from '@/components/HelloWorld'\nimport Child1 from '@/components/child'    //引入child.vue\nVue.use(Router)\nexport default new Router({\nroutes: [\n    {\n        path: '/',\n        name: 'HelloWorld',\n        component: HelloWorld,\n    },\n    {                    //配置路由\n       path:'/child',\n       name:'child',\n       component:Child1\n    }\n]\n})\n```\n\n### 编辑child.vue\n\n```html\n<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n  </div>\n</template>\n```\n\n```js\n<script>\nexport default {\n  name: 'child',\n  props:['msg'],    //父组件向子组件传递\n  data () {\n    return {\n    }\n  },\n}\n</script>\n```\n### 编辑父组件\n\n```html\n<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <Child :msg='msg'></Child>\n  </div>\n</template>\n```\n\n```js\n<script>\nimport Child from './child'\nexport default {\n  name: 'HelloWorld',\n  components:{\n    Child\n  },\n  data () {\n    return {\n      msg: 'Welcome to Your Vue.js App',\n    }\n  }\n}\n</script>\n```\n\n## 子组件向父组件通信\n\n通过`$emit`传递父组件数据，一般都是以事件来作为介质。\n\n```html\n<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <h2>{{b}}</h2>\n    <button @click=\"sendMsgToParent\">发送消息</button>     //点击事件\n  </div>\n</template>\n```\n\n```js\n<script>\nexport default {\n  name: 'child',\n  props:['msg'],\n  data () {\n    return {\n      b: 'i am is child'\n    }\n  },\n  methods:{\n    sendMsgToParent(){\n      this.$emit('listenToChildrenEvents','this msg from child')   //通过emit 来触发一个自定义事件，并传递一个参数’'this msg from child'\n    }\n  }\n}\n</script>\n```\n\n在父组件中监听该自定义事件并添加一个响应该事件的处理方法\n\n```html\n<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    {{a}}\n    <h2>Essential Links</h2>\n    <h2>Ecosystem</h2>\n    <Child :msg='msg' @listenToChildrenEvents='showMsgFromChild'></Child>   //监听listenToChildrenEvents ，\n  </div>\n</template>\n```\n\n```js\n<script>\nimport Child from './child'\nexport default {\n  name: 'HelloWorld',\n  components:{\n    Child\n  },\n  data () {\n    return {\n      msg: 'Welcome to Your Vue.js App',\n      a:\"aaaaaaaaa\"\n    }\n  },\n  methods:{\n    showMsgFromChild(val){\n      this.a = val\n    }\n  }\n}\n</script>\n```\n这个时候点击发送消息，`aaaaaaaaa`   变为 `this msg from child`。\n\n父组件向子组件传递数据使用props，子组件向父组件传递一般使用emit触发事件来进行传递。\n\n\n## 使用vuex\n\n使用不论父传子还是子传父都可以使用\n\n## event bus 来传递\n\n  不推荐使用\n\n\n\n\n\n\n\n","source":"_posts/vue-5.md","raw":"---\ntitle: 父组件与子组件的通信\ncomments: true\ndescription: Vue.js基础知识\ntags: \"Vue\"\ncategories: \"Vue\"\nkeywords: vue, Vue.js \ndate: 2017-07-25 09:58:40\n---\n\n## 父组件向子组件传递参数\n\n### 配置路由\n\n首先在`components`文件夹内创建一个`child.vue`文件,并且修改`router`文件夹内的`index.js`文件：\n\n首先引入`child.vue`组件，之后配置路由\n\n```js\nimport Vue from 'vue'\nimport Router from 'vue-router'\nimport HelloWorld from '@/components/HelloWorld'\nimport Child1 from '@/components/child'    //引入child.vue\nVue.use(Router)\nexport default new Router({\nroutes: [\n    {\n        path: '/',\n        name: 'HelloWorld',\n        component: HelloWorld,\n    },\n    {                    //配置路由\n       path:'/child',\n       name:'child',\n       component:Child1\n    }\n]\n})\n```\n\n### 编辑child.vue\n\n```html\n<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n  </div>\n</template>\n```\n\n```js\n<script>\nexport default {\n  name: 'child',\n  props:['msg'],    //父组件向子组件传递\n  data () {\n    return {\n    }\n  },\n}\n</script>\n```\n### 编辑父组件\n\n```html\n<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <Child :msg='msg'></Child>\n  </div>\n</template>\n```\n\n```js\n<script>\nimport Child from './child'\nexport default {\n  name: 'HelloWorld',\n  components:{\n    Child\n  },\n  data () {\n    return {\n      msg: 'Welcome to Your Vue.js App',\n    }\n  }\n}\n</script>\n```\n\n## 子组件向父组件通信\n\n通过`$emit`传递父组件数据，一般都是以事件来作为介质。\n\n```html\n<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <h2>{{b}}</h2>\n    <button @click=\"sendMsgToParent\">发送消息</button>     //点击事件\n  </div>\n</template>\n```\n\n```js\n<script>\nexport default {\n  name: 'child',\n  props:['msg'],\n  data () {\n    return {\n      b: 'i am is child'\n    }\n  },\n  methods:{\n    sendMsgToParent(){\n      this.$emit('listenToChildrenEvents','this msg from child')   //通过emit 来触发一个自定义事件，并传递一个参数’'this msg from child'\n    }\n  }\n}\n</script>\n```\n\n在父组件中监听该自定义事件并添加一个响应该事件的处理方法\n\n```html\n<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    {{a}}\n    <h2>Essential Links</h2>\n    <h2>Ecosystem</h2>\n    <Child :msg='msg' @listenToChildrenEvents='showMsgFromChild'></Child>   //监听listenToChildrenEvents ，\n  </div>\n</template>\n```\n\n```js\n<script>\nimport Child from './child'\nexport default {\n  name: 'HelloWorld',\n  components:{\n    Child\n  },\n  data () {\n    return {\n      msg: 'Welcome to Your Vue.js App',\n      a:\"aaaaaaaaa\"\n    }\n  },\n  methods:{\n    showMsgFromChild(val){\n      this.a = val\n    }\n  }\n}\n</script>\n```\n这个时候点击发送消息，`aaaaaaaaa`   变为 `this msg from child`。\n\n父组件向子组件传递数据使用props，子组件向父组件传递一般使用emit触发事件来进行传递。\n\n\n## 使用vuex\n\n使用不论父传子还是子传父都可以使用\n\n## event bus 来传递\n\n  不推荐使用\n\n\n\n\n\n\n\n","slug":"vue-5","published":1,"updated":"2019-10-13T14:14:30.176Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2am002on0b99jx5aem3","content":"<h2 id=\"父组件向子组件传递参数\"><a href=\"#父组件向子组件传递参数\" class=\"headerlink\" title=\"父组件向子组件传递参数\"></a>父组件向子组件传递参数</h2><h3 id=\"配置路由\"><a href=\"#配置路由\" class=\"headerlink\" title=\"配置路由\"></a>配置路由</h3><p>首先在<code>components</code>文件夹内创建一个<code>child.vue</code>文件,并且修改<code>router</code>文件夹内的<code>index.js</code>文件：</p>\n<p>首先引入<code>child.vue</code>组件，之后配置路由</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Router <span class=\"keyword\">from</span> <span class=\"string\">'vue-router'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> HelloWorld <span class=\"keyword\">from</span> <span class=\"string\">'@/components/HelloWorld'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Child1 <span class=\"keyword\">from</span> <span class=\"string\">'@/components/child'</span>    <span class=\"comment\">//引入child.vue</span></span><br><span class=\"line\">Vue.use(Router)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Router(&#123;</span><br><span class=\"line\">routes: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        path: <span class=\"string\">'/'</span>,</span><br><span class=\"line\">        name: <span class=\"string\">'HelloWorld'</span>,</span><br><span class=\"line\">        component: HelloWorld,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;                    <span class=\"comment\">//配置路由</span></span><br><span class=\"line\">       path:<span class=\"string\">'/child'</span>,</span><br><span class=\"line\">       name:<span class=\"string\">'child'</span>,</span><br><span class=\"line\">       component:Child1</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"编辑child-vue\"><a href=\"#编辑child-vue\" class=\"headerlink\" title=\"编辑child.vue\"></a>编辑child.vue</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hello\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'child'</span>,</span><br><span class=\"line\">  props:[<span class=\"string\">'msg'</span>],    <span class=\"comment\">//父组件向子组件传递</span></span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"编辑父组件\"><a href=\"#编辑父组件\" class=\"headerlink\" title=\"编辑父组件\"></a>编辑父组件</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hello\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Child</span> <span class=\"attr\">:msg</span>=<span class=\"string\">'msg'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Child</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Child <span class=\"keyword\">from</span> <span class=\"string\">'./child'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'HelloWorld'</span>,</span><br><span class=\"line\">  components:&#123;</span><br><span class=\"line\">    Child</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      msg: <span class=\"string\">'Welcome to Your Vue.js App'</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"子组件向父组件通信\"><a href=\"#子组件向父组件通信\" class=\"headerlink\" title=\"子组件向父组件通信\"></a>子组件向父组件通信</h2><p>通过<code>$emit</code>传递父组件数据，一般都是以事件来作为介质。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hello\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;b&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"sendMsgToParent\"</span>&gt;</span>发送消息<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span>     //点击事件</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'child'</span>,</span><br><span class=\"line\">  props:[<span class=\"string\">'msg'</span>],</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      b: <span class=\"string\">'i am is child'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods:&#123;</span><br><span class=\"line\">    sendMsgToParent()&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$emit(<span class=\"string\">'listenToChildrenEvents'</span>,<span class=\"string\">'this msg from child'</span>)   <span class=\"comment\">//通过emit 来触发一个自定义事件，并传递一个参数’'this msg from child'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在父组件中监听该自定义事件并添加一个响应该事件的处理方法</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hello\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123;a&#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Essential Links<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Ecosystem<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Child</span> <span class=\"attr\">:msg</span>=<span class=\"string\">'msg'</span> @<span class=\"attr\">listenToChildrenEvents</span>=<span class=\"string\">'showMsgFromChild'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Child</span>&gt;</span>   //监听listenToChildrenEvents ，</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Child <span class=\"keyword\">from</span> <span class=\"string\">'./child'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'HelloWorld'</span>,</span><br><span class=\"line\">  components:&#123;</span><br><span class=\"line\">    Child</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      msg: <span class=\"string\">'Welcome to Your Vue.js App'</span>,</span><br><span class=\"line\">      a:<span class=\"string\">\"aaaaaaaaa\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods:&#123;</span><br><span class=\"line\">    showMsgFromChild(val)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.a = val</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>这个时候点击发送消息，<code>aaaaaaaaa</code>   变为 <code>this msg from child</code>。</p>\n<p>父组件向子组件传递数据使用props，子组件向父组件传递一般使用emit触发事件来进行传递。</p>\n<h2 id=\"使用vuex\"><a href=\"#使用vuex\" class=\"headerlink\" title=\"使用vuex\"></a>使用vuex</h2><p>使用不论父传子还是子传父都可以使用</p>\n<h2 id=\"event-bus-来传递\"><a href=\"#event-bus-来传递\" class=\"headerlink\" title=\"event bus 来传递\"></a>event bus 来传递</h2><p>  不推荐使用</p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<h2 id=\"父组件向子组件传递参数\"><a href=\"#父组件向子组件传递参数\" class=\"headerlink\" title=\"父组件向子组件传递参数\"></a>父组件向子组件传递参数</h2><h3 id=\"配置路由\"><a href=\"#配置路由\" class=\"headerlink\" title=\"配置路由\"></a>配置路由</h3><p>首先在<code>components</code>文件夹内创建一个<code>child.vue</code>文件,并且修改<code>router</code>文件夹内的<code>index.js</code>文件：</p>\n<p>首先引入<code>child.vue</code>组件，之后配置路由</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Router <span class=\"keyword\">from</span> <span class=\"string\">'vue-router'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> HelloWorld <span class=\"keyword\">from</span> <span class=\"string\">'@/components/HelloWorld'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Child1 <span class=\"keyword\">from</span> <span class=\"string\">'@/components/child'</span>    <span class=\"comment\">//引入child.vue</span></span><br><span class=\"line\">Vue.use(Router)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">new</span> Router(&#123;</span><br><span class=\"line\">routes: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        path: <span class=\"string\">'/'</span>,</span><br><span class=\"line\">        name: <span class=\"string\">'HelloWorld'</span>,</span><br><span class=\"line\">        component: HelloWorld,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;                    <span class=\"comment\">//配置路由</span></span><br><span class=\"line\">       path:<span class=\"string\">'/child'</span>,</span><br><span class=\"line\">       name:<span class=\"string\">'child'</span>,</span><br><span class=\"line\">       component:Child1</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"编辑child-vue\"><a href=\"#编辑child-vue\" class=\"headerlink\" title=\"编辑child.vue\"></a>编辑child.vue</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hello\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'child'</span>,</span><br><span class=\"line\">  props:[<span class=\"string\">'msg'</span>],    <span class=\"comment\">//父组件向子组件传递</span></span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"编辑父组件\"><a href=\"#编辑父组件\" class=\"headerlink\" title=\"编辑父组件\"></a>编辑父组件</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hello\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Child</span> <span class=\"attr\">:msg</span>=<span class=\"string\">'msg'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Child</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Child <span class=\"keyword\">from</span> <span class=\"string\">'./child'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'HelloWorld'</span>,</span><br><span class=\"line\">  components:&#123;</span><br><span class=\"line\">    Child</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      msg: <span class=\"string\">'Welcome to Your Vue.js App'</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"子组件向父组件通信\"><a href=\"#子组件向父组件通信\" class=\"headerlink\" title=\"子组件向父组件通信\"></a>子组件向父组件通信</h2><p>通过<code>$emit</code>传递父组件数据，一般都是以事件来作为介质。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hello\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;b&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"sendMsgToParent\"</span>&gt;</span>发送消息<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span>     //点击事件</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'child'</span>,</span><br><span class=\"line\">  props:[<span class=\"string\">'msg'</span>],</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      b: <span class=\"string\">'i am is child'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods:&#123;</span><br><span class=\"line\">    sendMsgToParent()&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$emit(<span class=\"string\">'listenToChildrenEvents'</span>,<span class=\"string\">'this msg from child'</span>)   <span class=\"comment\">//通过emit 来触发一个自定义事件，并传递一个参数’'this msg from child'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在父组件中监听该自定义事件并添加一个响应该事件的处理方法</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hello\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    &#123;&#123;a&#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Essential Links<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>Ecosystem<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Child</span> <span class=\"attr\">:msg</span>=<span class=\"string\">'msg'</span> @<span class=\"attr\">listenToChildrenEvents</span>=<span class=\"string\">'showMsgFromChild'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Child</span>&gt;</span>   //监听listenToChildrenEvents ，</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Child <span class=\"keyword\">from</span> <span class=\"string\">'./child'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'HelloWorld'</span>,</span><br><span class=\"line\">  components:&#123;</span><br><span class=\"line\">    Child</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      msg: <span class=\"string\">'Welcome to Your Vue.js App'</span>,</span><br><span class=\"line\">      a:<span class=\"string\">\"aaaaaaaaa\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods:&#123;</span><br><span class=\"line\">    showMsgFromChild(val)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.a = val</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>这个时候点击发送消息，<code>aaaaaaaaa</code>   变为 <code>this msg from child</code>。</p>\n<p>父组件向子组件传递数据使用props，子组件向父组件传递一般使用emit触发事件来进行传递。</p>\n<h2 id=\"使用vuex\"><a href=\"#使用vuex\" class=\"headerlink\" title=\"使用vuex\"></a>使用vuex</h2><p>使用不论父传子还是子传父都可以使用</p>\n<h2 id=\"event-bus-来传递\"><a href=\"#event-bus-来传递\" class=\"headerlink\" title=\"event bus 来传递\"></a>event bus 来传递</h2><p>  不推荐使用</p>\n"},{"title":"vue中路由守卫","comments":1,"description":"vue中跨域代理","keywords":"vue, Vue.js","date":"2017-07-29T03:58:40.000Z","_content":"\n正如其名，`vue-router` 提供的导航守卫主要用来通过跳转或取消的方式守卫导航。有多种机会植入路由导航过程中：全局的, 单个路由独享的, 或者组件级的。\n\n记住参数或查询的改变并不会触发进入/离开的导航守卫。你可以通过观察 `$route` 对象来应对这些变化，或使用 `beforeRouteUpdate` 的组件内守卫。\n\n## 全局前置守卫\n\n你可以使用 `router.beforeEach` 注册一个全局前置守卫：\n\n```js\nconst router = new VueRouter({ ... })\n\nrouter.beforeEach((to, from, next) => {\n  // ...\n})\n```\n\n当一个导航触发时，全局前置守卫按照创建顺序调用。守卫是异步解析执行，此时导航在所有守卫 `resolve` 完之前一直处于 等待中。\n\n每个守卫方法接收三个参数：\n\n- to: Route: 即将要进入的目标 路由对象\n\n- from: Route: 当前导航正要离开的路由\n\n- next: `Function` 一定要调用该方法来 `resolve` 这个钩子。执行效果依赖 `next` 方法的调用参数。\n\n`next()`: 进行管道中的下一个钩子。如果全部钩子执行完了，则导航的状态就是 `confirmed` (确认的)。\n\n`next(false)`: 中断当前的导航。如果浏览器的 URL 改变了 (可能是用户手动或者浏览器后退按钮)，那么 URL 地址会重置到 from 路由对应的地址。\n\n`next('/')` 或者 `next({ path: '/' })`: 跳转到一个不同的地址。当前的导航被中断，然后进行一个新的导航。你可以向 next 传递任意位置对象，且允许设置诸如 `replace: true、name: 'home'` 之类的选项以及任何用在 `router-link` 的 `to prop` 或 `router.push` 中的选项。\n\n`next(error): (2.4.0+)` 如果传入 next 的参数是一个 `Error` 实例，则导航会被终止且该错误会被传递给 `router.onError()` 注册过的回调。\n\n确保要调用 `next` 方法，否则钩子就不会被 `resolved`。\n\n## 全局解析守卫\n\n2.5.0 新增\n\n在 2.5.0+ 你可以用 `router.beforeResolve` 注册一个全局守卫。这和 `router.beforeEach` 类似，区别是在导航被确认之前，同时在所有组件内守卫和异步路由组件被解析之后，解析守卫就被调用。\n\n## 全局后置钩子\n\n你也可以注册全局后置钩子，然而和守卫不同的是，这些钩子不会接受 `next `函数也不会改变导航本身：\n\n```js\nrouter.afterEach((to, from) => {\n  // ...\n})\n```\n\n## 路由独享的守卫\n\n你可以在路由配置上直接定义 `beforeEnter` 守卫：\n\n```js\nconst router = new VueRouter({\n  routes: [\n    {\n      path: '/foo',\n      component: Foo,\n      beforeEnter: (to, from, next) => {\n        // ...\n      }\n    }\n  ]\n})\n```\n\n这些守卫与全局前置守卫的方法参数是一样的。\n\n## 组件内的守卫\n\n最后，你可以在路由组件内直接定义以下路由导航守卫：\n\n```js\nbeforeRouteEnter\nbeforeRouteUpdate (2.2 新增)\nbeforeRouteLeave\nconst Foo = {\n  template: `...`,\n  beforeRouteEnter (to, from, next) {\n    // 在渲染该组件的对应路由被 confirm 前调用\n    // 不！能！获取组件实例 `this`\n    // 因为当守卫执行前，组件实例还没被创建\n  },\n  beforeRouteUpdate (to, from, next) {\n    // 在当前路由改变，但是该组件被复用时调用\n    // 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，\n    // 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。\n    // 可以访问组件实例 `this`\n  },\n  beforeRouteLeave (to, from, next) {\n    // 导航离开该组件的对应路由时调用\n    // 可以访问组件实例 `this`\n  }\n}\n```\n\n`beforeRouteEnter` 守卫 不能 访问 this，因为守卫在导航确认前被调用,因此即将登场的新组件还没被创建。\n\n不过，你可以通过传一个回调给 next来访问组件实例。在导航被确认的时候执行回调，并且把组件实例作为回调方法的参数。\n\n```js\nbeforeRouteEnter (to, from, next) {\n  next(vm => {\n    // 通过 `vm` 访问组件实例\n  })\n}\n```\n\n注意 `beforeRouteEnter` 是支持给 `next` 传递回调的唯一守卫。对于 `beforeRouteUpdate` 和 `beforeRouteLeave` 来说，`this` 已经可用了，所以不支持传递回调，因为没有必要了。\n\n```js\nbeforeRouteUpdate (to, from, next) {\n  // just use `this`\n  this.name = to.params.name\n  next()\n}\n```\n\n这个离开守卫通常用来禁止用户在还未保存修改前突然离开。该导航可以通过 `next(false)` 来取消。\n\n```js\nbeforeRouteLeave (to, from , next) {\n  const answer = window.confirm('Do you really want to leave? you have unsaved changes!')\n  if (answer) {\n    next()\n  } else {\n    next(false)\n  }\n}\n```\n\n## 完整的导航解析流程\n\n- 导航被触发。\n- 在失活的组件里调用离开守卫。\n- 调用全局的 beforeEach 守卫。\n- 在重用的组件里调用 beforeRouteUpdate 守卫 (2.2+)。\n- 在路由配置里调用 beforeEnter。\n- 解析异步路由组件。\n- 在被激活的组件里调用 beforeRouteEnter。\n- 调用全局的 beforeResolve 守卫 (2.5+)。\n- 导航被确认。\n- 调用全局的 afterEach 钩子。\n- 触发 DOM 更新。\n- 用创建好的实例调用 beforeRouteEnter 守卫中传给 next 的回调函数。","source":"_posts/vue-7.md","raw":"---\ntitle: vue中路由守卫\ncomments: true\ndescription: vue中跨域代理\ntags: \"Vue\"\ncategories: \"Vue\"\nkeywords: vue, Vue.js \ndate: 2017-07-29 11:58:40\n---\n\n正如其名，`vue-router` 提供的导航守卫主要用来通过跳转或取消的方式守卫导航。有多种机会植入路由导航过程中：全局的, 单个路由独享的, 或者组件级的。\n\n记住参数或查询的改变并不会触发进入/离开的导航守卫。你可以通过观察 `$route` 对象来应对这些变化，或使用 `beforeRouteUpdate` 的组件内守卫。\n\n## 全局前置守卫\n\n你可以使用 `router.beforeEach` 注册一个全局前置守卫：\n\n```js\nconst router = new VueRouter({ ... })\n\nrouter.beforeEach((to, from, next) => {\n  // ...\n})\n```\n\n当一个导航触发时，全局前置守卫按照创建顺序调用。守卫是异步解析执行，此时导航在所有守卫 `resolve` 完之前一直处于 等待中。\n\n每个守卫方法接收三个参数：\n\n- to: Route: 即将要进入的目标 路由对象\n\n- from: Route: 当前导航正要离开的路由\n\n- next: `Function` 一定要调用该方法来 `resolve` 这个钩子。执行效果依赖 `next` 方法的调用参数。\n\n`next()`: 进行管道中的下一个钩子。如果全部钩子执行完了，则导航的状态就是 `confirmed` (确认的)。\n\n`next(false)`: 中断当前的导航。如果浏览器的 URL 改变了 (可能是用户手动或者浏览器后退按钮)，那么 URL 地址会重置到 from 路由对应的地址。\n\n`next('/')` 或者 `next({ path: '/' })`: 跳转到一个不同的地址。当前的导航被中断，然后进行一个新的导航。你可以向 next 传递任意位置对象，且允许设置诸如 `replace: true、name: 'home'` 之类的选项以及任何用在 `router-link` 的 `to prop` 或 `router.push` 中的选项。\n\n`next(error): (2.4.0+)` 如果传入 next 的参数是一个 `Error` 实例，则导航会被终止且该错误会被传递给 `router.onError()` 注册过的回调。\n\n确保要调用 `next` 方法，否则钩子就不会被 `resolved`。\n\n## 全局解析守卫\n\n2.5.0 新增\n\n在 2.5.0+ 你可以用 `router.beforeResolve` 注册一个全局守卫。这和 `router.beforeEach` 类似，区别是在导航被确认之前，同时在所有组件内守卫和异步路由组件被解析之后，解析守卫就被调用。\n\n## 全局后置钩子\n\n你也可以注册全局后置钩子，然而和守卫不同的是，这些钩子不会接受 `next `函数也不会改变导航本身：\n\n```js\nrouter.afterEach((to, from) => {\n  // ...\n})\n```\n\n## 路由独享的守卫\n\n你可以在路由配置上直接定义 `beforeEnter` 守卫：\n\n```js\nconst router = new VueRouter({\n  routes: [\n    {\n      path: '/foo',\n      component: Foo,\n      beforeEnter: (to, from, next) => {\n        // ...\n      }\n    }\n  ]\n})\n```\n\n这些守卫与全局前置守卫的方法参数是一样的。\n\n## 组件内的守卫\n\n最后，你可以在路由组件内直接定义以下路由导航守卫：\n\n```js\nbeforeRouteEnter\nbeforeRouteUpdate (2.2 新增)\nbeforeRouteLeave\nconst Foo = {\n  template: `...`,\n  beforeRouteEnter (to, from, next) {\n    // 在渲染该组件的对应路由被 confirm 前调用\n    // 不！能！获取组件实例 `this`\n    // 因为当守卫执行前，组件实例还没被创建\n  },\n  beforeRouteUpdate (to, from, next) {\n    // 在当前路由改变，但是该组件被复用时调用\n    // 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，\n    // 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。\n    // 可以访问组件实例 `this`\n  },\n  beforeRouteLeave (to, from, next) {\n    // 导航离开该组件的对应路由时调用\n    // 可以访问组件实例 `this`\n  }\n}\n```\n\n`beforeRouteEnter` 守卫 不能 访问 this，因为守卫在导航确认前被调用,因此即将登场的新组件还没被创建。\n\n不过，你可以通过传一个回调给 next来访问组件实例。在导航被确认的时候执行回调，并且把组件实例作为回调方法的参数。\n\n```js\nbeforeRouteEnter (to, from, next) {\n  next(vm => {\n    // 通过 `vm` 访问组件实例\n  })\n}\n```\n\n注意 `beforeRouteEnter` 是支持给 `next` 传递回调的唯一守卫。对于 `beforeRouteUpdate` 和 `beforeRouteLeave` 来说，`this` 已经可用了，所以不支持传递回调，因为没有必要了。\n\n```js\nbeforeRouteUpdate (to, from, next) {\n  // just use `this`\n  this.name = to.params.name\n  next()\n}\n```\n\n这个离开守卫通常用来禁止用户在还未保存修改前突然离开。该导航可以通过 `next(false)` 来取消。\n\n```js\nbeforeRouteLeave (to, from , next) {\n  const answer = window.confirm('Do you really want to leave? you have unsaved changes!')\n  if (answer) {\n    next()\n  } else {\n    next(false)\n  }\n}\n```\n\n## 完整的导航解析流程\n\n- 导航被触发。\n- 在失活的组件里调用离开守卫。\n- 调用全局的 beforeEach 守卫。\n- 在重用的组件里调用 beforeRouteUpdate 守卫 (2.2+)。\n- 在路由配置里调用 beforeEnter。\n- 解析异步路由组件。\n- 在被激活的组件里调用 beforeRouteEnter。\n- 调用全局的 beforeResolve 守卫 (2.5+)。\n- 导航被确认。\n- 调用全局的 afterEach 钩子。\n- 触发 DOM 更新。\n- 用创建好的实例调用 beforeRouteEnter 守卫中传给 next 的回调函数。","slug":"vue-7","published":1,"updated":"2019-10-13T14:33:45.024Z","layout":"post","photos":[],"link":"","_id":"ck1p3g2an002sn0b90x4fi0kz","content":"<p>正如其名，<code>vue-router</code> 提供的导航守卫主要用来通过跳转或取消的方式守卫导航。有多种机会植入路由导航过程中：全局的, 单个路由独享的, 或者组件级的。</p>\n<p>记住参数或查询的改变并不会触发进入/离开的导航守卫。你可以通过观察 <code>$route</code> 对象来应对这些变化，或使用 <code>beforeRouteUpdate</code> 的组件内守卫。</p>\n<h2 id=\"全局前置守卫\"><a href=\"#全局前置守卫\" class=\"headerlink\" title=\"全局前置守卫\"></a>全局前置守卫</h2><p>你可以使用 <code>router.beforeEach</code> 注册一个全局前置守卫：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> VueRouter(&#123; ... &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">router.beforeEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>当一个导航触发时，全局前置守卫按照创建顺序调用。守卫是异步解析执行，此时导航在所有守卫 <code>resolve</code> 完之前一直处于 等待中。</p>\n<p>每个守卫方法接收三个参数：</p>\n<ul>\n<li><p>to: Route: 即将要进入的目标 路由对象</p>\n</li>\n<li><p>from: Route: 当前导航正要离开的路由</p>\n</li>\n<li><p>next: <code>Function</code> 一定要调用该方法来 <code>resolve</code> 这个钩子。执行效果依赖 <code>next</code> 方法的调用参数。</p>\n</li>\n</ul>\n<p><code>next()</code>: 进行管道中的下一个钩子。如果全部钩子执行完了，则导航的状态就是 <code>confirmed</code> (确认的)。</p>\n<p><code>next(false)</code>: 中断当前的导航。如果浏览器的 URL 改变了 (可能是用户手动或者浏览器后退按钮)，那么 URL 地址会重置到 from 路由对应的地址。</p>\n<p><code>next(&#39;/&#39;)</code> 或者 <code>next({ path: &#39;/&#39; })</code>: 跳转到一个不同的地址。当前的导航被中断，然后进行一个新的导航。你可以向 next 传递任意位置对象，且允许设置诸如 <code>replace: true、name: &#39;home&#39;</code> 之类的选项以及任何用在 <code>router-link</code> 的 <code>to prop</code> 或 <code>router.push</code> 中的选项。</p>\n<p><code>next(error): (2.4.0+)</code> 如果传入 next 的参数是一个 <code>Error</code> 实例，则导航会被终止且该错误会被传递给 <code>router.onError()</code> 注册过的回调。</p>\n<p>确保要调用 <code>next</code> 方法，否则钩子就不会被 <code>resolved</code>。</p>\n<h2 id=\"全局解析守卫\"><a href=\"#全局解析守卫\" class=\"headerlink\" title=\"全局解析守卫\"></a>全局解析守卫</h2><p>2.5.0 新增</p>\n<p>在 2.5.0+ 你可以用 <code>router.beforeResolve</code> 注册一个全局守卫。这和 <code>router.beforeEach</code> 类似，区别是在导航被确认之前，同时在所有组件内守卫和异步路由组件被解析之后，解析守卫就被调用。</p>\n<h2 id=\"全局后置钩子\"><a href=\"#全局后置钩子\" class=\"headerlink\" title=\"全局后置钩子\"></a>全局后置钩子</h2><p>你也可以注册全局后置钩子，然而和守卫不同的是，这些钩子不会接受 <code>next</code>函数也不会改变导航本身：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.afterEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"路由独享的守卫\"><a href=\"#路由独享的守卫\" class=\"headerlink\" title=\"路由独享的守卫\"></a>路由独享的守卫</h2><p>你可以在路由配置上直接定义 <code>beforeEnter</code> 守卫：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> VueRouter(&#123;</span><br><span class=\"line\">  routes: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/foo'</span>,</span><br><span class=\"line\">      component: Foo,</span><br><span class=\"line\">      beforeEnter: <span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// ...</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>这些守卫与全局前置守卫的方法参数是一样的。</p>\n<h2 id=\"组件内的守卫\"><a href=\"#组件内的守卫\" class=\"headerlink\" title=\"组件内的守卫\"></a>组件内的守卫</h2><p>最后，你可以在路由组件内直接定义以下路由导航守卫：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beforeRouteEnter</span><br><span class=\"line\">beforeRouteUpdate (<span class=\"number\">2.2</span> 新增)</span><br><span class=\"line\">beforeRouteLeave</span><br><span class=\"line\"><span class=\"keyword\">const</span> Foo = &#123;</span><br><span class=\"line\">  template: <span class=\"string\">`...`</span>,</span><br><span class=\"line\">  beforeRouteEnter (to, <span class=\"keyword\">from</span>, next) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 在渲染该组件的对应路由被 confirm 前调用</span></span><br><span class=\"line\">    <span class=\"comment\">// 不！能！获取组件实例 `this`</span></span><br><span class=\"line\">    <span class=\"comment\">// 因为当守卫执行前，组件实例还没被创建</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  beforeRouteUpdate (to, <span class=\"keyword\">from</span>, next) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 在当前路由改变，但是该组件被复用时调用</span></span><br><span class=\"line\">    <span class=\"comment\">// 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，</span></span><br><span class=\"line\">    <span class=\"comment\">// 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。</span></span><br><span class=\"line\">    <span class=\"comment\">// 可以访问组件实例 `this`</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  beforeRouteLeave (to, <span class=\"keyword\">from</span>, next) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 导航离开该组件的对应路由时调用</span></span><br><span class=\"line\">    <span class=\"comment\">// 可以访问组件实例 `this`</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>beforeRouteEnter</code> 守卫 不能 访问 this，因为守卫在导航确认前被调用,因此即将登场的新组件还没被创建。</p>\n<p>不过，你可以通过传一个回调给 next来访问组件实例。在导航被确认的时候执行回调，并且把组件实例作为回调方法的参数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beforeRouteEnter (to, <span class=\"keyword\">from</span>, next) &#123;</span><br><span class=\"line\">  next(<span class=\"function\"><span class=\"params\">vm</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过 `vm` 访问组件实例</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意 <code>beforeRouteEnter</code> 是支持给 <code>next</code> 传递回调的唯一守卫。对于 <code>beforeRouteUpdate</code> 和 <code>beforeRouteLeave</code> 来说，<code>this</code> 已经可用了，所以不支持传递回调，因为没有必要了。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beforeRouteUpdate (to, <span class=\"keyword\">from</span>, next) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// just use `this`</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = to.params.name</span><br><span class=\"line\">  next()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这个离开守卫通常用来禁止用户在还未保存修改前突然离开。该导航可以通过 <code>next(false)</code> 来取消。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beforeRouteLeave (to, <span class=\"keyword\">from</span> , next) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> answer = <span class=\"built_in\">window</span>.confirm(<span class=\"string\">'Do you really want to leave? you have unsaved changes!'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (answer) &#123;</span><br><span class=\"line\">    next()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    next(<span class=\"literal\">false</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"完整的导航解析流程\"><a href=\"#完整的导航解析流程\" class=\"headerlink\" title=\"完整的导航解析流程\"></a>完整的导航解析流程</h2><ul>\n<li>导航被触发。</li>\n<li>在失活的组件里调用离开守卫。</li>\n<li>调用全局的 beforeEach 守卫。</li>\n<li>在重用的组件里调用 beforeRouteUpdate 守卫 (2.2+)。</li>\n<li>在路由配置里调用 beforeEnter。</li>\n<li>解析异步路由组件。</li>\n<li>在被激活的组件里调用 beforeRouteEnter。</li>\n<li>调用全局的 beforeResolve 守卫 (2.5+)。</li>\n<li>导航被确认。</li>\n<li>调用全局的 afterEach 钩子。</li>\n<li>触发 DOM 更新。</li>\n<li>用创建好的实例调用 beforeRouteEnter 守卫中传给 next 的回调函数。</li>\n</ul>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<p>正如其名，<code>vue-router</code> 提供的导航守卫主要用来通过跳转或取消的方式守卫导航。有多种机会植入路由导航过程中：全局的, 单个路由独享的, 或者组件级的。</p>\n<p>记住参数或查询的改变并不会触发进入/离开的导航守卫。你可以通过观察 <code>$route</code> 对象来应对这些变化，或使用 <code>beforeRouteUpdate</code> 的组件内守卫。</p>\n<h2 id=\"全局前置守卫\"><a href=\"#全局前置守卫\" class=\"headerlink\" title=\"全局前置守卫\"></a>全局前置守卫</h2><p>你可以使用 <code>router.beforeEach</code> 注册一个全局前置守卫：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> VueRouter(&#123; ... &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">router.beforeEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>当一个导航触发时，全局前置守卫按照创建顺序调用。守卫是异步解析执行，此时导航在所有守卫 <code>resolve</code> 完之前一直处于 等待中。</p>\n<p>每个守卫方法接收三个参数：</p>\n<ul>\n<li><p>to: Route: 即将要进入的目标 路由对象</p>\n</li>\n<li><p>from: Route: 当前导航正要离开的路由</p>\n</li>\n<li><p>next: <code>Function</code> 一定要调用该方法来 <code>resolve</code> 这个钩子。执行效果依赖 <code>next</code> 方法的调用参数。</p>\n</li>\n</ul>\n<p><code>next()</code>: 进行管道中的下一个钩子。如果全部钩子执行完了，则导航的状态就是 <code>confirmed</code> (确认的)。</p>\n<p><code>next(false)</code>: 中断当前的导航。如果浏览器的 URL 改变了 (可能是用户手动或者浏览器后退按钮)，那么 URL 地址会重置到 from 路由对应的地址。</p>\n<p><code>next(&#39;/&#39;)</code> 或者 <code>next({ path: &#39;/&#39; })</code>: 跳转到一个不同的地址。当前的导航被中断，然后进行一个新的导航。你可以向 next 传递任意位置对象，且允许设置诸如 <code>replace: true、name: &#39;home&#39;</code> 之类的选项以及任何用在 <code>router-link</code> 的 <code>to prop</code> 或 <code>router.push</code> 中的选项。</p>\n<p><code>next(error): (2.4.0+)</code> 如果传入 next 的参数是一个 <code>Error</code> 实例，则导航会被终止且该错误会被传递给 <code>router.onError()</code> 注册过的回调。</p>\n<p>确保要调用 <code>next</code> 方法，否则钩子就不会被 <code>resolved</code>。</p>\n<h2 id=\"全局解析守卫\"><a href=\"#全局解析守卫\" class=\"headerlink\" title=\"全局解析守卫\"></a>全局解析守卫</h2><p>2.5.0 新增</p>\n<p>在 2.5.0+ 你可以用 <code>router.beforeResolve</code> 注册一个全局守卫。这和 <code>router.beforeEach</code> 类似，区别是在导航被确认之前，同时在所有组件内守卫和异步路由组件被解析之后，解析守卫就被调用。</p>\n<h2 id=\"全局后置钩子\"><a href=\"#全局后置钩子\" class=\"headerlink\" title=\"全局后置钩子\"></a>全局后置钩子</h2><p>你也可以注册全局后置钩子，然而和守卫不同的是，这些钩子不会接受 <code>next</code>函数也不会改变导航本身：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router.afterEach(<span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"路由独享的守卫\"><a href=\"#路由独享的守卫\" class=\"headerlink\" title=\"路由独享的守卫\"></a>路由独享的守卫</h2><p>你可以在路由配置上直接定义 <code>beforeEnter</code> 守卫：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"keyword\">new</span> VueRouter(&#123;</span><br><span class=\"line\">  routes: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/foo'</span>,</span><br><span class=\"line\">      component: Foo,</span><br><span class=\"line\">      beforeEnter: <span class=\"function\">(<span class=\"params\">to, <span class=\"keyword\">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// ...</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>这些守卫与全局前置守卫的方法参数是一样的。</p>\n<h2 id=\"组件内的守卫\"><a href=\"#组件内的守卫\" class=\"headerlink\" title=\"组件内的守卫\"></a>组件内的守卫</h2><p>最后，你可以在路由组件内直接定义以下路由导航守卫：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beforeRouteEnter</span><br><span class=\"line\">beforeRouteUpdate (<span class=\"number\">2.2</span> 新增)</span><br><span class=\"line\">beforeRouteLeave</span><br><span class=\"line\"><span class=\"keyword\">const</span> Foo = &#123;</span><br><span class=\"line\">  template: <span class=\"string\">`...`</span>,</span><br><span class=\"line\">  beforeRouteEnter (to, <span class=\"keyword\">from</span>, next) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 在渲染该组件的对应路由被 confirm 前调用</span></span><br><span class=\"line\">    <span class=\"comment\">// 不！能！获取组件实例 `this`</span></span><br><span class=\"line\">    <span class=\"comment\">// 因为当守卫执行前，组件实例还没被创建</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  beforeRouteUpdate (to, <span class=\"keyword\">from</span>, next) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 在当前路由改变，但是该组件被复用时调用</span></span><br><span class=\"line\">    <span class=\"comment\">// 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，</span></span><br><span class=\"line\">    <span class=\"comment\">// 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。</span></span><br><span class=\"line\">    <span class=\"comment\">// 可以访问组件实例 `this`</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  beforeRouteLeave (to, <span class=\"keyword\">from</span>, next) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 导航离开该组件的对应路由时调用</span></span><br><span class=\"line\">    <span class=\"comment\">// 可以访问组件实例 `this`</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>beforeRouteEnter</code> 守卫 不能 访问 this，因为守卫在导航确认前被调用,因此即将登场的新组件还没被创建。</p>\n<p>不过，你可以通过传一个回调给 next来访问组件实例。在导航被确认的时候执行回调，并且把组件实例作为回调方法的参数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beforeRouteEnter (to, <span class=\"keyword\">from</span>, next) &#123;</span><br><span class=\"line\">  next(<span class=\"function\"><span class=\"params\">vm</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 通过 `vm` 访问组件实例</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意 <code>beforeRouteEnter</code> 是支持给 <code>next</code> 传递回调的唯一守卫。对于 <code>beforeRouteUpdate</code> 和 <code>beforeRouteLeave</code> 来说，<code>this</code> 已经可用了，所以不支持传递回调，因为没有必要了。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beforeRouteUpdate (to, <span class=\"keyword\">from</span>, next) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// just use `this`</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = to.params.name</span><br><span class=\"line\">  next()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这个离开守卫通常用来禁止用户在还未保存修改前突然离开。该导航可以通过 <code>next(false)</code> 来取消。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">beforeRouteLeave (to, <span class=\"keyword\">from</span> , next) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> answer = <span class=\"built_in\">window</span>.confirm(<span class=\"string\">'Do you really want to leave? you have unsaved changes!'</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (answer) &#123;</span><br><span class=\"line\">    next()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    next(<span class=\"literal\">false</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"完整的导航解析流程\"><a href=\"#完整的导航解析流程\" class=\"headerlink\" title=\"完整的导航解析流程\"></a>完整的导航解析流程</h2><ul>\n<li>导航被触发。</li>\n<li>在失活的组件里调用离开守卫。</li>\n<li>调用全局的 beforeEach 守卫。</li>\n<li>在重用的组件里调用 beforeRouteUpdate 守卫 (2.2+)。</li>\n<li>在路由配置里调用 beforeEnter。</li>\n<li>解析异步路由组件。</li>\n<li>在被激活的组件里调用 beforeRouteEnter。</li>\n<li>调用全局的 beforeResolve 守卫 (2.5+)。</li>\n<li>导航被确认。</li>\n<li>调用全局的 afterEach 钩子。</li>\n<li>触发 DOM 更新。</li>\n<li>用创建好的实例调用 beforeRouteEnter 守卫中传给 next 的回调函数。</li>\n</ul>\n"},{"title":"axios封装","comments":1,"description":"axios封装","keywords":"vue, Vue.js","date":"2017-08-13T06:38:40.000Z","_content":"\n\n这里的需求是在特定的请求的时候需要携带`token`， 并且检测`token`是否过期，过期刷新，或者直接请求\n\n封装了一些`axios`常用的状态\n\n\n```js\n'use strict'\n// 引入依赖\nimport axios from 'axios'\nimport qs from 'qs'\nimport config from '../config'\nimport Token from './token'\nimport store from './store'\nimport base from './base'\n// 默认一些配置\naxios.defaults.withCredentials = true\n\n// axios请求前拦截器\naxios.interceptors.request.use(config => {\n  // loading\n  return config\n}, error => {\n  return Promise.reject(error)\n})\n\n// axios相应拦截器\naxios.interceptors.response.use(response => {\n  return response\n}, error => {\n  return Promise.resolve(error.response)\n})\n\n// 检查服务器返回的状态码的状态\nfunction checkStatus (response) {\n  // loading\n  // 如果http状态码正常，则直接返回数据\n  if (response && (response.status === 200 || response.status === 304 || response.status === 400)) {\n    if (response.data.code === 200) {\n      return response\n      // 如果不需要除了data之外的数据，可以直接 return response.data\n    }\n    return response\n  }\n  // 异常状态下，把错误信息返回去\n  return {\n    'status': -404,\n    'msg': '网络异常'\n  }\n}\n\nfunction checkCode (res) {\n  // 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户\n  if (res.status === -404) {}\n  if (res.data && (!res.data.success)) {}\n  return res\n}\n\n// 携带cookie\nconst parseCookie = cookies => {\n  let cookie = ''\n  Object.keys(cookies).forEach(item => {\n    cookie += item + '=' + cookies[item] + '; '\n  })\n  return cookie\n}\n\n// post操作\nfunction postByToken (url, data, token, cookies = {}) {\n  let cookie = parseCookie(cookies)\n  let headers = {\n    'X-Requested-With': 'XMLHttpRequest',\n    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n    'authorization': token\n  }\n  if (cookie && !base.isClient()) headers['cookie'] = cookie\n  return axios({\n    method: 'post',\n    baseURL: url.indexOf('authentication/mobile') >= 0 || url.indexOf('oauth/token') >= 0 || url.indexOf('authentication/third') >= 0 ? config.API_SSO : config.API_SERVER,\n    url,\n    data: qs.stringify(data),\n    timeout: 20000,\n    headers\n  })\n    .then(\n      (response) => {\n        return checkStatus(response)\n      }\n    ).then(\n      (res) => {\n        return checkCode(res)\n      }\n    )\n}\n\n// token过期的操作\nfunction redirectByToken (url, token, pathname) {\n  if (base.isClient()) {\n    // let href = window.location.href\n    if (token === undefined || token === 'timeout' || token === 'notoken') {\n      if (pathname === 'User') {\n        Token.clearToken()\n      } else {\n        Token.clearToken()\n        // window.location.href = `${base.Href()}/account/login?redirect=${href}`\n      }\n    }\n  }\n}\n// 抛出\nexport default {\n  post (url, data, isToken = false, pathname = '', cookies = {}) {\n    return Token.getToken(isToken)\n      .then((token) => {\n        redirectByToken(url, token, pathname)\n        if (pathname === 'User' && !store.getWithKey('localStorage', 'tokenMsg')) {\n\n        } else {\n          return postByToken(url, data, token, cookies)\n        }\n      })\n  },\n  get (url, params) {\n    return axios({\n      'method': 'get',\n      'baseURL': config.API_SERVER,\n      url,\n      params, // get 请求时带的参数\n      'timeout': 10000,\n      'headers': {\n        'X-Requested-With': 'XMLHttpRequest'\n      }\n    }).then(\n      (response) => {\n        return checkStatus(response)\n      }\n    ).then(\n      (res) => {\n        return checkCode(res)\n      }\n    ).catch((err) => {\n      if (err) {\n\n      }\n    })\n  }\n}\n```\n\n这里的需求是在特定的请求的时候需要携带`token`， 并且检测`token`是否过期，过期刷新，或者直接请求\n","source":"_posts/vue-8.md","raw":"---\ntitle: axios封装\ncomments: true\ndescription: axios封装\ntags: \"Vue\"\ncategories: \"Vue\"\nkeywords: vue, Vue.js \ndate: 2017-08-13 14:38:40\n---\n\n\n这里的需求是在特定的请求的时候需要携带`token`， 并且检测`token`是否过期，过期刷新，或者直接请求\n\n封装了一些`axios`常用的状态\n\n\n```js\n'use strict'\n// 引入依赖\nimport axios from 'axios'\nimport qs from 'qs'\nimport config from '../config'\nimport Token from './token'\nimport store from './store'\nimport base from './base'\n// 默认一些配置\naxios.defaults.withCredentials = true\n\n// axios请求前拦截器\naxios.interceptors.request.use(config => {\n  // loading\n  return config\n}, error => {\n  return Promise.reject(error)\n})\n\n// axios相应拦截器\naxios.interceptors.response.use(response => {\n  return response\n}, error => {\n  return Promise.resolve(error.response)\n})\n\n// 检查服务器返回的状态码的状态\nfunction checkStatus (response) {\n  // loading\n  // 如果http状态码正常，则直接返回数据\n  if (response && (response.status === 200 || response.status === 304 || response.status === 400)) {\n    if (response.data.code === 200) {\n      return response\n      // 如果不需要除了data之外的数据，可以直接 return response.data\n    }\n    return response\n  }\n  // 异常状态下，把错误信息返回去\n  return {\n    'status': -404,\n    'msg': '网络异常'\n  }\n}\n\nfunction checkCode (res) {\n  // 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户\n  if (res.status === -404) {}\n  if (res.data && (!res.data.success)) {}\n  return res\n}\n\n// 携带cookie\nconst parseCookie = cookies => {\n  let cookie = ''\n  Object.keys(cookies).forEach(item => {\n    cookie += item + '=' + cookies[item] + '; '\n  })\n  return cookie\n}\n\n// post操作\nfunction postByToken (url, data, token, cookies = {}) {\n  let cookie = parseCookie(cookies)\n  let headers = {\n    'X-Requested-With': 'XMLHttpRequest',\n    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n    'authorization': token\n  }\n  if (cookie && !base.isClient()) headers['cookie'] = cookie\n  return axios({\n    method: 'post',\n    baseURL: url.indexOf('authentication/mobile') >= 0 || url.indexOf('oauth/token') >= 0 || url.indexOf('authentication/third') >= 0 ? config.API_SSO : config.API_SERVER,\n    url,\n    data: qs.stringify(data),\n    timeout: 20000,\n    headers\n  })\n    .then(\n      (response) => {\n        return checkStatus(response)\n      }\n    ).then(\n      (res) => {\n        return checkCode(res)\n      }\n    )\n}\n\n// token过期的操作\nfunction redirectByToken (url, token, pathname) {\n  if (base.isClient()) {\n    // let href = window.location.href\n    if (token === undefined || token === 'timeout' || token === 'notoken') {\n      if (pathname === 'User') {\n        Token.clearToken()\n      } else {\n        Token.clearToken()\n        // window.location.href = `${base.Href()}/account/login?redirect=${href}`\n      }\n    }\n  }\n}\n// 抛出\nexport default {\n  post (url, data, isToken = false, pathname = '', cookies = {}) {\n    return Token.getToken(isToken)\n      .then((token) => {\n        redirectByToken(url, token, pathname)\n        if (pathname === 'User' && !store.getWithKey('localStorage', 'tokenMsg')) {\n\n        } else {\n          return postByToken(url, data, token, cookies)\n        }\n      })\n  },\n  get (url, params) {\n    return axios({\n      'method': 'get',\n      'baseURL': config.API_SERVER,\n      url,\n      params, // get 请求时带的参数\n      'timeout': 10000,\n      'headers': {\n        'X-Requested-With': 'XMLHttpRequest'\n      }\n    }).then(\n      (response) => {\n        return checkStatus(response)\n      }\n    ).then(\n      (res) => {\n        return checkCode(res)\n      }\n    ).catch((err) => {\n      if (err) {\n\n      }\n    })\n  }\n}\n```\n\n这里的需求是在特定的请求的时候需要携带`token`， 并且检测`token`是否过期，过期刷新，或者直接请求\n","slug":"vue-8","published":1,"updated":"2019-10-13T14:48:38.425Z","_id":"ck1p3i63s003pn0b9tqai1fto","layout":"post","photos":[],"link":"","content":"<p>这里的需求是在特定的请求的时候需要携带<code>token</code>， 并且检测<code>token</code>是否过期，过期刷新，或者直接请求</p>\n<p>封装了一些<code>axios</code>常用的状态</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"comment\">// 引入依赖</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> qs <span class=\"keyword\">from</span> <span class=\"string\">'qs'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> config <span class=\"keyword\">from</span> <span class=\"string\">'../config'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Token <span class=\"keyword\">from</span> <span class=\"string\">'./token'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">'./store'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> base <span class=\"keyword\">from</span> <span class=\"string\">'./base'</span></span><br><span class=\"line\"><span class=\"comment\">// 默认一些配置</span></span><br><span class=\"line\">axios.defaults.withCredentials = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// axios请求前拦截器</span></span><br><span class=\"line\">axios.interceptors.request.use(<span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// loading</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> config</span><br><span class=\"line\">&#125;, error =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// axios相应拦截器</span></span><br><span class=\"line\">axios.interceptors.response.use(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> response</span><br><span class=\"line\">&#125;, error =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(error.response)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 检查服务器返回的状态码的状态</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkStatus</span> (<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// loading</span></span><br><span class=\"line\">  <span class=\"comment\">// 如果http状态码正常，则直接返回数据</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (response &amp;&amp; (response.status === <span class=\"number\">200</span> || response.status === <span class=\"number\">304</span> || response.status === <span class=\"number\">400</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (response.data.code === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> response</span><br><span class=\"line\">      <span class=\"comment\">// 如果不需要除了data之外的数据，可以直接 return response.data</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 异常状态下，把错误信息返回去</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">'status'</span>: <span class=\"number\">-404</span>,</span><br><span class=\"line\">    <span class=\"string\">'msg'</span>: <span class=\"string\">'网络异常'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkCode</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (res.status === <span class=\"number\">-404</span>) &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (res.data &amp;&amp; (!res.data.success)) &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 携带cookie</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> parseCookie = <span class=\"function\"><span class=\"params\">cookies</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> cookie = <span class=\"string\">''</span></span><br><span class=\"line\">  <span class=\"built_in\">Object</span>.keys(cookies).forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">    cookie += item + <span class=\"string\">'='</span> + cookies[item] + <span class=\"string\">'; '</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> cookie</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// post操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">postByToken</span> (<span class=\"params\">url, data, token, cookies = &#123;&#125;</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> cookie = parseCookie(cookies)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">'X-Requested-With'</span>: <span class=\"string\">'XMLHttpRequest'</span>,</span><br><span class=\"line\">    <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/x-www-form-urlencoded; charset=UTF-8'</span>,</span><br><span class=\"line\">    <span class=\"string\">'authorization'</span>: token</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (cookie &amp;&amp; !base.isClient()) headers[<span class=\"string\">'cookie'</span>] = cookie</span><br><span class=\"line\">  <span class=\"keyword\">return</span> axios(&#123;</span><br><span class=\"line\">    method: <span class=\"string\">'post'</span>,</span><br><span class=\"line\">    baseURL: url.indexOf(<span class=\"string\">'authentication/mobile'</span>) &gt;= <span class=\"number\">0</span> || url.indexOf(<span class=\"string\">'oauth/token'</span>) &gt;= <span class=\"number\">0</span> || url.indexOf(<span class=\"string\">'authentication/third'</span>) &gt;= <span class=\"number\">0</span> ? config.API_SSO : config.API_SERVER,</span><br><span class=\"line\">    url,</span><br><span class=\"line\">    data: qs.stringify(data),</span><br><span class=\"line\">    timeout: <span class=\"number\">20000</span>,</span><br><span class=\"line\">    headers</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">    .then(</span><br><span class=\"line\">      (response) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> checkStatus(response)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ).then(</span><br><span class=\"line\">      (res) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> checkCode(res)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// token过期的操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">redirectByToken</span> (<span class=\"params\">url, token, pathname</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (base.isClient()) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// let href = window.location.href</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (token === <span class=\"literal\">undefined</span> || token === <span class=\"string\">'timeout'</span> || token === <span class=\"string\">'notoken'</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (pathname === <span class=\"string\">'User'</span>) &#123;</span><br><span class=\"line\">        Token.clearToken()</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        Token.clearToken()</span><br><span class=\"line\">        <span class=\"comment\">// window.location.href = `$&#123;base.Href()&#125;/account/login?redirect=$&#123;href&#125;`</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 抛出</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  post (url, data, isToken = <span class=\"literal\">false</span>, pathname = <span class=\"string\">''</span>, cookies = &#123;&#125;) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Token.getToken(isToken)</span><br><span class=\"line\">      .then(<span class=\"function\">(<span class=\"params\">token</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        redirectByToken(url, token, pathname)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (pathname === <span class=\"string\">'User'</span> &amp;&amp; !store.getWithKey(<span class=\"string\">'localStorage'</span>, <span class=\"string\">'tokenMsg'</span>)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> postByToken(url, data, token, cookies)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">get</span> (url, params) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> axios(&#123;</span><br><span class=\"line\">      <span class=\"string\">'method'</span>: <span class=\"string\">'get'</span>,</span><br><span class=\"line\">      <span class=\"string\">'baseURL'</span>: config.API_SERVER,</span><br><span class=\"line\">      url,</span><br><span class=\"line\">      params, <span class=\"comment\">// get 请求时带的参数</span></span><br><span class=\"line\">      <span class=\"string\">'timeout'</span>: <span class=\"number\">10000</span>,</span><br><span class=\"line\">      <span class=\"string\">'headers'</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'X-Requested-With'</span>: <span class=\"string\">'XMLHttpRequest'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;).then(</span><br><span class=\"line\">      (response) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> checkStatus(response)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ).then(</span><br><span class=\"line\">      (res) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> checkCode(res)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ).catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里的需求是在特定的请求的时候需要携带<code>token</code>， 并且检测<code>token</code>是否过期，过期刷新，或者直接请求</p>\n","site":{"data":{"link":{"class":{"class_name":"友情鏈接","link_list":{"1":{"name":"xxx","link":"https://blog.xxx.com","avatar":"https://cdn.xxxxx.top/avatar.png","descr":"xxxxxxx"},"2":{"name":"xxxxxx","link":"https://www.xxxxxxcn/","avatar":"https://xxxxx/avatar.png","descr":"xxxxxxx"}}}},"butterfly":{"menu":{"首页":"/||fa fa-home","归档":"/archives/||fa fa-archive","标签":"/tags/||fa fa-tags","分类":"/categories/||fa fa-folder-open","链接":"/link/||fa fa-link"},"favicon":"/img/favicon.ico","highlight_theme":"light","highlight_copy":true,"highlight_lang":true,"highlight_shrink":false,"code_word_wrap":false,"social":{"fa fa-github":"https://github.com/hbbaly"},"algolia_search":{"enable":false,"hits":{"per_page":6},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"local_search":{"enable":false,"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}"}},"mathjax":{"enable":false,"cdn":"https://cdn.jsdelivr.net/npm/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"},"katex":{"enable":false,"cdn":{"css":"https://cdn.jsdelivr.net/npm/katex@latest/dist/katex.min.css"},"hide_scrollbar":true},"google_analytics":null,"stylesheets":["/css/index.css"],"scripts":["/js/utils.js","/js/main.js"],"cdn":{"css":{"fontawesome":"https://cdn.jsdelivr.net/npm/font-awesome@latest/css/font-awesome.min.css","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.css"},"js":{"jquery":"https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js","fancybox":"https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@latest/dist/jquery.fancybox.min.js","js-cookies":"https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"}},"avatar":"https://avatars1.githubusercontent.com/u/34227573?s=460&v=4","top_img":"https://i.loli.net/2019/05/22/5ce53eb6dc82757840.jpg","post_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/post.png","default_cover":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","archive_img":"https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/archive.jpg","lodding_bg":{"flink":"/img/friend_404.gif","post_page":"/img/404.jpg"},"post_meta":{"date_type":"both","categories":true,"tags":true},"wordcount":{"enable":false},"toc":{"enable":true,"number":true},"auto_open_sidebar":{"enable":true},"post_copyright":{"enable":true,"license":"CC BY-NC-SA 4.0","license_url":"https://creativecommons.org/licenses/by-nc-sa/4.0/"},"auto_excerpt":{"enable":true,"length":150},"addThis":{"enable":false,"pubid":null},"sharejs":{"enable":true,"sites":"facebook,twitter,wechat,weibo,qq"},"addtoany":{"enable":false,"item":["facebook","twitter","wechat","sina_weibo","facebook_messenger","email","copy_link"]},"gitalk":{"enable":true,"client_id":"11ced11d44bc7f521532","client_secret":"802696976891825a1a72d80c8c0c68ddc89406f1","repo":"hbbaly.github.io","owner":"hbbaly","admin":"hbbaly"},"valine":{"enable":false,"appId":null,"appKey":null,"notify":false,"verify":false,"pageSize":10,"avatar":"monsterid","lang":"en","placeholder":"Please leave your footprints","guest_info":"nick,mail,link"},"since":2017,"footer_custom_text":"Hi, welcome to my <a href=\"https://hbbaly.github.io/\">blog</a>!","footer_copyright":{"enable":true},"ICP":{"enable":false,"url":null,"text":null},"google_site_verification":null,"bing_site_verification":null,"baidu_site_verification":null,"qihu_site_verification":null,"Flink":{"headline":"友情链接","info_headline":"我的Blog资料","name":"Blog 名字： hbbaly","address":"Blog 地址： www.hbbaly.com","avatar":"Blog 头像： https://avatars0.githubusercontent.com/u/34227573?s=400&v=4","info":"Blog 简介： 今日事,今日畢","comment":"如果需要交换链接， 请留言"},"reward":{"enable":true,"QR_code":[{"itemlist":{"img":"/img/wechat.jpg","text":"微信"}},{"itemlist":{"img":"/img/alipay.jpg","text":"支付寶"}}]},"related_post":{"enable":true,"limit":6},"background":null,"footer_bg":false,"canvas_ribbon":{"enable":false,"size":150,"alpha":0.6,"zIndex":-1,"click_to_change":false},"canvas_ribbon_piao":{"enable":false},"canvas_nest":{"enable":false,"color":"0,0,255","opacity":0.7,"zIndex":-1,"count":99,"script":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/js/canvas-nest.js"},"activate_power_mode":{"enable":false},"fireworks":{"enable":false},"avatar_effect":false,"display_mode":"day","post_beautify":{"enable":false,"title-prefix-icon":"\\f0c1","title-prefix-icon-color":"#F47466"},"font":{"enable":false,"font-family":"Lato, Helvetica Neue For Number, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Hiragino Sans GB,\"Microsoft JhengHei\", \"MicrMicrosoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif","code-font":"consolas, Menlo, \"PingFang SC\", \"Microsoft JhengHei\",\"Microsoft YaHei\", monospace, Helvetica Neue For Number"},"blog_title_font":{"font_link":"https://fonts.googleapis.com/css?family=Titillium+Web","font-family":"Titillium Web, PingFang SC, Hiragino Sans GB, \"Microsoft JhengHei\", \"Microsoft YaHei\", Helvetica Neue, Helvetica, Arial, sans-serif"},"hr":{"enable":false,"icon":"\\f21c","icon-top":"-20px"},"subtitle":{"enable":true,"sub1":"开心就好","sub2":"Never put off till tomorrow what you can do today"},"aside":{"position":"right","card_author":true,"card_announcement":true,"card_recent_post":true,"card_categories":true,"card_tags":true,"card_archives":true,"card_webinfo":true},"announcement":{"content":"感谢访问本站, 喜欢请收藏"},"busuanzi":{"site_uv":false,"site_pv":false,"page_pv":false},"runtimeshow":{"enable":true,"start_date":"4/1/2016 00:00:00"},"translate":{"enable":true,"default":"简","defaultEncoding":1,"translateDelay":0,"cookieDomain":"https://hbbaly.github.io/","msgToTraditionalChinese":"简","msgToSimplifiedChinese":"繁"},"nightshift":{"enable":true},"readmode":{"enable":true},"baidu_push":{"enable":false},"instantpage":{"enable":true},"note":{"style":"simple","icons":true,"border_radius":3,"light_bg_offset":0},"lazyload":{"enable":true,"script":"https://cdn.jsdelivr.net/npm/lozad/dist/lozad.min.js"},"canonical":true,"disable_baidu_transformation":true,"twitter_meta":true,"Open_Graph_meta":true,"rootConfig":{"title":"hbbaly","subtitle":null,"description":null,"author":"hbbaly","language":"zh-CN","timezone":null,"url":"https://hbbaly.github.io","root":"/","permalink":":year/:month/:day/:title/","permalink_defaults":null,"source_dir":"source","public_dir":"public","tag_dir":"tags","archive_dir":"archives","category_dir":"categories","code_dir":"downloads/code","i18n_dir":":lang","skip_render":null,"new_post_name":":title.md","default_layout":"post","titlecase":false,"external_link":true,"filename_case":0,"render_drafts":false,"post_asset_folder":false,"relative_link":false,"future":true,"highlight":{"enable":true,"auto_detect":false,"line_number":true,"tab_replace":null,"first_line_number":"always1"},"default_category":"uncategorized","category_map":null,"tag_map":null,"date_format":"YYYY-MM-DD","time_format":"HH:mm:ss","per_page":10,"pagination_dir":"page","theme":"Butterfly","deploy":{"type":"git","repo":"https://github.com/hbbaly/hbbaly.github.io.git","branch":"master","message":"init comit"},"ignore":[],"keywords":null,"index_generator":{"per_page":10,"order_by":"-date","path":""},"archive_generator":{"per_page":10,"yearly":true,"monthly":true,"daily":false},"category_generator":{"per_page":10},"tag_generator":{"per_page":10},"marked":{"gfm":true,"pedantic":false,"sanitize":false,"tables":true,"breaks":true,"smartLists":true,"smartypants":true,"modifyAnchors":"","autolink":true},"server":{"port":4000,"log":false,"compress":false,"header":true}}}}},"excerpt":"","more":"<p>这里的需求是在特定的请求的时候需要携带<code>token</code>， 并且检测<code>token</code>是否过期，过期刷新，或者直接请求</p>\n<p>封装了一些<code>axios</code>常用的状态</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"comment\">// 引入依赖</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">'axios'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> qs <span class=\"keyword\">from</span> <span class=\"string\">'qs'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> config <span class=\"keyword\">from</span> <span class=\"string\">'../config'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Token <span class=\"keyword\">from</span> <span class=\"string\">'./token'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">'./store'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> base <span class=\"keyword\">from</span> <span class=\"string\">'./base'</span></span><br><span class=\"line\"><span class=\"comment\">// 默认一些配置</span></span><br><span class=\"line\">axios.defaults.withCredentials = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// axios请求前拦截器</span></span><br><span class=\"line\">axios.interceptors.request.use(<span class=\"function\"><span class=\"params\">config</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// loading</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> config</span><br><span class=\"line\">&#125;, error =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.reject(error)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// axios相应拦截器</span></span><br><span class=\"line\">axios.interceptors.response.use(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> response</span><br><span class=\"line\">&#125;, error =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Promise</span>.resolve(error.response)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 检查服务器返回的状态码的状态</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkStatus</span> (<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// loading</span></span><br><span class=\"line\">  <span class=\"comment\">// 如果http状态码正常，则直接返回数据</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (response &amp;&amp; (response.status === <span class=\"number\">200</span> || response.status === <span class=\"number\">304</span> || response.status === <span class=\"number\">400</span>)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (response.data.code === <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> response</span><br><span class=\"line\">      <span class=\"comment\">// 如果不需要除了data之外的数据，可以直接 return response.data</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 异常状态下，把错误信息返回去</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">'status'</span>: <span class=\"number\">-404</span>,</span><br><span class=\"line\">    <span class=\"string\">'msg'</span>: <span class=\"string\">'网络异常'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkCode</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (res.status === <span class=\"number\">-404</span>) &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (res.data &amp;&amp; (!res.data.success)) &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 携带cookie</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> parseCookie = <span class=\"function\"><span class=\"params\">cookies</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> cookie = <span class=\"string\">''</span></span><br><span class=\"line\">  <span class=\"built_in\">Object</span>.keys(cookies).forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">    cookie += item + <span class=\"string\">'='</span> + cookies[item] + <span class=\"string\">'; '</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> cookie</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// post操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">postByToken</span> (<span class=\"params\">url, data, token, cookies = &#123;&#125;</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> cookie = parseCookie(cookies)</span><br><span class=\"line\">  <span class=\"keyword\">let</span> headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">'X-Requested-With'</span>: <span class=\"string\">'XMLHttpRequest'</span>,</span><br><span class=\"line\">    <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/x-www-form-urlencoded; charset=UTF-8'</span>,</span><br><span class=\"line\">    <span class=\"string\">'authorization'</span>: token</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (cookie &amp;&amp; !base.isClient()) headers[<span class=\"string\">'cookie'</span>] = cookie</span><br><span class=\"line\">  <span class=\"keyword\">return</span> axios(&#123;</span><br><span class=\"line\">    method: <span class=\"string\">'post'</span>,</span><br><span class=\"line\">    baseURL: url.indexOf(<span class=\"string\">'authentication/mobile'</span>) &gt;= <span class=\"number\">0</span> || url.indexOf(<span class=\"string\">'oauth/token'</span>) &gt;= <span class=\"number\">0</span> || url.indexOf(<span class=\"string\">'authentication/third'</span>) &gt;= <span class=\"number\">0</span> ? config.API_SSO : config.API_SERVER,</span><br><span class=\"line\">    url,</span><br><span class=\"line\">    data: qs.stringify(data),</span><br><span class=\"line\">    timeout: <span class=\"number\">20000</span>,</span><br><span class=\"line\">    headers</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">    .then(</span><br><span class=\"line\">      (response) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> checkStatus(response)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ).then(</span><br><span class=\"line\">      (res) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> checkCode(res)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// token过期的操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">redirectByToken</span> (<span class=\"params\">url, token, pathname</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (base.isClient()) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// let href = window.location.href</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (token === <span class=\"literal\">undefined</span> || token === <span class=\"string\">'timeout'</span> || token === <span class=\"string\">'notoken'</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (pathname === <span class=\"string\">'User'</span>) &#123;</span><br><span class=\"line\">        Token.clearToken()</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        Token.clearToken()</span><br><span class=\"line\">        <span class=\"comment\">// window.location.href = `$&#123;base.Href()&#125;/account/login?redirect=$&#123;href&#125;`</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 抛出</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  post (url, data, isToken = <span class=\"literal\">false</span>, pathname = <span class=\"string\">''</span>, cookies = &#123;&#125;) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Token.getToken(isToken)</span><br><span class=\"line\">      .then(<span class=\"function\">(<span class=\"params\">token</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        redirectByToken(url, token, pathname)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (pathname === <span class=\"string\">'User'</span> &amp;&amp; !store.getWithKey(<span class=\"string\">'localStorage'</span>, <span class=\"string\">'tokenMsg'</span>)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> postByToken(url, data, token, cookies)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"keyword\">get</span> (url, params) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> axios(&#123;</span><br><span class=\"line\">      <span class=\"string\">'method'</span>: <span class=\"string\">'get'</span>,</span><br><span class=\"line\">      <span class=\"string\">'baseURL'</span>: config.API_SERVER,</span><br><span class=\"line\">      url,</span><br><span class=\"line\">      params, <span class=\"comment\">// get 请求时带的参数</span></span><br><span class=\"line\">      <span class=\"string\">'timeout'</span>: <span class=\"number\">10000</span>,</span><br><span class=\"line\">      <span class=\"string\">'headers'</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'X-Requested-With'</span>: <span class=\"string\">'XMLHttpRequest'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;).then(</span><br><span class=\"line\">      (response) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> checkStatus(response)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ).then(</span><br><span class=\"line\">      (res) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> checkCode(res)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ).catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里的需求是在特定的请求的时候需要携带<code>token</code>， 并且检测<code>token</code>是否过期，过期刷新，或者直接请求</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck1p3g29k0008n0b9ncdq1og9","category_id":"ck1p3g29f0004n0b9qv6s09qp","_id":"ck1p3g29q000gn0b91f73osq8"},{"post_id":"ck1p3g29a0001n0b98xawocsu","category_id":"ck1p3g29f0004n0b9qv6s09qp","_id":"ck1p3g29t000kn0b9ljpod68d"},{"post_id":"ck1p3g29e0003n0b9p6xtiamx","category_id":"ck1p3g29n000an0b9w7ww2tfp","_id":"ck1p3g29v000on0b9rm9v1k49"},{"post_id":"ck1p3g29i0007n0b9gesxyv0b","category_id":"ck1p3g29f0004n0b9qv6s09qp","_id":"ck1p3g29x000tn0b9r268q51u"},{"post_id":"ck1p3g29o000dn0b92j9a639y","category_id":"ck1p3g29v000nn0b91fk903p1","_id":"ck1p3g2a00010n0b9bco2p4xz"},{"post_id":"ck1p3g29p000fn0b9bu5tagr1","category_id":"ck1p3g29v000nn0b91fk903p1","_id":"ck1p3g2a20015n0b9mav2vpnh"},{"post_id":"ck1p3g2a10012n0b9cly2ylo4","category_id":"ck1p3g2a0000zn0b9leke74qz","_id":"ck1p3g2a5001bn0b9b9llqj1g"},{"post_id":"ck1p3g29t000jn0b9vr65e03f","category_id":"ck1p3g2a0000zn0b9leke74qz","_id":"ck1p3g2a6001en0b958zd812v"},{"post_id":"ck1p3g2a20014n0b9wzgnyh94","category_id":"ck1p3g2a0000zn0b9leke74qz","_id":"ck1p3g2a7001in0b96m4a44gh"},{"post_id":"ck1p3g2a30017n0b9t80zksgf","category_id":"ck1p3g2a0000zn0b9leke74qz","_id":"ck1p3g2a8001mn0b9240rom7p"},{"post_id":"ck1p3g29u000mn0b9sjywl1d6","category_id":"ck1p3g2a0000zn0b9leke74qz","_id":"ck1p3g2aa001qn0b9u7k0p2x2"},{"post_id":"ck1p3g2a4001an0b91lhwk5bn","category_id":"ck1p3g2a0000zn0b9leke74qz","_id":"ck1p3g2ab001un0b9axm6hzgq"},{"post_id":"ck1p3g2a5001dn0b9fxuc8ucb","category_id":"ck1p3g2a0000zn0b9leke74qz","_id":"ck1p3g2ac001yn0b9w9aon44z"},{"post_id":"ck1p3g29v000qn0b9q78tad7q","category_id":"ck1p3g2a0000zn0b9leke74qz","_id":"ck1p3g2ae0022n0b9ufobk1n5"},{"post_id":"ck1p3g2a7001hn0b9aaeozau1","category_id":"ck1p3g2a0000zn0b9leke74qz","_id":"ck1p3g2af0026n0b9own6i06e"},{"post_id":"ck1p3g2a8001ln0b99ilcsjsa","category_id":"ck1p3g2a0000zn0b9leke74qz","_id":"ck1p3g2ag0029n0b9b2mjzbt9"},{"post_id":"ck1p3g29x000sn0b9zndiagyb","category_id":"ck1p3g2a0000zn0b9leke74qz","_id":"ck1p3g2ai002en0b9o8ycsv81"},{"post_id":"ck1p3g2a9001pn0b91qhyzyxu","category_id":"ck1p3g2a0000zn0b9leke74qz","_id":"ck1p3g2aj002hn0b99guh1qh6"},{"post_id":"ck1p3g2aa001tn0b9l4mp14wz","category_id":"ck1p3g2a0000zn0b9leke74qz","_id":"ck1p3g2ak002mn0b94pv3h8yf"},{"post_id":"ck1p3g29y000wn0b9qrtlqfaz","category_id":"ck1p3g2a0000zn0b9leke74qz","_id":"ck1p3g2am002pn0b98jem7jp7"},{"post_id":"ck1p3g2ac001xn0b9mcr0u6s8","category_id":"ck1p3g2a0000zn0b9leke74qz","_id":"ck1p3g2ao002un0b9punsucw0"},{"post_id":"ck1p3g2ad0021n0b9qbicsadw","category_id":"ck1p3g2a0000zn0b9leke74qz","_id":"ck1p3g2ap002wn0b9xdqxlo0x"},{"post_id":"ck1p3g29z000yn0b91iifc1kx","category_id":"ck1p3g2ad0020n0b9xpduxoyc","_id":"ck1p3g2ap002yn0b9877cv7zr"},{"post_id":"ck1p3g2ai002gn0b977c5qy9c","category_id":"ck1p3g2ah002bn0b9n8pj17cr","_id":"ck1p3g2aq0030n0b9styex4ar"},{"post_id":"ck1p3g2af0025n0b9loxl4kfo","category_id":"ck1p3g2ah002bn0b9n8pj17cr","_id":"ck1p3g2aq0032n0b9x55yzb4j"},{"post_id":"ck1p3g2ak002kn0b9mbr8zxqm","category_id":"ck1p3g2ah002bn0b9n8pj17cr","_id":"ck1p3g2ar0034n0b9h9buedn6"},{"post_id":"ck1p3g2am002on0b99jx5aem3","category_id":"ck1p3g2ah002bn0b9n8pj17cr","_id":"ck1p3g2ar0035n0b9dnwsnwgy"},{"post_id":"ck1p3g2ag0028n0b9jhdjd1p9","category_id":"ck1p3g2ah002bn0b9n8pj17cr","_id":"ck1p3g2ar0038n0b9av2wnkiz"},{"post_id":"ck1p3g2an002sn0b90x4fi0kz","category_id":"ck1p3g2ah002bn0b9n8pj17cr","_id":"ck1p3g2ar0039n0b9zzdhv7hl"},{"post_id":"ck1p3g2ah002dn0b989gagowi","category_id":"ck1p3g2ah002bn0b9n8pj17cr","_id":"ck1p3g2as003bn0b9j869961z"},{"post_id":"ck1p3i63s003pn0b9tqai1fto","category_id":"ck1p3g2ah002bn0b9n8pj17cr","_id":"ck1p3q7tp003rn0b9zki8ymp3"}],"PostTag":[{"post_id":"ck1p3g29k0008n0b9ncdq1og9","tag_id":"ck1p3g29h0005n0b9a2tujhiv","_id":"ck1p3g29o000cn0b97havx6k9"},{"post_id":"ck1p3g29a0001n0b98xawocsu","tag_id":"ck1p3g29h0005n0b9a2tujhiv","_id":"ck1p3g29p000en0b9r45xbor0"},{"post_id":"ck1p3g29e0003n0b9p6xtiamx","tag_id":"ck1p3g29n000bn0b9armwumjv","_id":"ck1p3g29t000ln0b9h3x3cbai"},{"post_id":"ck1p3g29i0007n0b9gesxyv0b","tag_id":"ck1p3g29h0005n0b9a2tujhiv","_id":"ck1p3g29w000rn0b9t86gof25"},{"post_id":"ck1p3g29l0009n0b9ktdbreo1","tag_id":"ck1p3g29v000pn0b9ipctymnz","_id":"ck1p3g29z000xn0b9l3oicpdd"},{"post_id":"ck1p3g29o000dn0b92j9a639y","tag_id":"ck1p3g29y000vn0b94x7naztp","_id":"ck1p3g2a10013n0b9v0e59gc0"},{"post_id":"ck1p3g29p000fn0b9bu5tagr1","tag_id":"ck1p3g2a10011n0b9w4le4zcn","_id":"ck1p3g2a40019n0b96ms3vhb6"},{"post_id":"ck1p3g2a4001an0b91lhwk5bn","tag_id":"ck1p3g2a30018n0b9vv5pwy3p","_id":"ck1p3g2a6001gn0b90rj35av7"},{"post_id":"ck1p3g29t000jn0b9vr65e03f","tag_id":"ck1p3g2a30018n0b9vv5pwy3p","_id":"ck1p3g2a7001jn0b9ofautqlm"},{"post_id":"ck1p3g2a5001dn0b9fxuc8ucb","tag_id":"ck1p3g2a30018n0b9vv5pwy3p","_id":"ck1p3g2a9001on0b9tlnkwc3p"},{"post_id":"ck1p3g2a7001hn0b9aaeozau1","tag_id":"ck1p3g2a30018n0b9vv5pwy3p","_id":"ck1p3g2aa001rn0b9l3su1j8o"},{"post_id":"ck1p3g29u000mn0b9sjywl1d6","tag_id":"ck1p3g2a6001fn0b9yctxw7o4","_id":"ck1p3g2ab001wn0b96bm0qwkl"},{"post_id":"ck1p3g2a8001ln0b99ilcsjsa","tag_id":"ck1p3g2a6001fn0b9yctxw7o4","_id":"ck1p3g2ac001zn0b9kof7e2yh"},{"post_id":"ck1p3g29v000qn0b9q78tad7q","tag_id":"ck1p3g2a6001fn0b9yctxw7o4","_id":"ck1p3g2ae0024n0b9aju1zspw"},{"post_id":"ck1p3g2aa001tn0b9l4mp14wz","tag_id":"ck1p3g2a6001fn0b9yctxw7o4","_id":"ck1p3g2ag0027n0b9jwq81t8a"},{"post_id":"ck1p3g2ac001xn0b9mcr0u6s8","tag_id":"ck1p3g2a6001fn0b9yctxw7o4","_id":"ck1p3g2ah002cn0b9njbj8t80"},{"post_id":"ck1p3g29x000sn0b9zndiagyb","tag_id":"ck1p3g2a6001fn0b9yctxw7o4","_id":"ck1p3g2ai002fn0b9eve018aj"},{"post_id":"ck1p3g2ad0021n0b9qbicsadw","tag_id":"ck1p3g2a6001fn0b9yctxw7o4","_id":"ck1p3g2aj002jn0b9igcx2tbg"},{"post_id":"ck1p3g29y000wn0b9qrtlqfaz","tag_id":"ck1p3g2a6001fn0b9yctxw7o4","_id":"ck1p3g2al002nn0b96h19ra8a"},{"post_id":"ck1p3g29z000yn0b91iifc1kx","tag_id":"ck1p3g2a6001fn0b9yctxw7o4","_id":"ck1p3g2an002rn0b9texyi2zz"},{"post_id":"ck1p3g2a10012n0b9cly2ylo4","tag_id":"ck1p3g2a6001fn0b9yctxw7o4","_id":"ck1p3g2ap002vn0b9fbc37ivb"},{"post_id":"ck1p3g2a20014n0b9wzgnyh94","tag_id":"ck1p3g2an002qn0b95gvy3pki","_id":"ck1p3g2aq002zn0b9dvyrbupp"},{"post_id":"ck1p3g2a30017n0b9t80zksgf","tag_id":"ck1p3g2an002qn0b95gvy3pki","_id":"ck1p3g2aq0033n0b9sqqotkfy"},{"post_id":"ck1p3g2a9001pn0b91qhyzyxu","tag_id":"ck1p3g2aq0031n0b9kzorbxvb","_id":"ck1p3g2ar0037n0b9jn1w16wb"},{"post_id":"ck1p3g2af0025n0b9loxl4kfo","tag_id":"ck1p3g2ar0036n0b9yip5zj8w","_id":"ck1p3g2as003cn0b9h9dxywwy"},{"post_id":"ck1p3g2ag0028n0b9jhdjd1p9","tag_id":"ck1p3g2ar0036n0b9yip5zj8w","_id":"ck1p3g2at003en0b9jxpa8wgs"},{"post_id":"ck1p3g2ah002dn0b989gagowi","tag_id":"ck1p3g2ar0036n0b9yip5zj8w","_id":"ck1p3g2au003gn0b9bear26xu"},{"post_id":"ck1p3g2ai002gn0b977c5qy9c","tag_id":"ck1p3g2ar0036n0b9yip5zj8w","_id":"ck1p3g2av003in0b9laepjdcl"},{"post_id":"ck1p3g2ak002kn0b9mbr8zxqm","tag_id":"ck1p3g2ar0036n0b9yip5zj8w","_id":"ck1p3g2aw003kn0b9kzfokyd8"},{"post_id":"ck1p3g2am002on0b99jx5aem3","tag_id":"ck1p3g2ar0036n0b9yip5zj8w","_id":"ck1p3g2aw003mn0b9wjfblgq9"},{"post_id":"ck1p3g2an002sn0b90x4fi0kz","tag_id":"ck1p3g2ar0036n0b9yip5zj8w","_id":"ck1p3g2ax003nn0b9p43hmwi2"},{"post_id":"ck1p3i63s003pn0b9tqai1fto","tag_id":"ck1p3g2ar0036n0b9yip5zj8w","_id":"ck1p3q7to003qn0b9evthee7v"}],"Tag":[{"name":"css","_id":"ck1p3g29h0005n0b9a2tujhiv"},{"name":"node","_id":"ck1p3g29n000bn0b9armwumjv"},{"name":"hello world","_id":"ck1p3g29v000pn0b9ipctymnz"},{"name":"Html","_id":"ck1p3g29y000vn0b94x7naztp"},{"name":"html","_id":"ck1p3g2a10011n0b9w4le4zcn"},{"name":"canvas","_id":"ck1p3g2a30018n0b9vv5pwy3p"},{"name":"js","_id":"ck1p3g2a6001fn0b9yctxw7o4"},{"name":"es6","_id":"ck1p3g2an002qn0b95gvy3pki"},{"name":"jquery","_id":"ck1p3g2aq0031n0b9kzorbxvb"},{"name":"Vue","_id":"ck1p3g2ar0036n0b9yip5zj8w"}]}}