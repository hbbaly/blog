(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{171:function(t,a,e){t.exports=e.p+"assets/img/git1.72c88c7b.png"},172:function(t,a,e){t.exports=e.p+"assets/img/git4.9f486c66.png"},173:function(t,a,e){t.exports=e.p+"assets/img/git2.ed87c305.png"},174:function(t,a,e){t.exports=e.p+"assets/img/git3.c6775614.png"},175:function(t,a,e){t.exports=e.p+"assets/img/git5.d343899b.png"},176:function(t,a,e){t.exports=e.p+"assets/img/git6.c9f48c6d.png"},177:function(t,a,e){t.exports=e.p+"assets/img/git7.65fb2df9.png"},178:function(t,a,e){t.exports=e.p+"assets/img/git8.baa0c4a9.png"},179:function(t,a,e){t.exports=e.p+"assets/img/git9.04814299.png"},180:function(t,a,e){t.exports=e.p+"assets/img/git10.1ab30cec.png"},181:function(t,a,e){t.exports=e.p+"assets/img/git11.95559eb2.png"},190:function(t,a,e){"use strict";e.r(a);var i=[function(){var t=this,a=t.$createElement,i=t._self._c||a;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"git"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[t._v("#")]),t._v(" Git")]),t._v(" "),i("h2",{attrs:{id:"git-init"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-init","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git init")])]),t._v(" "),i("p",[t._v("初始化一个空的git仓库")]),t._v(" "),i("h2",{attrs:{id:"git-clone"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-clone","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git clone")])]),t._v(" "),i("p",[t._v("克隆一个"),i("code",[t._v("git")]),t._v("仓库到本地")]),t._v(" "),i("h2",{attrs:{id:"git-add"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-add","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git add")])]),t._v(" "),i("p",[t._v("将某个文件添加到缓存\n"),i("img",{attrs:{src:e(171),alt:"gitadd"}})]),t._v(" "),i("p",[t._v('"AM"状态的意思是，这个文件在我们将它添加到缓存之后又有改动。改动后我们再执行 '),i("code",[t._v("git add")]),t._v(" 命令将其添加到缓存中。")]),t._v(" "),i("p",[i("strong",[i("code",[t._v("git add")])]),t._v(" 也可以添加多个文件\n"),i("img",{attrs:{src:e(172),alt:"gitadd"}})]),t._v(" "),i("h2",{attrs:{id:"git-status"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-status","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git status")])]),t._v(" "),i("p",[i("code",[t._v("git status")]),t._v(" 以查看在你上次提交之后是否有修改。 -s 参数，以获得简短的结果输出。如果没加该参数会详细输出内容。")]),t._v(" "),i("h2",{attrs:{id:"git-diff"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-diff","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git diff")])]),t._v(" "),i("p",[i("code",[t._v("git diff")]),t._v(" 来查看执行 git status 的结果的详细信息。")]),t._v(" "),i("p",[i("img",{attrs:{src:e(173),alt:"git diff"}})]),t._v(" "),i("p",[i("code",[t._v("git status")]),t._v(" 显示你上次提交更新后的更改或者写入缓存的改动， 而 "),i("code",[t._v("git diff")]),t._v(" 一行一行地显示这些改动具体是啥。")]),t._v(" "),i("h2",{attrs:{id:"git-commit-m"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-m","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git commit -m")])]),t._v(" "),i("p",[t._v("将缓存区的内容添加到仓库中。")]),t._v(" "),i("p",[i("code",[t._v("Git")]),t._v(" 为你的每一个提交都记录你的名字与电子邮箱地址，所以第一步需要配置用户名和邮箱地址。")]),t._v(" "),i("h3",{attrs:{id:"配置用户名"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#配置用户名","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置用户名")]),t._v(" "),i("pre",[i("code",[t._v("`git config --global user.name 'hbbaly'`\n")])]),t._v(" "),i("h3",{attrs:{id:"配置邮箱"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#配置邮箱","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置邮箱")]),t._v(" "),i("pre",[i("code",[t._v("`git config --global user.email  '1422699902@qq.com'`\n")])]),t._v(" "),i("h2",{attrs:{id:"git-mv"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-mv","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git mv")])]),t._v(" "),i("p",[i("img",{attrs:{src:e(174),alt:"git mv"}})]),t._v(" "),i("p",[t._v("修改某个文件的文件名")]),t._v(" "),i("h2",{attrs:{id:"git-log"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-log","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git log")])]),t._v(" "),i("p",[t._v("git log命令显示从最近到最远的提交日志")]),t._v(" "),i("p",[i("img",{attrs:{src:e(175),alt:"git log"}})]),t._v(" "),i("p",[i("code",[t._v("--pretty=oneline")]),t._v(" 参数显示 commit id(版本号)")]),t._v(" "),i("p",[i("img",{attrs:{src:e(176),alt:"git log"}})]),t._v(" "),i("h2",{attrs:{id:"git-reset-hard-head"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-hard-head","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git reset --hard HEAD^")])]),t._v(" "),i("p",[t._v("在"),i("code",[t._v("Git")]),t._v("中，用"),i("code",[t._v("HEAD")]),t._v("表示当前版本 ,上一个版本就是"),i("code",[t._v("HEAD^")]),t._v("，上上一个版本就是"),i("code",[t._v("HEAD^^")]),t._v("，当然往上100个版本写100个^比较容易数不过来，所以写成 "),i("code",[t._v("HEAD~100")]),t._v("。")]),t._v(" "),i("p",[i("strong",[t._v("也可以这样")])]),t._v(" "),i("p",[i("code",[t._v("git reset --hard 14f51fe")])]),t._v(" "),i("p",[i("code",[t._v("hard")]),t._v(" 后面版本号没必要写全，前几位就可以了， "),i("code",[t._v("Git")]),t._v(" 会自动去找。")]),t._v(" "),i("h2",{attrs:{id:"git-reflog"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-reflog","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git reflog")])]),t._v(" "),i("pre",[i("code",[t._v("用来记录你的每一次命令\n")])]),t._v(" "),i("p",[i("img",{attrs:{src:e(177),alt:"git log"}})]),t._v(" "),i("h2",{attrs:{id:"git-checkout"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git checkout --")])]),t._v(" "),i("p",[i("img",{attrs:{src:e(178),alt:"git log"}})]),t._v(" "),i("pre",[i("code",[t._v("在工作区的修改全部撤销  `只是工作区的修改不包括缓存部分`\n")])]),t._v(" "),i("h2",{attrs:{id:"git-rm"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-rm","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git rm")])]),t._v(" "),i("pre",[i("code",[t._v("删除某个文件\n")])]),t._v(" "),i("h2",{attrs:{id:"git-branch"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-branch","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git branch")])]),t._v(" "),i("pre",[i("code",[t._v("查看分支\n")])]),t._v(" "),i("h2",{attrs:{id:"git-branch-name"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-branch-name","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git branch <name>")])]),t._v(" "),i("pre",[i("code",[t._v("新建分支\n")])]),t._v(" "),i("h2",{attrs:{id:"git-checkout-name"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout-name","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git checkout <name>")])]),t._v(" "),i("pre",[i("code",[t._v("切换分支\n")])]),t._v(" "),i("h2",{attrs:{id:"git-checkout-b-name"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout-b-name","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git checkout -b <name>")])]),t._v(" "),i("pre",[i("code",[t._v("切换并创建分支\n")])]),t._v(" "),i("h2",{attrs:{id:"git-merge-name"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-merge-name","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git merge <name>")])]),t._v(" "),i("pre",[i("code",[t._v("合并某分支到当前分支\n")])]),t._v(" "),i("h2",{attrs:{id:"git-branch-d-name"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-branch-d-name","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git branch -d <name>")])]),t._v(" "),i("pre",[i("code",[t._v("删除分支\n")])]),t._v(" "),i("p",[t._v("操作记录如下图：")]),t._v(" "),i("p",[i("img",{attrs:{src:e(179),alt:"git log"}})]),t._v(" "),i("h2",{attrs:{id:"分支管理策略"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#分支管理策略","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("分支管理策略")])]),t._v(" "),i("p",[i("img",{attrs:{src:e(180),alt:"git log"}})]),t._v(" "),i("pre",[i("code",[t._v('上图可以看出操作，我们首先使用`git checkout develop`切换`develop`分支,修改文件，提交。在切回`master`分支，合并`develop`代码。\n\n```\n  git merge --no-ff -m "merge with no-ff" develop\n```\n\n`--no-ff` 参数，表示禁用`Fast forward`模式，`Git`就会在`merge`时生成一个新的`commit`，这样，从分支历史上就可以看出分支信息。\n\n`-m` 表示把`commit`描述写进去。\n\n`git log --graph --pretty=oneline --abbrev-commit`查看分支记录。\n')])]),t._v(" "),i("p",[i("strong",[t._v("bug分支")])]),t._v(" "),i("p",[t._v("如果工作中我们正在开发某个功能，突然接到一个紧急bug，需要现在修复，而我们手里功能写道一半，还没有提交到（"),i("code",[t._v("git commit")]),t._v("）"),i("strong",[t._v("缓存区")]),t._v("。\n"),i("strong",[t._v("git stash")]),t._v("可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作。")]),t._v(" "),i("p",[i("img",{attrs:{src:e(181),alt:"git stash"}})]),t._v(" "),i("ul",[i("li",[i("p",[t._v("首先"),i("code",[t._v("git stash")]),t._v("把当前工作区中修改的内容保存，"),i("code",[t._v("git status")]),t._v("查看当前工作区，没有修改文件。")])]),t._v(" "),i("li",[i("p",[t._v("创建并切换"),i("strong",[t._v("bug-101")]),t._v("分支，修改并提交。")])]),t._v(" "),i("li",[i("p",[t._v("切换回"),i("code",[t._v("master")]),t._v("分支，合并"),i("strong",[t._v("bug-101")]),t._v(" 分支")])]),t._v(" "),i("li",[i("p",[i("code",[t._v("git stash list")]),t._v("查看之前存储的内容,使用 "),i("code",[t._v("git stash apply")]),t._v("(但是恢复后，stash内容并不删除,也可以使用"),i("code",[t._v("git stash drop")]),t._v(" 回复内容的同时，会删除)")])]),t._v(" "),i("li",[i("h2",{attrs:{id:"丢弃没有被合并过的分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#丢弃没有被合并过的分支","aria-hidden":"true"}},[t._v("#")]),t._v(" 丢弃没有被合并过的分支")]),t._v(" "),i("p",[i("code",[t._v("git branch -D <name>")]),t._v("强制删除")])])]),t._v(" "),i("h2",{attrs:{id:"git-push"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-push","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git push")])]),t._v(" "),i("h2",{attrs:{id:"git-remote"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-remote","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git remote")])]),t._v(" "),i("p",[t._v("当你从远程仓库克隆时，实际上Git自动把本地的master分支和远程的master分支对应起来了，并且，远程仓库的默认名称是"),i("strong",[t._v("origin")]),t._v("。")]),t._v(" "),i("p",[i("code",[t._v("git remote -v")])]),t._v(" "),i("p",[t._v("查看详细远程库信息")]),t._v(" "),i("h2",{attrs:{id:"推送分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#推送分支","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("推送分支")])]),t._v(" "),i("p",[i("code",[t._v("git push origin <当前推送分支>")])]),t._v(" "),i("h2",{attrs:{id:"本地分支与远程分支关联"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#本地分支与远程分支关联","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("本地分支与远程分支关联")])]),t._v(" "),i("p",[i("strong",[i("code",[t._v("git checkout -b <name> origin/<name>")])])]),t._v(" "),i("p",[t._v("在本地创建与远程分支对应的分支。")]),t._v(" "),i("p",[i("strong",[i("code",[t._v("git branch --set-upstream-to=origin/dev dev")])])]),t._v(" "),i("p",[t._v("把本地dev分支与远程dev分支关联。")]),t._v(" "),i("p",[i("strong",[i("code",[t._v("git branch --set-upstream-to=origin/<远程分支> <本地分支>")])])]),t._v(" "),i("h1",{attrs:{id:"git-tag"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-tag","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git tag")])]),t._v(" "),i("p",[t._v("使用"),i("code",[t._v("git")]),t._v(" 创建一个"),i("code",[t._v("tag")]),t._v(" ,一个不可修改的历史代码版本。")]),t._v(" "),i("h2",{attrs:{id:"git-tag-tagname"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-tag-tagname","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git tag tagname")])]),t._v(" "),i("p",[t._v("在当前分支打标签，  "),i("code",[t._v("git tag v1.0")]),t._v("  为当前分支打上v1.0的标签,只是在存储在本地。")]),t._v(" "),i("h2",{attrs:{id:"git-tag-2"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-tag-2","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git tag")])]),t._v(" "),i("p",[t._v("查看当前分支所打标签，标签不是按时间顺序列出，而是按字母排序的")]),t._v(" "),i("p",[t._v("默认标签是打在最新提交的commit上的。有时候之前commit如果忘了打标签")]),t._v(" "),i("p",[t._v("可以找到历史提交的commit id，然后打上就可以了")]),t._v(" "),i("p",[i("code",[t._v("git tag v1.1 4fde738")]),t._v("  中找到commit id 为4fde738 为其打上v1.1标签。")]),t._v(" "),i("h2",{attrs:{id:"git-show-tagname"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-show-tagname","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("git show <tagname>")])]),t._v(" "),i("p",[t._v("查看标签信息")]),t._v(" "),i("h2",{attrs:{id:"git-tag-a-tagname-m-desc-commit-id"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-tag-a-tagname-m-desc-commit-id","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v('git tag -a <tagname> -m "<desc>" commit id')])]),t._v(" "),i("p",[t._v("-a 表示打的标签名，-m 说明文字")]),t._v(" "),i("h2",{attrs:{id:"删除标签"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#删除标签","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("删除标签")])]),t._v(" "),i("p",[i("code",[t._v("git tag -d <tagname>")])]),t._v(" "),i("p",[t._v("因为创建的标签，都是本地存储，没有提交到远程，可以删除。")]),t._v(" "),i("h2",{attrs:{id:"推送某个标签到远程"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#推送某个标签到远程","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("推送某个标签到远程")])]),t._v(" "),i("p",[i("strong",[i("code",[t._v("git push origin <tagname>")])])]),t._v(" "),i("p",[t._v("一次全部推送尚未推送到远程的本地标签")]),t._v(" "),i("p",[i("strong",[i("code",[t._v("git push origin --tags")])])]),t._v(" "),i("h2",{attrs:{id:"删除远程标签"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#删除远程标签","aria-hidden":"true"}},[t._v("#")]),t._v(" "),i("code",[t._v("删除远程标签")])]),t._v(" "),i("p",[t._v("如果标签已经推送到远程，要删除远程标签就麻烦一点，先从本地删除：")]),t._v(" "),i("p",[i("strong",[i("code",[t._v("git tag -d <tagname>")])])]),t._v(" "),i("p",[t._v("从远程删除。删除命令也是push")]),t._v(" "),i("p",[i("strong",[i("code",[t._v("git push origin :refs/tags/<tagname>")])])])])}],r=e(0),v=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},i,!1,null,null,null);a.default=v.exports}}]);